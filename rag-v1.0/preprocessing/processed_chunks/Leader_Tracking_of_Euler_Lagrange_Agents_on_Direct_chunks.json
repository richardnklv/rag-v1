{
  "filename": "Leader_Tracking_of_Euler_Lagrange_Agents_on_Direct.pdf",
  "text_length": 84387,
  "chunk_count": 17,
  "chunks": [
    "1\n\n\n## Leader Tracking of Euler-Lagrange Agents on Directed Switching Networks Using A Model-Independent Algorithm\n\nMengbin Ye Brian D O Anderson, _Life Fellow, IEEE_ Changbin Yu, _Senior Member, IEEE_\n\n\n\n_**Abstract**_ **—In this paper, we propose a discontinuous distributed**\n**model-independent algorithm for a directed network of Euler-**\n**Lagrange agents to track the trajectory of a leader with non-**\n**constant velocity We initially study a fixed network and show**\n**that the leader tracking objective is achieved semi-globally**\n**exponentially fast if the graph contains a directed spanning**\n**tree By model-independent, we mean that each agent executes**\n**its algorithm with no knowledge of the parameter values of**\n**any agent’s dynamics Certain bounds on the agent dynamics**\n**(including any disturbances) and network topology information**\n**are used to design the control gain This fact, combined with**\n**the algorithm’s model-independence, results in robustness to**\n**disturbances and modelling uncertainties Next, a continuous**\n**approximation of the algorithm is proposed, which achieves**\n**practical tracking with an adjustable tracking error Last, we**\n**show that the algorithm is stable for networks that switch with**\n**an explicitly computable dwell time Numerical simulations are**\n**given to show the algorithm’s effectiveness **\n\n\n_**Index Terms**_ **—model-independent, euler-lagrange agent, di-**\n**rected graph, distributed algorithm, tracking, switching network**\n\n\nI I NTRODUCTION\n# C OORDINATION of multi-agent systems using dis-tributed algorithms has been widely studied over the past\n\ndecade [1] Of recent interest is the study of agents whose\ndynamics are described using Euler-Lagrange equations of\nmotion, which from here onwards will be referred to as EulerLagrange agents (in some literature known as Lagrangian\nagents) The non-linear Euler-Lagrange equation can be used\nto model the dynamics of a large class of mechanical, electrical\nand electro-mechanical systems [2] Thus, there is significant motivation to study coordination problems with multiple\nEuler-Lagrange agent The interaction between agents may be\nmodelled using a graph [1], and the agents collectively form a\nnetwork Directed networks capture unilateral interactions (e g sensing or communication) between agents and are generally\nmore desirable when compared to undirected networks To better place our results in context, two existing approaches for designing coordination algorithms for Euler\n\nThis work was supported by the Australian Research Council (ARC)\nunder the ARC grants DP-130103610 and DP-160104500, by the National\nNatural Science Foundation of China (grant 61375072), and by Data61-CSIRO\n(formerly NICTA)",
    "To better place our results in context, two existing approaches for designing coordination algorithms for Euler\n\nThis work was supported by the Australian Research Council (ARC)\nunder the ARC grants DP-130103610 and DP-160104500, by the National\nNatural Science Foundation of China (grant 61375072), and by Data61-CSIRO\n(formerly NICTA) M Ye is supported by an Australian Government Research\nTraining Program (RTP) Scholarship M Ye is with the Research School of Engineering, Australian National University C Yu and B D O Anderson are with the Australian National University\nand with Hangzhou Dianzi University, Hangzhou, China B D O Anderson is\nalso with Data61-CSIRO (formerly NICTA Ltd ), Canberra, Australia _{_ Mengbin Ye, Brian Anderson, Brad Yu _}_ @anu edu au\n\n\n\nLagrange networks are reviewed: model-dependent and adaptive algorithms The aim is to give readers an idea of available\nworks; the list is not exhaustive The papers [3]–[5] study\ndifferent coordination objectives, such as consensus or leader\ntracking, using algorithms that require _exact knowledge of the_\n_agent models_ Specifically, each agent’s algorithm requires\nknowledge of its own Euler-Lagrange equation in order to\nexecute The algorithms are therefore less robust to uncertainties in the model, e The algorithms are therefore less robust to uncertainties in the model, e g g some parameters in the EulerLagrange equation may be unknown or uncertain Recently,\nthe more popular approach is for each agent to use an _adaptive_\n_algorithm_ Specifically, an Euler-Lagrange equation can be\nlinearly parametrised [2] with respect to a set of constant\nparameters of the equation, e",
    "Specifically, an Euler-Lagrange equation can be\nlinearly parametrised [2] with respect to a set of constant\nparameters of the equation, e g the mass of an arm on a\nrobotic manipulator agent This parametrisation is then used\nin an adaptive algorithm to allow the agent to estimate its own\nset of constant parameters (which is assumed to be unknown)\nwhile simultaneously achieving the multi-agent coordination\nobjective Using adaptive algorithms, containment control was\nstudied in [6], [7], while leaderless consensus was studied in\n\n[7], [8] Leader tracking algorithms were studied in [9]–[13] In contrast to the above works, which rely on direct knowledge (or adaptive identification) of an agent model, there\nhave been relatively few works studying _model-independent_\nalgorithms, that is, algorithms for obtaining robust controllers Furthermore, most results study model-independent algorithms\non _undirected_ networks The pioneering work in [14] considered leaderless position consensus, with time-delay considered\nin [15] Consensus to the intersection of target sets is studied\nin [16] Leader-tracking algorithms are studied in [17]–[20] Rendezvous to a stationary leader with collision avoidance\nis studied in [21] For directed networks, several results are\navailable Passivity analysis in [22] showed that synchronisation of the velocities (but not of the positions) is achieved\non strongly connected directed networks Rendezvous to a\nstationary leader and position consensus was studied in [23]\nand [24], respectively, but the papers assumed that the agents\ndid not have a gravitational term in the dynamics Leader\ntracking is studied in [20] but restrictive assumptions are\nplaced on the leader Preliminary work by the authors also\nappeared in [25], and is further analysed below _A Motivation for Model-Independent Algorithms_\n\n\nFurther study of model-independent algorithms is desirable\nfor several reasons Given a unique Euler-Lagrange equation,\n\n\n2\n\n\ndetermining the minimum number of parameters in an adaptive\nalgorithm is difficult in general [26] Moreover, the adaptive\nalgorithms require knowledge of the exact equation structure;\nthe algorithms can deal with uncertain constant parameters\nassociated with the agent dynamics but are not robust to\nunmodelled nonlinear agent dynamics Model-independent algorithms are reminiscent of robust controllers, which stand\nin conceptual contrast to adaptive controllers Stability and\nindeed performance is guaranteed given limited knowledge of\nupper bounds on parameters of the multiagent system, and\nwithout use of any attempt to identify these parameters As will be shown in this paper, and similarly to [23], [24],\nmodel-independent controllers are exponentially stable, with a\ncomputable minimum rate of convergence Exponentially stable systems are desired over systems which are asymptotically\nstable, but not exponentially so, because exponentially stable\nsystems offer improved rejection to small amounts of noise\nand disturbance Some algorithms _requiring exact knowledge_\n_of the Euler-Lagrange equation_ have been shown to be exponentially stable [3], [5] Further, adaptive controllers will yield\nexponential stability if certain conditions are satisfied, e",
    "Further, adaptive controllers will yield\nexponential stability if certain conditions are satisfied, e g g persistency of excitation However, the above detailed works\nusing adaptive algorithms have not verified such conditions _B _B Contributions of this paper_\n\n\nIn this paper, we propose a discontinuous modelindependent algorithm that allows a directed network of EulerLagrange agents to track a leader with arbitrary trajectory First, we assume that the network is fixed and contains a\ndirected spanning tree Then, we relax this assumption to allow\nfor a network with switching/dynamic interactions In order to\nachieve stability, a set of scalar control gains must be sufficiently large, i e satisfy a set of lower bounding inequalities These inequalities involve limited knowledge of the bounds\non the agent dynamic parameters, limited knowledge of the\nnetwork topology, and a bound on the initial conditions (which\nmay be arbitrarily large) This last requirement means the\nalgorithm is semi-globally stable; a larger set of allowed initial\nconditions simply requires recomputing of the control gains It is also shown that the algorithm is robust to heterogeneous,\nbounded disturbances for each individual agent We now record the points of contrast between this paper\nand the previously mentioned existing works While several\nresults have been listed studying leader tracking, most involving model-independent algorithms have been studied on\nundirected graphs Those which do assume directed graphs\nprimarily use _adaptive algorithms_ Most model-independent\nalgorithms on directed networks consider position consensus\nor rendezvous to a stationary leader; introduction of a moving\nleader greatly increases the difficulty of the problem due to the\ncomplex, nonlinear Euler-Lagrange dynamics Additionally,\nthe work in [23], [24] did not consider the gravitational\nterm in the agent dynamics The work [20] studies a modelindependent leader tracking algorithm on directed graphs,\nwith the restrictive assumption that the leader trajectory is\ngoverned by a marginally stable linear time-invariant second\norder system, and the system matrix known to all agents A\n\n\n\n_major contribution of this paper is to allow for any arbitrary_\n_leader trajectory which satisfies some mild and reasonable_\n_smoothness and boundedness properties_ In addition, [20] does\nnot establish an exponential stability property, whereas the\nalgorithm proposed in this paper does A preliminary version of this paper appeared in [25] This\npaper significantly extends the preliminary version in several\naspects First, we introduce an additional control gain which\nallows for an additional degree of freedom in selecting the\ncontrol gains to ensure stability Moreover, increasing the\nnew gain ensures stability but at the same time, it does not\nnegatively affect convergence rate, unlike in [25] Second, we\naddress the issues arising from the discontinuous nature of the\ncontrol algorithm by using an approximation of the signum\nfunction An explicit expression relating the tracking error\nto the degree of approximation and control gain is derived",
    "An explicit expression relating the tracking error\nto the degree of approximation and control gain is derived Additionally, switching topology is considered Details of\nomitted proofs are also now provided The paper is structured as follows Section II introduces\nmathematical preliminaries, and the problem The problem\nwith fixed network topology, and dynamic topology, is solved\nin Section III and IV, respectively Simulations are provided\nin Section V and the paper concluded in Section VI II B ACKGROUND AND P ROBLEM S TATEMENT\n\n\n_A Mathematical Notation and Matrix Theory_\n\n\nTo begin with, definitions of notation and several results are\nnow provided The Kronecker product is denoted as _⊗_ Denote\nthe _p × p_ identity matrix as _**I**_ _p_ and the _n_ -column vector of all\nones as **1** _n_ The _l_ 1 -norm and Euclidean norm of a vector _**x**_,\nand matrix _**A**_, are denoted by _∥·∥_ 1 and _∥· ∥_ 2, respectively The\n\n_·_\nsignum function is denoted as sgn( ) For an arbitrary vector\n_**x**_, the function sgn( _**x**_ ) is defined element-wise A matrix _**A**_ =\n_**A**_ _[⊤]_ that is positive definite (respectively nonnegative definite)\nis denoted by _**A**_ _>_ 0 (respectively _**A**_ _≥_ 0) For two symmetric\nmatrices _**A**_ _,_ _**B**_, _**A**_ _>_ _**B**_ is equivalent to _**A**_ _−_ _**B**_ _>_ 0 For a\nmatrix _**A**_ = _**A**_ _[⊤]_, the minimum and maximum eigenvalues are\n_λ_ min ( _**A**_ ) and _λ_ max ( _**A**_ ) respectively The following inequalities\nhold\n\n\n_λ_ min ( _**A**_ ) _> λ_ max ( _**B**_ ) _⇒_ _**A**_ _>_ _**B**_ (1a)\n\n\n_λ_ max ( _**A**_ + _**B**_ ) _≤_ _λ_ max ( _**A**_ ) + _λ_ max ( _**B**_ ) (1b)\n\n\n_λ_ min ( _**A**_ + _**B**_ ) _≥_ _λ_ min ( _**A**_ ) + _λ_ min ( _**B**_ ) (1c)\n\n_λ_ min ( _**A**_ ) _**x**_ _[⊤]_ _**x**_ _≤_ _**x**_ _[⊤]_ _**Ax**_ _≤_ _λ_ max ( _**A**_ ) _**x**_ _[⊤]_ _**x**_ (1d)\n\n\n**Definition 1 ** _A function f_ ( _**x**_ ) : _D →_ R _, where D ⊆_ R _[n]_ _, is_\n_said to be positive definite in D if f_ ( _**x**_ ) _>_ 0 _for all_ _**x**_ _∈D,_\n_except f_ ( **0** ) = 0 _ _\n\n\n**Lemma 1** (The Schur Complement [27]) ** ** _Consider a sym-_\n_metric block matrix, partitioned as_\n\n\n\n_**B**_ _**C**_\n_**A**_ =\n� _**C**_ _[⊤]_ _**D**_\n\n\n\n(2)\n�\n\n\n\n_Then,_ _**A**_ _>_ 0 _if and only if_ _**B**_ _>_ 0 _and_ _**D**_ _−_ _**C**_ _[⊤]_ _**B**_ _[−]_ [1] _**C**_ _>_ 0 _,_\n_or equivalently, if and only if_ _**D**_ _>_ 0 _and_ _**B**_ _−_ _**CD**_ _[−]_ [1] _**C**_ _>_ 0 _ _\n\n\n**Lemma 2 ** _Suppose_ _**A**_ _>_ 0 _is defined as in_ (2) _ Let_\n_a quadratic function with arguments_ _**x**_ _,_ _**y**_ _be expressed as_\n_W_ = [ _**x**_ _[⊤]_ _,_ _**y**_ _[⊤]_ ] _**A**_ [ _**x**_ _[⊤]_ _,_ _**y**_ _[⊤]_ ] _[⊤]_ _ Define_ _**F**_ := _**B**_ _−_ _**CD**_ _[−]_ [1] _**C**_ _[⊤]_\n\n_and_ _**G**_ := _**D**_ _−_ _**C**_ _[⊤]_ _**B**_ _[−]_ [1] _**C**_ _ Then, there holds_\n\n\n_λ_ min ( _**F**_ ) _**x**_ _[⊤]_ _**x**_ _≤_ _**x**_ _[⊤]_ _**F x**_ _≤_ _W_ (3a)\n\n_λ_ min ( _**G**_ ) _**y**_ _[⊤]_ _**y**_ _≤_ _**y**_ _[⊤]_ _**Gy**_ _≤_ _W_ (3b)\n\n\n_Proof _ We obtain (3b) by recalling Lemma 1 and observing\nthat _W_ = _**y**_ _[⊤]_ _**Gy**_ + [ _**y**_ _[⊤]_ _**C**_ _[⊤]_ _**B**_ _[−]_ [1] + _**x**_ _[⊤]_ ] _**B**_ [ _**B**_ _[−]_ [1] _**Cy**_ + _**x**_ ] An\nequally straightforward proof yields (3a) **Lemma 3 ** _Let g_ ( _x, y_ ) _be a function given as_\n\n\n_g_ ( _x, y_ ) = _ax_ [2] + _by_ [2] _−_ _cxy_ [2] _−_ _dxy_ (4)\n\n\n_for real positive scalars c, d >_ 0 _ Then for a given Y >_ 0 _,_\n_there exist a, b >_ 0 _such that g_ ( _x, y_ ) _is positive definite for all_\n_y ∈_ [0 _, ∞_ ) _and x ∈_ [0 _, X_ ] _ _\n\n\n_Proof _ Observing that _cxy_ [2] _≤_ _cX_ _y_ [2] for all _x ∈_ [0 _, X_ ], yields\n\n\n_g_ ( _x, y_ ) _≥_ _ax_ [2] + ( _b −_ _cX_ ) _y_ [2] _−_ _dxy_ (5)\n\n\nif _y ∈_ [0 _, ∞_ ) and _x ∈_ [0 _, X_ ] because _c >_ 0 For any fixed\nvalue of _y_ = _y_ 1 _∈_ [0 _, ∞_ ), write ¯ _g_ ( _x_ ) = _ax_ [2] + ( _b −_ _cX_ ) _y_ 1 [2] _[−]_\n_dxy_ 1 The discriminant of ¯ _g_ ( _x_ ) is negative if\n\n_b > cX_ + _[d]_ [2] (6)\n\n4 _a_\n\n\nwhich implies that the roots of ¯ _g_ ( _x_ ) are complex, i",
    "The discriminant of ¯ _g_ ( _x_ ) is negative if\n\n_b > cX_ + _[d]_ [2] (6)\n\n4 _a_\n\n\nwhich implies that the roots of ¯ _g_ ( _x_ ) are complex, i e ¯ _g_ ( _x_ ) _>_ 0\nand this holds for any _y_ 1 _∈_ [0 _, ∞_ ) We thus conclude that\nfor all _y ∈_ [0 _, ∞_ ) and _x ∈_ [0 _, X_ ], if _a, b_ satisfies (6), then\n_g_ ( _x, y_ ) _>_ 0 except the case where _g_ ( _x, y_ ) = 0 if and only if\n_x_ = _y_ = 0 **Corollary 1 ** _Let h_ ( _x, y_ ) _be a function given as_\n\n\n_h_ ( _x, y_ ) = _ax_ [2] + _by_ [2] _−_ _cxy_ [2] _−_ _dxy −_ _ex −_ _fy_ (7)\n\n\n_where the real positive scalars c, d, e, f and two further_\n_positive scalars ε, ϑ are fixed Suppose that for given Y, X_\n_there holds Y −_ _ε >_ 0 _, and X −_ _ϑ >_ 0 _ Define the sets_\n_U_ = _{x, y_ : _x ∈_ [ _X −_ _ϑ, X_ ] _, y >_ 0 _} and V_ = _{x, y_ : _x >_\n0 _, y ∈_ [ _Y −_ _ε, Y_ ] _} Define the region R_ = _U ∪V Then, there_\n_exist a, b >_ 0 _such that h_ ( _x, y_ ) _is positive definite in R _\n\n_̸_\n\n_Proof _ Observe that _h_ ( _x, y_ ) = _g_ ( _x, y_ ) _−ex−fy_ where _g_ ( _x, y_ )\nis defined in Lemma 3 Let _a_ _[∗]_ _, b_ _[∗]_ be such that they satisfy\ncondition (6) in Lemma 3 and thus _g_ ( _x, y_ ) _>_ 0 for _x ∈_ [0 _, X_ ]\nand _y ∈_ [0 _, ∞_ ) Note that the positivity condition on _g_ ( _x, y_ )\nin Lemma 3 continues to hold for any _a ≥_ _a_ _[∗]_ and any _b ≥_ _b_ _[∗]_ Let _a_ 1 and _b_ 1 be positive scalars whose magnitudes will be\ndetermined later Define _a_ = _a_ 1 + _a_ _[∗]_ and _b_ = _b_ 1 + _b_ _[∗]_ Define\n_z_ ( _x, y_ ) ≜ _a_ 1 _x_ [2] + _b_ 1 _y_ [2] _−_ _ex −_ _fy_ Next, consider ( _x,_ ¯ _y_ ) _∈V_,\nwhere ¯ _y_ is some fixed value It follows that\n\n\n¯\n_z_ ( _x,_ ¯ _y_ ) = _a_ 1 _x_ [2] _−_ _ex_ + ( _b_ 1 _y_ [2] _−_ _f_ ¯ _y_ ) (8)\n\n\n¯\nNote the discriminant of _z_ ( _x,_ ¯ _y_ ) is _D_ _x_ = _e_ [2] _−_ 4 _a_ 1 ( _b_ 1 _y_ [2] _−_ _f_ ¯ _y_ ) It follows that _D_ _x_ _<_ 0 if _b_ 1 _y_ ¯ [2] _> f_ ¯ _y_ + _e_ [2] _/_ 4 _a_ 1 This is satisfied,\nindependently of ¯ _y ∈_ [ _Y −_ _ε, Y_ ], for any _b_ 1 _≥_ _b_ 1 _,y_, _a_ 1 _≥_ _a_ 1 _,y_\nwhere\n\n\n\n3\n\n\nbecause _Y −_ _ε ≤_ _y_ ¯ It follows that _D_ _x_ _<_ 0 _⇒_ _z_ ( _x, y_ ) _>_ 0 in\n_V_ Now, consider (¯ _x, y_ ) _∈U_ for some fixed value ¯ _x_ It follows\nthat\n\n\n¯ ¯\n_z_ (¯ _x, y_ ) = _b_ 1 _y_ [2] _−_ _fy_ + ( _a_ 1 _x_ [2] _−_ _ex_ ) (10)\n\n\n¯\nand note the discriminant of _z_ (¯ _x, y_ ) is _D_ _y_ = _f_ [2] _−_ 4 _b_ 1 ( _a_ 1 _x_ [2] _−_\n\n¯ ¯ ¯\n_ex_ ) Suppose that _a_ 1 _> e/X_, which ensures that _a_ 1 _x_ [2] _−_ _ex >_\n\n¯ ¯\n0 Then, _D_ _y_ _<_ 0 if _b_ 1 ( _a_ 1 _x_ [2] _−_ _ex_ ) _> f/_ 4 This is satisfied,\nindependently of ¯ _x ∈_ [ _X −_ _ϑ, X_ ], for any _b_ 1 _≥_ _b_ 1 _,x_, _a_ 1 _≥_ _a_ 1 _,x_\nwhere\n\n_f_\n_b_ 1 _,x_ _>_ 4( _a_ 1 _,x_ ( _X −_ _ϑ_ ) [2] _−_ _e_ ( _X −_ _ϑ_ )) (11)\n\n\nIt follows that _D_ _y_ _<_ 0 _⇒_ _z_ ( _x, y_ ) _>_ 0 in _U_ We conclude that\nsetting _b_ = _b_ _[∗]_ + max[ _b_ 1 _,x_ _, b_ 1 _,y_ ] and _a_ = _a_ _[∗]_ + max[ _a_ 1 _,x_ _, a_ 1 _,y_ ],\nimplies _h_ ( _x, y_ ) _>_ 0 in _R_, except _h_ (0 _,_ 0) = 0 The results of Lemma 3 and Corollary 1 are almost intuitively obvious However, the detailed statements in the proof\nlay out explicit inequalities for _a, b_ These inequalities will\nbe used to show that for any given Euler-Lagrange network,\n_control gains can always be found_ to ensure leader tracking\nis achieved _B Graph Theory_\n\n\nThe agent interactions can be modelled by a weighted\ndirected graph which is denoted as _G_ = ( _V, E, A_ ), with the set\nof nodes _V_ = _{v_ 0 _, v_ 1 _, , v_ _n_ _}_, and with a corresponding set\nof ordered edges _E ⊆V × V_ A directed edge _e_ _ij_ = ( _v_ _i_ _, v_ _j_ ) is\noutgoing with respect to _v_ _i_ and incoming with respect to _v_ _j_,\nand implies that _v_ _j_ is able to obtain some information from _v_ _i_ The precise nature of this information will be made clear in\nthe sequel",
    "The precise nature of this information will be made clear in\nthe sequel The weighted adjacency matrix _A ∈_ R [(] _[n]_ [+1)] _[×]_ [(] _[n]_ [+1)]\n\nof _G_ has nonnegative elements _a_ _ij_ The elements of _A_ have\nproperties such that _a_ _ij_ _>_ 0 _⇔_ _e_ _ji_ _∈E_ while _a_ _ij_ = 0\nif _e_ _ji_ _/∈E_ and it is assumed _a_ _ii_ = 0 _, ∀i_ The neighbour\nset of _v_ _i_ is denoted by _N_ _i_ = _{v_ _j_ _∈V_ : ( _v_ _j_ _, v_ _i_ ) _∈E}_ The ( _n_ + 1) _×_ ( _n_ + 1) Laplacian matrix, _L_ = _{l_ _ij_ _}_, of the\nassociated digraph _G_ is defined as _l_ _ij_ = _−a_ _ij_ for _j ̸_ = _i_ and\n_l_ _ij_ = [�] _[n]_ _k_ =1 _,k_ = _̸_ _i_ _[a]_ _[ik]_ [ if] _[ j]_ [ =] _[ i]_ [ A directed spanning tree is]\na directed graph formed by directed edges of the graph that\nconnects all the nodes, and where every vertex apart from\nthe root has exactly one parent A graph is said to contain a\nspanning tree if a subset of the edges forms a spanning tree We make use of the following standard lemma **Lemma 4** ( [28]) ** ** _Let G contain a directed spanning tree,_\n_and suppose there are no edges which are incoming to the_\n_root vertex of the tree, which without loss of generality, is set_\n_as v_ 0 _ Then the Laplacian of G can be partitioned as_\n\n\n\n_̸_\n\n\n0 **0**\n_L_ =\n� _L_ 11 _L_ 22\n\n\n\n_̸_\n\n\n(12)\n�\n\n\n\n_̸_\n\n\n_e_ [2]\n_b_ 1 _,y_ _>_\n\n\n\n_̸_\n\n\n_e_ _f_\n\n4 _a_ 1 _,y_ ( _Y −_ _ε_ ) [2] [+] _Y −_ _ε_ (9)\n\n\n\n_̸_\n\n\n_and ∃_ **Γ** _>_ 0 _which is diagonal and_ **Γ** _L_ 22 + _L_ _[⊤]_ 22 **[Γ]** _[ >]_ [ 0] _[ ]_\n\n\nFor future use, denote the _i_ _[th]_ diagonal element of **Γ** as _γ_ _i_\nand define ¯ _γ_ ≜ max _i_ _γ_ _i_ and _γ_ ≜ min _i_ _γ_ _i_ 4\n\n\n_C Euler-Lagrange Systems_\n\nThe _i_ _[th]_ Euler-Lagrange agent’s equation of motion is:\n\n\n_**M**_ _i_ ( _**q**_ _i_ )¨ _**q**_ _i_ + _**C**_ _i_ ( _**q**_ _i_ _,_ ˙ _**q**_ _i_ ) ˙ _**q**_ _i_ + _**g**_ _i_ ( _**q**_ _i_ ) + _**ζ**_ _i_ = _**τ**_ _i_ (13)\n\n\nwhere _**q**_ _i_ ( _t_ ) _∈_ R _[p]_ is a vector of the generalised coordinates Note that from here onwards, we drop the time argument\n_t_ whenever there is no ambiguity The inertia matrix is\n_**M**_ _i_ ( _**q**_ _i_ ) _∈_ R _[p][×][p]_, _**C**_ _i_ ( _**q**_ _i_ _,_ ˙ _**q**_ _i_ ) _∈_ R _[p][×][p]_ is the Coriolis and\ncentrifugal force matrix, _**g**_ _i_ _∈_ R _[p]_ is the vector of (gravitational) potential forces and _**ζ**_ _i_ ( _t_ ) is an unknown, timevarying disturbance It is assumed that all agents are fullyactuated, with _**τ**_ _i_ _∈_ R _[p]_ being the control input vector For\neach agent, the _k_ _[th]_ generalised coordinate is denoted using\nsuperscript ( _k_ ); thus _**q**_ _i_ = [ _q_ _i_ [(1)] _, , q_ _i_ [(] _[p]_ [)] ] _[⊤]_ It is assumed that\nthe systems described using (13) have the following properties\ngiven below:\n\nP1 The matrix _**M**_ _i_ ( _**q**_ _i_ ) is symmetric positive definite P2 There exist scalar constants _k_ _m_ _,_ ~~_k_~~ _M_ _>_ 0 such that\n_k_ _m_ _**I**_ _p_ _≤_ _**M**_ _i_ ( _**q**_ _i_ ) _≤_ ~~_k_~~ _M_ ~~_**I**_~~ _p_ _, ∀_ _i,_ _**q**_ _i_ It follows that\nP3 The matrixskew-symmetric, i e sup _**q**_ _i_ _∥_ _**M**_ _i_ _**C**_ _∥_ 2 _≤_ _i_ ( _**q**_ ~~_k_~~ _i_ _,_ _M_ ˙ _**q**_ _i_ and) _**M**_ is defined such that˙ _i_ _k_ = _m_ _**C**_ _≤_ _i_ +inf _**C**_ _**q**_ _i_ _∥_ _[⊤]_ _i_ [ ] _**M**_ _[−]_ _i_ [1] _**M**_ _[∥]_ ˙ [2] _i_ [ holds] _−_ 2 _**C**_ _[ ∀]_ _i_ is _[i]_ [ ]\nP4 There exist scalar constants _k_ _C_ _, k_ _g_ _>_ 0 such that\n_∥_ _**C**_ _i_ _∥_ 2 _≤_ _k_ _C_ _∥_ _**q**_ ˙ _i_ _∥_ 2 _, ∀_ _i,_ ˙ _**q**_ _i_ and _∥_ _**g**_ _i_ _∥_ 2 _< k_ _g_ _, ∀i_ P5 There exists a constant _k_ _ζ_ such that _∥_ _**ζ**_ _i_ _∥_ 2 _≤_ _k_ _ζ_ _, ∀_ _i_ Properties P1-P4 are standard and widely assumed properties\nof Euler-Lagrange dynamical systems, see [2] for details Property P5 is a reasonable assumption on disturbances _D Problem Statement_\n\n\nThe leader is denoted as agent 0, i e vertex _v_ 0, with _**q**_ 0 (t)\nand ˙ _**q**_ 0 ( _t_ ) being its time-varying generalised coordinates and\ngeneralised velocity, respectively The objective is to develop\na model-independent, distributed algorithm which allows a\ndirected network of Euler-Lagrange agents to synchronise\nand track the trajectory of the leader The leader tracking\nobjective is said to be achieved if lim _t→∞_ _∥_ _**q**_ _i_ ( _t_ ) _−_ _**q**_ 0 ( _t_ ) _∥_ 2 = 0\nand lim _t→∞_ _∥_ _**q**_ ˙ _i_ ( _t_ ) _−_ _**q**_ ˙ 0 ( _t_ ) _∥_ 2 = 0 for all _i_ = 1 _,",
    "The leader tracking\nobjective is said to be achieved if lim _t→∞_ _∥_ _**q**_ _i_ ( _t_ ) _−_ _**q**_ 0 ( _t_ ) _∥_ 2 = 0\nand lim _t→∞_ _∥_ _**q**_ ˙ _i_ ( _t_ ) _−_ _**q**_ ˙ 0 ( _t_ ) _∥_ 2 = 0 for all _i_ = 1 _, , n_ By model-independent, we mean that the algorithm does not\ncontain _**M**_ _i_ _,_ _**C**_ _i_ _,_ _**g**_ _i_ _∀_ _i_ nor make use of an associated linear\nparametrisation Two mild assumptions are now given **Assumption 1 ** _The leader trajectory_ _**q**_ 0 ( _t_ ) _is a C_ [2] _func-_\n_tion with derivatives_ _**q**_ ˙ 0 _and_ ¨ _**q**_ 0 _which are bounded as_\n_∥_ **1** _n_ _⊗_ _**q**_ ˙ 0 _∥_ 2 _≤_ _k_ _p_ _and ∥_ **1** _n_ _⊗_ _**q**_ ¨ 0 _∥_ 2 _≤_ _k_ _q_ _ The positive constants_\n_k_ _p_ _, k_ _q_ _are known a priori _\n\n\n**Assumption 2 ** _All possible initial conditions lie in some fixed_\n_but arbitrarily large set that is known In particular, ∥_ _**q**_ _i_ _∥_ 2 _≤_\n_k_ _a_ _/_ _[√]_ ~~_n_~~ _and ∥_ _**q**_ ˙ _i_ _∥_ 2 _≤_ _k_ _b_ _/_ _[√]_ ~~_n,_~~ _where k_ _a_ _, k_ _b_ _are known a priori _\n\n\nThese two assumptions are not unreasonable, as many\nsystems will have an expected operating range for _**q**_ and ˙ _**q**_ The follower agents’ capability to _sense_ relative states\nis captured by the directed graph _G_ _A_ with an associated\nLaplacian _L_ _A_ In Section III, we assume _G_ _A_ is fixed Later in\nSection IV, it is assumed that _G_ _A_ is dynamic, i e time-varying Thus, if _a_ _ij_ _>_ 0 then agent _i_ can sense _**q**_ _i_ _−_ _**q**_ _j_ and ˙ _**q**_ _i_ _−_ _**q**_ ˙ _j_ We denote the neighbour set of agent _i_ on _G_ _A_ as _N_ _Ai_ We\nfurther assume that agent _i_ can measure its own _**q**_ _i_ and ˙ _**q**_ _i_ A\nsecond weighted and directed time-varying graph _G_ _B_ ( _t_ ), with\nthe associated Laplacian _L_ _B_ ( _t_ ), exists between the followers\nto _communicate_ estimates of the leader’s state Denote the\nneighbour set of agent _i_ on _G_ _B_ ( _t_ ) at time _t_ as _N_ _Bi_ ( _t_ ) Note\nthat _v_ _j_ _∈N_ _Bi_ ( _t_ ) when agent _j_ communicates directly to agent\n_i_ its estimates of the leader’s state at time _t_ (the precise nature\nof this estimate is described in Section III-A) Further note\nthat _G_ _A_ is not necessarily equal to _G_ _B_ and so _N_ _Ai_ _̸_ = _N_ _Bi_ in\ngeneral However the node sets of _G_ _A_ and _G_ _B_ are the same **Remark 1** (Comparison of this paper to recent leader tracking\nresults) ** ** _Almost all mechanical systems will have trajectories_\n_which satisfy the mild Assumption 1 In comparison, more_\n_restrictive assumption are made on the leader trajectory in_\n\n_[13], [20] In [13], [20], the leader trajectory is describable_\n_by an LTI system, with system matrix defined as_ _**S**_ _ In [13], it_\n_is assumed that all eigenvalues of_ _**S**_ _are purely imaginary _\n_In [20], it is assumed that_ _**S**_ _is marginally stable More_\n_importantly, both [13] and [20] assume that_ _**S**_ _is_ _**known to**_\n_**all agents**_ _, which is a highly restrictive assumption As will_\n_become apparent in the sequel, we use a distributed observer_\n_to allow every agent to obtain_ _**q**_ 0 ( _t_ ) _and_ ˙ _**q**_ 0 ( _t_ ) _precisely The_\n_work [12] has similar assumptions to this paper, but uses an_\n_adaptive algorithm and is therefore fundamentally different to_\n_the model-independent controller studied in this paper _\n\n\nIII L EADER T RACKING ON F IXED D IRECTED N ETWORKS\n\n\n_A Finite-Time Distributed observer_\n\n\nBefore we show the main result, we detail a distributed\nfinite-time observer developed in [29] which allows each\nfollower agent to obtain _**q**_ 0 and ˙ _**q**_ 0 Let � _**r**_ _i_ and � _**v**_ _i_ be the _i_ _[th]_\n\nagent’s estimated values for the leader position and velocity\nrespectively Agent _i ∈{_ 1 _, , n}_ runs the observer\n\n\n_**r**_ �˙ _i_ = � _**v**_ _i_ _−_ _ω_ 1 sgn � � _b_ _ij_ ( _t_ )( _**r**_ � _i_ _−_ _**r**_ � _j_ )� (14a)\n\n_j∈N_ _Bi_ ( _t_ )\n\n\n�˙ � �\n_**v**_ _i_ = _−ω_ 2 sgn � � _b_ _ij_ ( _t_ )( _**v**_ _i_ _−_ _**v**_ _j_ )� (14b)\n\n_j∈N_ _Bi_ ( _t_ )\n\n\nwhere _b_ _ij_ are the elements of the adjacency matrix associated\nwith graph _G_ _B_ ( _t_ ) and _ω_ 1 _, ω_ 2 _>_ 0 are internal gains of the\nobserver Clearly, if _a_ _i_ 0 _>_ 0 then agent _i_ can directly sense\nthe leader, _v_ 0 and thus learns of _**q**_ 0 and ˙ _**q**_ 0 For such an agent _i_,\nwe set _b_ _i_ 0 _>_ 0 and � _**r**_ 0 ( _t_ ) = _**q**_ 0 ( _t_ ) and � _**v**_ 0 ( _t_ ) = ˙ _**q**_ 0 ( _t_ ); agent _i_\nstill runs the distributed observer (14) We now give a theorem\nfor convergence of the observer, and explain below why all\nfollowers execute (14) even if they learn of _**q**_ 0, ˙ _**q**_ 0 from _G_ _A_ **Theorem 1** (Theorem 4 1 of [29]) ** ** _Suppose that the leader_\n_trajectory_ _**q**_ 0 ( _t_ ) _satisfies Assumption 1 If at every t, G_ _B_ ( _t_ )\n_contains a directed spanning tree, and ω_ 2 _> k_ _q_ _/n then, for_\n_some T_ 1 _< ∞, there holds_ � _**r**_ _i_ ( _t_ ) = _**q**_ 0 ( _t_ ) _and_ � _**v**_ _i_ ( _t_ ) = ˙ _**q**_ 0 ( _t_ )\n_for all i ∈{_ 1 _, , n}, for all t ≥_ _T_ 1 _ _\n\n\nThe key reason for agent _i_ to run the distributed observer\neven if _a_ _i_ 0 _>_ 0 (and thus agent _i_ knows _**q**_ 0 and ˙ _**q**_ 0 ) is to\nensure robustness to network changes over time (e",
    "_\n\n\nThe key reason for agent _i_ to run the distributed observer\neven if _a_ _i_ 0 _>_ 0 (and thus agent _i_ knows _**q**_ 0 and ˙ _**q**_ 0 ) is to\nensure robustness to network changes over time (e g switching\n\n\ntopology due to loss of connection) switching\n\n\ntopology due to loss of connection) We elaborate further In\nthe case of a fixed _G_ _A_, then agent _i_ will know _**q**_ 0 and ˙ _**q**_ 0\nfor all _t_ and there will be no need for the observer However,\nwe explore switching _G_ _A_ ( _t_ ) in Section IV Consider the case\nwhere _a_ _i_ 0 ( _t_ ) = 1 for _t ∈_ [0 _,_ 10) and _a_ _i_ 0 ( _t_ ) = 0 for _t ∈_\n\n[10 _, ∞_ ) If agent _i_ does not run (14), then for _t ≥_ 10, it would\nnot know _**q**_ 0 ( _t_ ) and ˙ _**q**_ 0 ( _t_ ) because _a_ _i_ 0 ( _t_ ) = 0 _⇒_ _b_ _i_ 0 ( _t_ ) = 0 If agent _i_ runs (14) from _t_ = 0, then for all _t ≥_ _T_ 1, it is\nguaranteed that � _**r**_ 1 ( _t_ ) = _**q**_ 0 ( _t_ ) and � _**v**_ 1 ( _t_ ) = ˙ _**q**_ 0 ( _t_ ) even if _G_ _A_ ( _t_ )\nswitches, so long as the connectivity condition in Theorem 1 is\nsatisfied A second reason is that agent _i_ may acquire states by\nsensing over _G_ _A_ ; (14) acts as a filter for noisy measurements _B Model-Independent Control Law_\n\nConsider the following algorithm for the _i_ _[th]_ agent\n\n\n˙\n\n_τ_ _i_ = _−η_ � _a_ _ij_ �( _**q**_ _i_ _−_ _**q**_ _j_ ) + _µ_ ( ˙ _**q**_ _i_ _−_ _**q**_ _j_ )�\n\n_j∈N_ _Ai_\n\n\n� �\n_−_ _β_ sgn (( _**q**_ _i_ _−_ _**r**_ _i_ ) + _µ_ ( ˙ _**q**_ _i_ _−_ _**v**_ _i_ )) (15)\n\n\nwhere _a_ _ij_ is the weighted ( _i, j_ ) entry of the adjacency matrix\n_A_ associated with the weighted directed graph _G_ _A_ The control\ngains _µ, η_ and _β_ are strictly positive constants and their design\nwill be specified later For simplicity, it is assumed that _η >_ 1 Note that for all _i_, for all _t > T_ 1, � _**r**_ _i_ is replaced with _**q**_ 0 and\n_**v**_ � _i_ replaced with ˙ _**q**_ 0 Let us denote the new error variable � _**q**_ _i_ = _**q**_ _i_ _−_ _**q**_ 0 Let\n_**q**_ � = [ _**q**_ � _[⊤]_ 1 _[, ,]_ [ �] _**[q]**_ _[⊤]_ _n_ []] _[⊤]_ _[∈]_ [R] _[np][×]_ [1] [ the stacked column vector of]\nall � _**q**_ _i_ The leader tracking objective is therefore achieved if\n_**q**_ �( _t_ ) = _**q**_ � [˙] ( _t_ ) = 0 as _t →∞_ We denote _**g**_ = [ _**g**_ _[⊤]_ 1 _[, ,]_ _**[ g]**_ _[⊤]_ _n_ []] _[⊤]_ [,]\n_**ζ**_ = [ _**ζ**_ _[⊤]_ 1 _[, ,]_ _**[ ζ]**_ _[⊤]_ _n_ []] _[⊤]_ [,] _**[ q]**_ [ = [] _**[q]**_ _[⊤]_ 1 _[, ,]_ _**[ q]**_ _[⊤]_ _n_ []] _[⊤]_ [, and][ ˙] _**[q]**_ [ = [ ˙] _**[q]**_ 1 _[⊤]_ _[, ,]_ [ ˙] _**[q]**_ _[⊤]_ _n_ []] _[⊤]_\n\nas the _np ×_ 1 stacked column vectors of all _**g**_ _i_ _,_ _**ζ**_ _i_ _,_ _**q**_ _i_ and\n_**q**_ ˙ _i_ respectively Let _**M**_ ( _**q**_ ) = _diag_ [ _**M**_ 1 ( _**q**_ 1 ) _, ,_ _**M**_ _n_ ( _**q**_ _n_ )] _∈_\nR _[np][×][np]_, and _**C**_ ( _**q**_ _,_ ˙ _**q**_ ) = _diag_ [ _**C**_ 1 ( _**q**_ 1 _,_ ˙ _**q**_ 1 ) _, ,_ _**C**_ _n_ ( _**q**_ _n_ _,_ ˙ _**q**_ _n_ )] _∈_\nR _[np][×][np]_ Since _**M**_ _i_ _>_ 0 _, ∀_ _i_ then _**M**_ is also symmetric positive definite Define an error vector, _**e**_ _i_ = � _**r**_ _i_ _−_ _**q**_ 0 _, ∀i_ = 1 _, , n_\nand ˙ _**e**_ _i_ = � _**v**_ _i_ _−_ _**q**_ ˙ 0 Define _**e**_ = [ _**e**_ _[⊤]_ 1 _[, ,]_ _**[ e]**_ _[⊤]_ _n_ []] _[⊤]_ _[∈]_ [R] _[np][×]_ [1] [,]\n_**e**_ ˙ = [˙ _**e**_ _[⊤]_ 1 _[, ,]_ [ ˙] _**[e]**_ _[⊤]_ _n_ []] _[⊤]_ _[∈]_ [R] _[np][×]_ [1] [ ]\nThe definition of � _**q**_ _i_ yields _**M**_ _i_ _**q**_ � [¨] _i_ = _**M**_ _i_ _**q**_ ¨ _i_ _−_ _**M**_ _i_ _**q**_ ¨ 0 and\ncombining the agent dynamics (13) and the control law (15),\nthe closed-loop system for the follower network, with nodes\n_v_ 1 _, , v_ _n_, can be expressed as\n\n\n�¨ � � �\n_**q**_ _∈_ _[a e ]_ _K_ � _−_ _**M**_ _[−]_ [1] [ _**Cq**_ [˙] + _η_ ( _L_ 22 _⊗_ _**I**_ _p_ )( _**q**_ + _µ_ _**q**_ [˙] ) + _**g**_ + _**ζ**_\n\n+ _β_ sgn ( _**s**_ + _µ_ _**s**_ ˙ ) + _**M**_ ( **1** _n_ _⊗_ _**q**_ ¨ 0 ) + _**C**_ ( **1** _n_ _⊗_ _**q**_ ˙ 0 )]� (16)\n\n\nwhere _K_ denotes the differential inclusion, _a e _ stands for\n“almost everywhere” and _**s**_ = � _**q**_ _−_ _**e**_ Here, _L_ 22 is the lower\nblock matrix of _L_ _A_ as partitioned in (12) Filippov solutions\nof � _**q**_ and _**q**_ � [˙] for (16) exist because the signum function is\nmeasurable and locally essentially bounded, and � _**q**_ and _**q**_ � [˙] are\nabsolutely continuous functions of time [30] _C An Upper Bound Using Initial Conditions_\n\n\nBefore proceeding with the main proof, we calculate an\nupper bound (which may not be tight) on the initial states\nexpressed as _∥_ _**q**_ �(0) _∥_ 2 _< X_ and _∥_ _**q**_ � [˙] (0) _∥_ 2 _< Y_ using Assumption 2 In the sequel, we show that these bounds hold for all\n\n\n\n5\n\n\ntime, and exponential convergence results In keeping with the\nmodel-independent approach, define\n\n\n\nand notice that _∥_ _**q**_ �(0) _∥_ 2 _≤X_ 1 _≤X_ Similarly, _Y_ is obtained\nusing (3b), with the steps omitted due to spatial limitations Because both sides of (22) are independent of _µ_, the values\n_Y_ and _X_ do not change for all _µ ≥_ _µ_ _[∗]_ 3 [ ]\n\n\n1 Note that ¯ _V_ _µ_ is not a Lyapunov function\n\n\n\n_⊤_ _ηλ_ max ( _**X**_ ) _**I**_ _np_ 21 _[µ]_ _[−]_ [1] [(] ~~_[k]_~~ _M_ [+] _[ δ]_ [)] _**[I]**_ _[np]_\n1 1\n� � 2 _[µ]_ _[−]_ [1] [(] ~~_[k]_~~ _M_ [+] _[ δ]_ [)] _**[I]**_ _[np]_ 2 [(] ~~_[k]_~~ _M_ [+] _[ δ]_ [)] _**[I]**_ _[np]_\n\n\n\n�\n\n\n\n_V_ ¯ _µ_ = _**q**_ �˙\n�� _**q**_\n\n\n\n��� _**qq**_ �˙\n\n\n\n(17)\nwhere [1], _**X**_ = ( **Γ** _L_ 22 + _L_ _[⊤]_ 22 **[Γ]** [)] _[ ⊗]_ _**[I]**_ _[p]_ _[>]_ [ 0][ from Lemma 4]\nand the constant _δ_ _>_ 0 is sufficiently small such that\n_k_ _m_ _−_ _δ >_ 0 Without loss of generality, assume that **Γ**\nis scaled such that ¯ _γ_ = 1 Let the matrix in (17) be\n_**L**_ _µ_ By observing that ( ~~_k_~~ _M_ + _δ_ ) _**I**_ _np_ _>_ _**M**_, then according\nto Lemma 1, _**L**_ _µ_ _>_ 0 if and only if _ηλ_ max ( _**X**_ ) _**I**_ _np_ _−_\n1\n2 _[µ]_ _[−]_ [2] [(] ~~_[k]_~~ _M_ [+] _[ δ]_ [)] _**[I]**_ _[np]_ _[ >]_ [ 0][ It follows that] _**[ L]**_ _[µ]_ _[ >]_ [ 0][ for any]\n_µ ≥_ _µ_ _[∗]_ 1 [where] _[ µ]_ _[∗]_ 1 _[>]_ ~~�~~ ( ~~_k_~~ _M_ + _δ_ ) _/_ 2 _λ_ max ( _**X**_ ) Since _**X**_ _>_ 0,\n\nsuch a _µ_ _[∗]_ 1 [always exists For convenience, we use][ ¯] _[V]_ _[µ]_ [(] _[t]_ [)][ to]\ndenote _V_ [¯] _µ_ ( _**q**_ �( _t_ ) _,_ _**q**_ � [˙] ( _t_ )), and observe that there holds\n\n\n\n_V_ ¯ _µ_ ( _t_ ) _≤_ _ηλ_ max ( _**X**_ ) _∥_ _**q**_ � _∥_ 2 [2] [+(] ~~_[k]_~~ _M_ [+] _[δ]_ [)] � 1 2 [+] _[µ]_ _[−]_ [1] _[∥]_ _**[q]**_ [�] _[∥]_ [2] _[∥]_ _**[q]**_ [�][˙] _[∥]_ [2] �\n\n2 _[∥]_ _**[q]**_ [�][˙] _[∥]_ [2]\n\n\n\nfor all _t_ Next, define\n\n\n\n(18)\n\n\n_**q**_ �˙ (19)\n��� _**q**_ �\n\n\n\n_⊤_ 1\n\n2 _[ηλ]_ [min] [(] _**[X]**_ [)] _**[I]**_ _[np]_ _[ µ]_ _[−]_ [1] _[γ]_ [(] _[k]_ _[m]_ _[−][δ]_ [)] _**[I]**_ _[np]_\n\n� � _µ_ _[−]_ [1] _γ_ ( _k_ _m_ _−δ_ ) _**I**_ _np_ _γ_ ( _k_ _m_ _−δ_ ) _**I**_ _np_\n\n\n\n_V_ ~~_µ_~~ = [1] 2\n\n\n\n�� _**qq**_ �˙\n\n\n\nCall the matrix in (19) _**N**_ _µ_ Similarly to above, use Lemma 1\nto show that _**N**_ _µ_ _>_ 0 for any _µ ≥_ _µ_ _[∗]_ 2 [where] _[ µ]_ _[∗]_ 2 _>_\n\n2 _γ_ ( _k_ _m_ _−_ _δ_ ) _/λ_ min ( _**X**_ ) Set _µ_ _[∗]_ 3 [= max] _[{][µ]_ _[∗]_ 1 _[, µ]_ _[∗]_ 2 _[}]_ [ Define]\n\n�\n\n_ρ_ 1 ( _µ_ ) = _ηλ_ max ( _**X**_ ) _−_ [1] [+] _[ δ]_ [)] (20a)\n\n2 _[µ]_ _[−]_ [2] [(] ~~_[k]_~~ _[M]_\n\n\n\n_ρ_ 2 ( _µ_ ) = _η_ [1]\n\n\n\n\n[1]\n\n4 _[λ]_ [min] [(] _**[X]**_ [)] _[ −]_ [1] 2\n\n\n\n\n_[−]_ _[δ]_ [)] (20b)\n2 _[µ]_ _[−]_ [2] _[γ]_ [(] _[k]_ _[m]_\n\n\n\nand verify that _ρ_ 1 ( _µ_ _[∗]_ 3 [)] _[ > ρ]_ [2] [(] _[µ]_ _[∗]_ 3 [)][ Note that for any] _[ µ][ ≥]_ _[µ]_ _[∗]_ 3\nthere holds _V_ [¯] _µ_ _≤_ _V_ [¯] _µ_ _[∗]_ 3 [and] _[ ρ]_ _[i]_ [(] _[µ]_ 3 _[∗]_ [)] _[ ≤]_ _[ρ]_ _[i]_ [(] _[µ]_ [)] _[, i]_ [ = 1] _[,]_ [ 2][ Compute]\n\n\n¯ _−_ 1\n_V_ _[∗]_ = _ηλ_ max ( _**X**_ ) _k_ _a_ [2] [+ 1] 2 [(] ~~_[k]_~~ _[M]_ [+] _[ δ]_ [)] _[k]_ _b_ [2] [+] _[ µ]_ _[∗]_ 3 ( ~~_k_~~ _M_ + _δ_ ) _k_ _a_ _k_ _b_\n\n\nFrom Assumption 2, one has that _∥_ _**q**_ �(0) _∥_ 2 _≤_ _k_ _a_ and\n_∥_ _**q**_ � [˙] (0) _∥_ 2 _≤_ _k_ _b_ Thus, one concludes from (18) and the above\nequation that there holds _V_ [¯] _µ_ (0) _≥_ _V_ [¯] _[∗]_ for any _µ ≥_ _µ_ _[∗]_ 3 [ Because]\nwe assumed _η >_ 1, it follows from Lemma 2 and (3a) that\n\n\n\n�\n\n\n\n_V_ ¯ _µ_ (0)\n\n� _ρ_ 1 ( _µ_ _[∗]_ 3 [)] _[ <]_\n\n\n\n_V_ ¯ _∗_ (0)\n(21)\n_ρ_ 2 ( _µ_ _[∗]_ 3 [)][ ≜] _[X]_ [1]\n\n\n\n�\n_∥_ _**q**_ (0) _∥_ 2 _≤_\n\n\n\n�\n\n\n\n_Vρ_ ¯ 1 _µ_ (( _µ_ 0)) _[≤]_\n\n\n\nFollowing a similar method yields _Y_ 1 Next, compute\n\n\n� 2 2 _∗_\n_V_ _[∗]_ = _ηλ_ max ( _**X**_ ) _X_ 1 + [1] [+] _[δ]_ [)] _[Y]_ [1] +( _µ_ 3 [)] _[−]_ [1] [(] ~~_[k]_~~ _M_ [+] _[δ]_ [)] _[X]_ [1] _[Y]_ [1]\n\n2 [(] ~~_[k]_~~ _[M]_\n\n\nand observe that _V_ [¯] _[∗]_ _≤_ _V_ [�] _[∗]_ Lastly, compute the bound\n\n\n\n�\n\n_X_ = � _V_ _∗_ _/ρ_ 2 ( _µ_ _[∗]_ 3 [)] (22)\n\n\n6\n\n\n_D Stability Proof_\n\n\n**Theorem 2 ** _Suppose that the conditions in Theorem 1 are_\n_satisfied Under Assumptions 1 and 2, the leader-tracking is_\n_achieved exponentially fast if 1) the network G_ _A_ _contains a_\n_directed spanning tree with the leader as the root node, and_\n_2) the control gains µ, η, β satisfy a set of lower bounding_\n_inequalities_ [2] _ For a given G_ _A_ _containing a directed spanning_\n_tree, there always exists µ, η, β which satisfy the inequalities _\n\n\n_Proof _ The proof will be presented in four parts In _Part 1_,\nwe study a Lyapunov-like candidate function _V_ In _Part 2_, we\nanalyse _V_ [˙] and show that it is upper bounded _Part 3_ shows\nthat the system trajectory remains bounded for all time, and\nexponential convergence is proved in _Part 4_ _Part 1:_ Consider the Lyapunov-like candidate function\n\n\n\nSubstituting _**q**_ � [¨] from (16) and using Assumption P3 we obtain\n\n\n˙ � _⊤_ � � _⊤_ �\n_V_ 3 _∈K_ _−_ _η_ _**q**_ [˙] ( **Γ** _L_ 22 _⊗_ _**I**_ _p_ ) _**q**_ _−_ _µη_ ˙ _**q**_ ( **Γ** _L_ 22 _⊗_ _**I**_ _p_ ) ˙ _**q**_\n�\n\n� _⊤_ ˙ �˙ _⊤_\n_−_ _β_ _**q**_ [˙] **Γ** _p_ sgn ( _**s**_ + _µ_ _**s**_ ) _−_ _**q**_ **Γ** _p_ (∆+ _**C**_ ( **1** _n_ _×_ ˙ _**q**_ 0 )) (28)\n�\n\n\nWhen combining _V_ [˙] _∈_ _V_ [˙] 1 + _V_ [˙] 2 + _V_ [˙] 3 notice that _V_ [˙] 1, the\n\n� �\nterm _−_ _**q**_ _[⊤]_ ( **Γ** _L_ 22 _⊗_ _**I**_ _p_ ) _**q**_ [˙] of (26) and the first summand of\n\n� ˙\n(28) cancel Let _**x**_ = � _**q**_ + _µ_ _**q**_ [˙] and _**y**_ = _**e**_ + _µ_ _**e**_ Recalling the\ndefinition of _**s**_ = � _**q**_ _−_ _**e**_, we thus have\n\n\n\n˙ 1\n_V ∈−µ_ _[−]_ [1] _K_ � 2\n\n\n\n1\n\n2 _[η]_ _**[q]**_ [�] _[⊤]_ _**[X][q]**_ [�][ + 1] 2\n\n\n\n2 _[µ]_ [2] _[η]_ [ ˙] _**[q]**_ [�] _⊤_ _**X**_ ˙ _**q**_ � _−_ _**q**_ �˙ _⊤_ **Γ** _p_ _**M**_ ˙ _**q**_ �\n\n\n\n\n[1]\n\n2 _[η]_ _**[q]**_ [�] _[⊤]_ _**[X][q]**_ [�][+] _[µ]_ _[−]_ [1] _**[q]**_ [�] _[⊤]_ **[Γ]** _[p]_ _**[M]**_ [ ˙] _**[q]**_ [�][+ 1] 2\n\n\n\n_V_ = [1]\n\n\n\n2 _**q**_ �˙ _⊤_ **Γ** _p_ _**M**_ ˙ _**q**_ � = _V_ 1 + _V_ 2 + _V_ 3\n\n\n\nwith _**X**_ given below (17), and **Γ** _p_ = **Γ** _⊗_ _**I**_ _p_ Observe that\n\n\n\n_⊤_ 1 1\n\n_V_ = _**q**_ �˙ 1 2 _[η]_ _**[X]**_ 2 _[µ]_ 1 _[−]_ [1] **[Γ]** _[p]_ _**[M]**_\n�� _**q**_ � � 2 _[µ]_ _[−]_ [1] **[Γ]** _[p]_ _**[M]**_ 2 **[Γ]** _[p]_ _**[M]**_\n\n\n\n� � ˙\n_−_ _**q**_ _[⊤]_ **Γ** _p_ _**C**_ _[⊤]_ _**q**_ [˙] + _**x**_ _[⊤]_ **Γ** _p_ _**C**_ ( **1** _⊗_ _**q**_ 0 ) _−_ _**x**_ _[⊤]_ **Γ** _p_ ∆\n\n\n_−_ _β_ _**x**_ _[⊤]_ **Γ** _p_ sgn( _**x**_ _−_ _**y**_ ) (29)\n�\n\n\nFrom the bounds on _**g**_, _**M**_ and **1** _⊗_ _**q**_ ¨ 0, and because we\nnormalised ¯ _γ_ = 1, it follows that _**x**_ _[⊤]_ **Γ** _p_ ∆ _≤_ _ξ∥_ _**x**_ _∥_ 2 where\n_ξ_ = _k_ _g_ + _k_ _ζ_ + ~~_k_~~ _M_ _k_ _q_ From Assumption P4, the property\nof norms and the definition of � _**q**_, it follows that _∥_ _**C**_ _∥_ 2 =\n_∥_ _**C**_ _[⊤]_ _∥_ 2 _≤_ _k_ _C_ _∥_ _**q**_ ˙ _∥_ 2 _≤_ _k_ _C_ ( _∥_ _**q**_ � [˙] _∥_ 2 + _k_ _p_ ) Thus\n\n\n_**q**_ � _[⊤]_ **Γ** _p_ _**C**_ _[⊤]_ _**q**_ � [˙] _≤_ _k_ _C_ _k_ _p_ _∥_ _**q**_ � _∥_ 2 _∥_ _**q**_ � [˙] _∥_ 2 + _k_ _C_ _∥_ _**q**_ � _∥_ 2 _∥_ _**q**_ � [˙] _∥_ 22 (30a)\n\n( _**q**_ � + _µ_ _**q**_ � [˙] ) _[⊤]_ **Γ** _p_ _**C**_ ( **1** _⊗_ _**q**_ ˙ 0 ) _≤_ _k_ _C_ _k_ _p_ _∥_ _**q**_ � _∥_ 2 _∥_ _**q**_ � [˙] _∥_ 2 + _µk_ _C_ _k_ _p_ _∥_ _**q**_ � [˙] _∥_ 22\n\n+ _µk_ _C_ _k_ _p_ [2] _[∥][µ]_ _[−]_ [1] _**[q]**_ [�][ + ˙] _**[q]**_ [�] _[∥]_ [2] (30b)\n\n\nLet _ϕ_ ( _µ, η_ ) = 21 _[µ]_ [2] _[ηλ]_ [min] [(] _**[X]**_ [)] _[ −]_ _[µk]_ _[C]_ _[k]_ _[p]_ _[ −]_ ~~_[k]_~~ _M_ ~~[ ]~~ [ Define the]\nfunctions _V_ [˙] _A_ (absolutely continuous) and _V_ [˙] _B_ (set-valued) as\n\n\n˙ � 2 2\n_V_ _A_ = _−µ_ _[−]_ [1] [�] _ϕ_ ( _µ, η_ ) _∥_ _**q**_ [˙] _∥_ 2 + 1\n\n2 _[ηλ]_ [min] [(] _**[X]**_ [)] _[∥]_ _**[q]**_ [�] _[∥]_ [2]\n\n\n� � � � 2\n_−_ 2 _k_ _C_ _k_ _p_ _∥_ _**q**_ _∥_ 2 _∥_ _**q**_ [˙] _∥_ 2 _−_ _k_ _C_ _∥_ _**q**_ _∥_ 2 _∥_ _**q**_ [˙] _∥_ 2 �\n\n\n� �\n≜ _−µ_ _[−]_ [1] _g_ ( _∥_ _**q**_ _∥_ 2 _, ∥_ _**q**_ [˙] _∥_ 2 ) (31a)\n\n\n˙\n_V_ _B_ _∈_ _µ_ _[−]_ [1] _K_ � _−_ _β_ _**x**_ _[⊤]_ **Γ** _p_ sgn( _**x**_ _−_ _**y**_ ) + _k_ _C_ _k_ _p_ [2] _[∥]_ _**[x]**_ _[∥]_ [2] [+] _[ ξ][∥]_ _**[x]**_ _[∥]_ [2] �\n\n(31b)\n\n\nBy applying the inequalities in (30), and the eigenvalue\ninequalities noted in Section II-A, we conclude that\n\n\n_V_ ˙ _≤_ _V_ ˙ _A_ + ˙ _V_ _B_ (32)\n\n\n_Part 3:_ In _Part 3 1_, we study _V_ ˙ _A_ and _V_ ˙ _B_ separately\nto establish negative definiteness properties Then, _Part 3 2_\nstudies _V_ [˙] _A_ + _V_ [˙] _B_ and proves a boundedness property _Part 3 1:_ Consider the region of the state variables given\nby _∥_ _**q**_ �( _t_ ) _∥_ 2 _∈_ [0 _, X_ ] and _∥_ _**q**_ � [˙] ( _t_ ) _∥_ 2 _∈_ [0 _, ∞_ ) where _X >_ 0 was\ncomputed in Section III-C One can compute a _µ_ _[∗]_ 5 _[≥]_ _[µ]_ _[∗]_ 4 [and]\n_η_ 1 _[∗]_ [such that] _[ ϕ]_ [(] _[µ, η]_ [)] _[ >]_ [ 0] _[,][ ∀][µ][ ≥]_ _[µ]_ _[∗]_ 5 _[, η][ ≥]_ _[η]_ 1 _[∗]_ [ Note that] _**[ L]**_ _[µ]_ _[>]_\n_**H**_ _µ_ _>_ _**N**_ _µ_ _>_ 0 continues to hold Observe that _g_ ( _∥_ _**q**_ � _∥_ 2 _, ∥_ _**q**_ � [˙] _∥_ 2 )\nin (31a) is of the same form as _g_ ( _x, y_ ) in Lemma 3 with\n\n� �\n_x_ = _∥_ _**q**_ _∥_ 2 and _y_ = _∥_ _**q**_ [˙] _∥_ 2 With _b_ = _ϕ_ ( _µ, η_ ) _>_ 0, check if\nthe inequality _ϕ_ ( _µ_ _[∗]_ 5 _[, η]_ 1 _[∗]_ [)] _[ >]_ 2 _η_ ( 1 ~~_[∗]_~~ 2 _[λ]_ _k_ _[min]_ _C_ _k_ _p_ [(] ) _**[X]**_ [2] [)] [+] _[ k]_ _[C]_ _[X]_ [ holds If the]\n\ninequality holds then _V_ [˙] _A_ in (31a) is negative definite in the\nregion and proceed to _Part 3 2_ However, if the inequality does\nnot hold, then there exists a _µ_ _[∗]_ 6 _[≥]_ _[µ]_ _[∗]_ 5 [and] _[ η]_ 2 _[∗]_ _[≥]_ _[η]_ 1 _[∗]_ [such that]\n\n_ϕ_ ( _µ_ _[∗]_ 6 _[, η]_ 2 _[∗]_ [)] _[ >]_ (2 _k_ _C_ _k_ _p_ ) [2] (33)\n\n2 _η_ 2 _[∗]_ _[λ]_ _[min]_ [(] _**[X]**_ [) +] _[ k]_ _[C]_ _[X]_\n\n\n\n��� _**qq**_ �˙\n\n\n\n(23)\n�\n\n\n\nCall the matrix in (23) _**H**_ _µ_ From Lemma 1, and the assumed\nproperties of _**M**_ _i_, there holds _**H**_ _µ_ _>_ 0 if and only if _η_ _**X**_ _−_\n_µ_ _[−]_ [2] **Γ** _p_ _**M**_ _>_ 0, which is implied by _λ_ min ( _**X**_ ) _−_ _µ_ _[−]_ [2] ~~_k_~~ _M_ _>_ 0 This is because ~~_k_~~ _M_ _≥_ sup _**q**_ _λ_ max ( _**M**_ ), and we assumed that\n_η >_ 1 and ¯ _γ_ = 1 For any _µ ≥_ _µ_ _[∗]_ 4 [, where]\n\n\n\n_µ_ _[∗]_ 4 _[>]_\n�\n\n\n\n2 ~~_k_~~ _M_ ~~_/_~~ _λ_ min ( _**X**_ ) (24)\n\n\n\nthere holds _**L**_ _µ_ _>_ _**H**_ _µ_ _>_ _**N**_ _µ_ _>_ 0 because _µ_ _[∗]_ 4 _[≥]_ _[µ]_ _[∗]_ 3 [as defined]\nbelow (19) Thus, although the eigenvalues _λ_ _i_ ( _**H**_ _µ_ ) depend on\n_**q**_ ( _t_ ), there holds _λ_ min ( _**N**_ _µ_ ) _≤_ _λ_ _i_ ( _**H**_ _µ_ ) _≤_ _λ_ max ( _**L**_ _µ_ ) for all _i_,\nand for all _t ≥_ 0 Thus, for any _µ ≥_ _µ_ _[∗]_ 4 [,] _[ V >]_ [ 0][ and is radially]\nunbounded For simplicity, let _V_ ( _t_ ) denote _V_ ( _**q**_ �( _t_ ) _,_ _**q**_ � [˙] ( _t_ )) and\nobserve that _V_ ( _t_ ) _<_ _V_ [¯] _µ_ ( _t_ ) _, ∀_ _t_ because\n\n\n\n\n[1] 2 + [1]\n\n2 _[ηλ]_ [max] [(] _**[X]**_ [)] _[∥]_ _**[q]**_ [�][(] _[t]_ [)] _[∥]_ [2] 2\n\n\n\n_V_ ( _t_ ) _≤_ [1]\n\n\n\n2\n2 ~~_[k]_~~ _[M]_ ~~_[∥]_~~ _**[q]**_ [�][˙] [(] _[t]_ [)] _[∥]_ [2]\n\n\n\n+ _µ_ _[−]_ [1] ~~_k_~~ _M_ _∥_ _**q**_ �( _t_ ) _∥_ 2 _∥_ _**q**_ � [˙] ( _t_ ) _∥_ 2 (25)\n\n\n_Part 2:_ Let _V_ [˙] be the set-valued derivative of _V_ with respect\nto time, along the trajectories of the system (16) From (2) we\nobtain _V_ [˙] = _V_ [˙] 1 + _V_ [˙] 2 + _V_ [˙] 3 We obtain _V_ [˙] 1 = _η_ _**q**_ � _[⊤]_ _**Xq**_ � [˙] The\nsecond summand yields\n\n_V_ ˙ 2 _∈_ _µ_ _[−]_ [1] _**q**_ �˙ _⊤_ **Γ** _p_ _**M**_ ˙ _**q**_ � + _µ_ _−_ 1 _**q**_ � _⊤_ **Γ** _p_ ˙ _**M**_ ˙ _**q**_ � + _µ_ _−_ 1 _**q**_ � _⊤_ **Γ** _p_ _**M**_ _× K_ _**q**_ �¨\n� �\n\n\nSubstituting _**q**_ � [¨] from (16), and using Assumption P3, we obtain\n\n\n˙ � � � � _⊤_ �\n_V_ 2 _∈K_ _−_ _**q**_ _[⊤]_ ( **Γ** _p_ _L_ 22 _⊗_ _**I**_ _p_ )( _µ_ _[−]_ [1] _η_ _**q**_ + _η_ _**q**_ [˙] ) + _µ_ _[−]_ [1] [ ˙] _**q**_ **Γ** _p_ _**M**_ ˙ _**q**_\n�\n\n+ _µ_ _[−]_ [1] _**q**_ � _[⊤]_ **Γ** _p_ _**C**_ _[⊤]_ _**q**_ � [˙] _−_ _µ_ _[−]_ [1] _**q**_ � _[⊤]_ **Γ** _p_ (∆+ _**C**_ ( **1** _n_ _×_ ˙ _**q**_ 0 ))\n\n\n� ˙\n_−_ _βµ_ _[−]_ [1] _**q**_ _[⊤]_ **Γ** _p_ sgn ( _**s**_ + _µ_ _**s**_ ) (26)\n�\n\n\nwhere ∆= _**g**_ + _**ζ**_ + _**M**_ ( **1** _n_ _×_ ¨ _**q**_ 0 ) Similarly, _V_ [˙] 3 is\n\n_V_ ˙ 3 _∈_ _**q**_ �˙ _⊤_ **Γ** _p_ _**M**_ _× K_ _**q**_ �¨ + [1] _**q**_ �˙ _⊤_ **Γ** _p_ ˙ _**M**_ ˙ _**q**_ � (27)\n� � 2\n\n\n2 In Remark 3, we detail an approach for designing the gains Recall from (17) and (22) that _V_ [�] _[∗]_ is dependent on _η_, but\nindependent of _µ_ because _µ_ _[∗]_ 6 _[≥]_ _[µ]_ _[∗]_ 3 [ One could leave] _[ η]_ 2 _[∗]_ [=] _[ η]_ 1 _[∗]_\nand find a sufficiently large _µ_ _[∗]_ 6 [to satisfy (33) Alternatively,]\nwe could increase _η_ Notice that _ρ_ 2 ( _µ_ _[∗]_ 3 [)][ and][ �] _[V]_ _[ ∗]_ [are both of]\n_O_ ( _η_ ) Thus, as _η_ increases, _X_ becomes independent of _η_,\nwhereas _ϕ_ = _O_ ( _η_ ) We conclude that there exists a sufficiently\nlarge _η_ 2 _[∗]_ [satisfying (33), and for which] _[ X]_ [1] [,] _[ Y]_ [1] [,] _[ X]_ [,] _[ Y]_ [ need not]\nbe recomputed With _µ_ _[∗]_ 6 _[, η]_ 2 _[∗]_ [satisfying (33),][ ˙] _[V]_ _[A]_ _[<]_ [ 0][ in the]\naforementioned region Now consider _V_ [˙] _B_ over two time intervals, _t_ _P_ = [0 _, T_ 1 ) and\n_t_ _Q_ = [ _T_ 1 _, T_ 2 ), where _T_ 1 is given in Theorem 1 and _T_ 2 is the\ninfimum of those values of _t_ for which one of the inequalities\n_∥_ _**q**_ �( _t_ ) _∥_ 2 _< X_, _∥_ _**q**_ � [˙] ( _t_ ) _∥_ 2 _< Y_ fails In _Part 3 2_, we argue that\nwithout loss of generality, it is possible to take _T_ 2 _> T_ 1 In\nfact, we establish that the inequalities never fail; _T_ 2 does not\nexist and thus _t_ _Q_ = [ _T_ 1 _, ∞_ ) [3] Consider firstly _t ∈_ _t_ _P_ Observe that the set-valued function\n_−β_ _**x**_ _[⊤]_ **Γ** _p_ sgn( _**x**_ _−_ _**y**_ ) is upper bounded by the single-valued\nfunction _β∥_ _**x**_ _∥_ 1 Recalling _V_ [˙] _B_ in (31b) yields\n\n\n_V_ ˙ _B_ _≤_ ( _[√]_ _nβ_ + _k_ _C_ _k_ _p_ [2] [+] _[ ξ]_ [)(] _[µ]_ _[−]_ [1] _[∥]_ _**[q]**_ [�] _[∥]_ [2] [+] _[ ∥]_ _**[q]**_ [�][˙] _[∥]_ [2] [) := ˙] _[V]_ _B_ (34)\n\n\nbecause _∥· ∥_ 2 _≤∥· ∥_ 1 _≤_ _[√]_ ~~_n∥_~~ _· ∥_ 2 [27] For _t ∈_ _t_ _Q_, Theorem 1 yields that _**e**_ ( _t_ ) = ˙ _**e**_ ( _t_ ) = **0**, which\nimplies that _**y**_ = **0** Thus, the set-valued term _K_ [ _**x**_ _[⊤]_ **Γ** _p_ sgn( _**x**_ _−_\n_**y**_ )] in (31b) becomes the singleton _K_ [ _**x**_ _[⊤]_ **Γ** _p_ sgn( _**x**_ )] =\n_{∥_ **Γ** _p_ _**x**_ _∥_ 1 _}_ (since **Γ** _p_ _>_ 0 is diagonal) It then follows that\n\n\n˙\n_V_ _B_ = _−µ_ _[−]_ [1] _β∥_ **Γ** _p_ _**x**_ _∥_ 1 + _k_ _C_ _k_ _p_ [2] _[∥]_ _**[x]**_ _[∥]_ [2] [+] _[ ξ][∥]_ _**[x]**_ _[∥]_ [2] (35)\n\n\nIn other words, _V_ [˙] _B_ for _t ∈_ _t_ _Q_ is a continuous, single-valued\nfunction in the variables˙ � _**q**_ and _**q**_ � [˙] For _t ∈_ _t_ _Q_, we observe that\n_V_ _B_ _≤−µ_ _[−]_ [1] ( _βγ −_ _k_ _C_ _k_ _p_ [2] _[−]_ _[ξ]_ [)] _[∥]_ _**[q]**_ [�][ +] _[ µ]_ _**[q]**_ [ ˙][�] _[∥]_ [1] _[<]_ [ 0][ if]\n\n\n_β >_ ( _k_ _C_ _k_ _p_ [2] [+] _[ ξ]_ [)] _[/][γ]_ (36)\n\n\n_Part 3 2:_ To aid in this part of the proof, refer to Figure 1 _V_ ˙ _B_ Consider firstly ~~,~~ which gives _V_ [˙] for _t ∈_ _t_ _P_ Specifically, let _V_ [˙] _t_ _P_ ≜ _V_ [˙] _A_ +\n\n\n˙ � 2 2\n_V_ _t_ _P_ = _−µ_ _[−]_ [1] [�] _ϕ_ ( _µ, η_ ) _∥_ _**q**_ [˙] _∥_ 2 + 12 _[ηλ]_ [min] [(] _**[X]**_ [)] _[∥]_ _**[q]**_ [�] _[∥]_ [2]\n\n\n� � � � 2\n_−_ 2 _k_ _C_ _k_ _p_ _∥_ _**q**_ _∥_ 2 _∥_ _**q**_ [˙] _∥_ 2 _−_ _k_ _C_ _∥_ _**q**_ _∥_ 2 _∥_ _**q**_ [˙] _∥_ 2\n\n\n� �\n_−_ ( _[√]_ _nβγ_ + _k_ _C_ _k_ _p_ [2] [+] _[ ξ]_ [)] � _∥_ _**q**_ _∥_ 2 + _µ∥_ _**q**_ [˙] _∥_ 2 � [�]\n\n\n� �\n≜ _−µ_ _[−]_ [1] _p_ ( _∥_ _**q**_ _∥_ 2 _, ∥_ _**q**_ [˙] _∥_ 2 ) (37)\n\n\nNote that _V_ [˙] _≤_ _V_ [˙] _t_ _P_, i e _V_ [˙] for _t ∈_ _t_ _P_ is a differential inclusion\nwhich is upper bounded by a continuous function Observe that\n_p_ ( _∥_ _**q**_ � _∥_ 2 _, ∥_ _**q**_ � [˙] _∥_ 2 ) is of the form of _h_ ( _x, y_ ) in Corollary 1 with\n\n� �\n_x_ = _∥_ _**q**_ _∥_ 2 and _y_ = _∥_ _**q**_ [˙] _∥_ 2 Here, _b_ = _ϕ_ ( _µ, η_ ), _a_ = 2 [1] _[ηλ]_ [min] [(] _**[X]**_ [)][,]\n\n_c_ = _k_ _C_, _d_ = 2 _k_ _C_ _k_ _p_, _e_ = ( _[√]_ ~~_nβ_~~ + _k_ _C_ _k_ _p_ [2] [+] _[ξ]_ [)][ and] _[ f]_ [ =] _[ µe]_ [ Thus,]\nfor some given _ϑ, ε, X_ _, Y_ satisfying the requirements detailed\nin Corollary 1, one can use (9) and (11) to find a _µ, η_ such\nthat _p_ ( _∥_ _**q**_ � _∥_ 2 _, ∥_ _**q**_ � [˙] _∥_ 2 ) is positive definite in the region _R_ Note\nthat _ϑ, ε_ can be selected by the designer Choose _ϑ > X −X_ 1\nand _ε > Y −Y_ 1, and ensure that _X −_ _ϑ, Y −_ _ε >_ 0 Note the\nfact that _X ≥X_ 1 and _Y ≥Y_ 1 implies _ϑ, ε >_ 0 3 Establishing that _T_ 2 does not exist rules out the possibility of finite-time\nescape for system (13) 7\n\n\nDefine the sets _U_, _V_ and the region _R_ as in Corollary 1\n\n� � �\nwith _x_ = _∥_ _**q**_ _∥_ 2 and _y_ = _∥_ _**q**_ [˙] _∥_ 2 Define further sets _U_ [¯] = _{∥_ _**q**_ _∥_ 2 :\n_∥_ _**q**_ � _∥_ 2 _> X}_ and _V_ [¯] = _{∥_ _**q**_ � [˙] _∥_ 2 : _∥_ _**q**_ � [˙] _∥_ 2 _> Y}_ Define the compact\nregion _S_ = _U ∪V \\_ _U ∪_ [¯] _V_ [¯], see Fig 1 for a visualisation of _S_ Note _S ⊂R_ Using Corollary 1, and with precise calculation\ndetails given in [31, Theorem 2], one can find a pair of gains\n_η_ and _µ_ which ensures that _p_ ( _∥_ _**q**_ � _∥_ 2 _, ∥_ _**q**_ � [˙] _∥_ 2 ) is positive definite\nin _R_ This implies _p_ ( _∥_ _**q**_ � _∥_ 2 _, ∥_ _**q**_ � [˙] _∥_ 2 ) is positive definite in _S_ It\nfollows that _V_ [˙] _t_ _P_ is negative definite in _S_ Further define the\nregion _∥_ _**q**_ �( _t_ ) _∥_ 2 _∈_ [0 _, X −_ _ϑ_ ), _∥_ _**q**_ � [˙] ( _t_ ) _∥_ 2 _∈_ [0 _, Y −_ _ε_ ) as _T_, again\nwith visualisation in Fig 1 Now we justify the fact that we can assume _T_ 2 _> T_ 1 In\nfact, in doing so, we show that the existence of _T_ 2 creates\na contradiction; the trajectories of (16) remain in _T ∪S_ for\nall time See Fig 1 for a visualisation",
    "See Fig 1 for a visualisation Although _V_ [˙] is sign\nindefinite in _T_ (i e _V_ ( _t_ ) can increase), notice from (25) that,\nin _T_ there holds\n\n\n\n� � � � 2\n_−_ 2 _k_ _C_ _k_ _p_ _∥_ _**q**_ _∥_ 2 _∥_ _**q**_ [˙] _∥_ 2 _−_ _k_ _C_ _∥_ _**q**_ _∥_ 2 _∥_ _**q**_ [˙] _∥_ 2 �\n\n_−_ ( _β −_ _k_ _C_ _k_ _p_ [2] _[−]_ _[ξ]_ [)] _[∥]_ _**[q]**_ [�][ +] _[ µ]_ _**[q]**_ [ ˙][�] _[∥]_ [1] � _<_ 0 (40)\n\n\n4 It is evident from (21) that � _**q**_ (0) _,_ ˙ _**q**_ �(0) _∈S ∪T_ [1]\n\n2 _[ηλ]_ [max] [(] _**[X]**_ [)(] _[X −]_ _[ϑ]_ [)] [2] [ + 1] 2\n\n\n\n_V_ ( _t_ ) _≤_ [1]\n\n\n\n2 ~~_[k]_~~ _[M]_ ~~[(]~~ _[Y −]_ _[ε]_ [)] [2]\n\n\n\n+ _µ_ _[−]_ [1] ~~_k_~~ _M_ ~~(~~ _X −_ _ϑ_ )( _Y −_ _ε_ ) := _Z_ (38)\n\n\nRecalling that _δ >_ 0 and is arbitrarily small, one can easily\nverify that _Z <_ _V_ [�] _[∗]_ because we selected _ϑ, ε_ such that _X_ 1 _>_\n_X −_ _ϑ_ and _Y_ 1 _> Y −_ _ε_ In addition, recall _V_ [˙] is negative\ndefinite in _S_ and now observe the following facts For any\ntrajectory starting in _S_ that enters _T_ at some time _t < T_ [¯] 2,\nthere holds _V_ ( _t_ ) _< V_ (0) for all _t ≤_ _t_ [¯] Any trajectory starting\nin _S_ that stays in _S_ for all _t_ up to _T_ 2 satisfies _V_ ( _t_ ) _< V_ (0) Any trajectory in _T_ satisfies _V_ ( _t_ ) _< Z_ If any trajectory leaves\n_T_ and enters _S_ at some _t < T_ [ˆ] 2, we observe that the crossover\npoint is in the closure of _T_ Because _V_ is continuous (since the\nFilippov solutions for � _**q**_ _,_ _**q**_ � [˙] are absolutely continuous), we have\n_V_ ( _t_ [ˆ] ) _≤Z_ Because the trajectory enters _S_, where _V <_ [˙] 0, we\nalso have _V_ ( _t_ [ˆ] + _δ_ 1 ) _< V_ ( _t_ [ˆ] ) _≤Z_, for some arbitrarily small _δ_ 1 This implies that all trajectories of (16) beginning [4] in _T ∪S_\nsatisfy _V_ ( _t_ ) _≤_ max _{Z, V_ (0) _} <_ _V_ [�] _[∗]_ for all _t ≤_ _T_ 2 On the other hand, at _T_ 2, and in accordance with Lemma 2,\n\nthere holds\n\n\n\n�\n\n\n\n�\n_V_ _∗_\n\n(39)\n_ρ_ 2 ( _µ_ _[∗]_ 3 [) =] _[ X]_\n\n\n\n�\n_V_ _∗_\n\n\n\n�\n\n\n\n�\n_V_ _∗_\n\n_χ_ _[<]_\n\n\n\n_∥_ _**q**_ �( _T_ 2 ) _∥_ 2 _≤_\n\n\n\n�\n\n\n\n_V_ ( _T_ 2 )\n\n_<_\n_χ_\n\n\n\nwhere _χ_ = _λ_ min ( [1]\n\n\n\n\n[1]\n\n2 _[η]_ _**[X]**_ _[ −]_ [1] 2\n\n\n\nwhere _χ_ = _λ_ min ( [1] 2 _[η]_ _**[X]**_ _[ −]_ [1] 2 _[µ]_ _[−]_ [2] **[Γ]** _[p]_ _**[M]**_ [)] _[ > ρ]_ [2] [(] _[µ]_ 3 _[∗]_ [)][ One can]\n\nalso show that _∥_ _**q**_ � [˙] ( _T_ 2 ) _∥_ 2 _< Y_ using an argument paralleling\nthe argument leading to (39); we omit this due to spatial\nlimitations The existence of (39) and a similar inequality for\n_∥_ _**q**_ � [˙] ( _T_ 2 ) _∥_ 2 contradicts the definition of _T_ 2 In other words, _T_ 2\ndoes not exist and _∥_ _**q**_ �( _t_ ) _∥_ 2 _< X_, _∥_ _**q**_ � [˙] ( _t_ ) _∥_ 2 _< Y_ hold for all _t_ _Part 4:_ Observe that _V_ [˙] _B_ changes at _t_ = _T_ 1 to become\nnegative definite Consider now _t ∈_ _t_ _Q_ = [ _T_ 1 _, T_ 2 ) Recalling\nthat _V_ [˙] _≤_ _V_ [˙] _A_ + _V_ [˙] _B_, we have\n\n\n\n_V_ ˙ _≤−µ_ _[−]_ [1] [�] _ϕ_ ( _µ, η_ ) _∥_ _**q**_ � [˙] _∥_ 22 + 1 2\n\n2 _[ηλ]_ [min] [(] _**[X]**_ [)] _[∥]_ _**[q]**_ [�] _[∥]_ [2]\n\n\n8\n\n\n\n_∥_ _**q**_ �( _t_ ) _∥_\n\n\n_X_\n\n\n_X −_ _ϑ_\n\n\n\n\n\n_∥_ _**q**_ � [˙] ( _t_ ) _∥_\n\n\n\n_Y −_ _ε_\n\n\n\n_Y_\n\n\n\nFigure 1 Diagram for _Part 3_ of the proof of Theorem 2 The red region is\n_S_, in which _V_ [˙] ( _t_ ) _<_ 0 for all _t ≥_ 0 The blue region is _T_, in which _V_ [˙] ( _t_ )\nis sign indefinite A trajectory of (16) is shown with the black curve We\ndefineinequalities _t_ = _T ∥_ 2 _**q**_ �, if it exists, as the infimum of all( _T_ 2 ) _∥_ _< X_ or _∥_ _**q**_ � [˙] ( _T_ 2 ) _∥_ _< Y_ fails to hold, i e as the time at _t_ values for which one of the\nwhich the system (16) first leavesthat the trajectory of (16) satisfies _∥ S_ _**q**_ � By contradiction, it is shown in( _T_ 2 ) _∥_ _< X_ _, ∥_ _**q**_ � [˙] ( _T_ 2 ) _∥_ _< Y_ I e , _Part 3 2 T_ 2 does\nnot exist and the trajectory remains in _V_ ˙ in _T_ arises due to terms linear in _∥_ _**q**_ � _T ∪S∥_, _∥_ _**q**_ �˙ _∥, ∀_ in (37) These terms disappear _t_ The sign indefiniteness of\nat _t_ = _T_ 1, when the finite-time observer converges For all _t > T_ 1 _,_ _V <_ [˙] 0\nin _T ∪S_ as shown in _Part 4_ Exponential convergence to the origin follows in the region _D_ := _S ∪T_ From the fact that _∥_ _**q**_ � [˙] ( _T_ 1 ) _∥_ 2 _< Y_,\nthere holds _V_ [˙] ( _T_ 1 ) _<_ 0 The argument applied to the interval\n\n[0 _,_ min _{T_ 1 _, T_ 2 _}_ ] above, culminating in (39), is now applied to\nthe interval _t_ _Q_ Since _V <_ [˙] 0 in _D_ and at _T_ 1, the trajectory is\nin _D_, we have _V_ ( _T_ 1 ) _< V_ ( _T_ 2 ) _<_ _V_ [�] _[∗]_ It follows that (39)\ncontinues to hold (and equally for the argument regarding\n_∥_ _**q**_ � [˙] _∥_ 2 ) It remains true that _T_ 2 does not exist, implying that the\ntrajectory of (16) remains in _D_ and _V <_ [˙] 0 for _t ∈_ [ _T_ 1 _, ∞_ ) Recall from below (24) that the eigenvalues of _**H**_ _µ_ are\nuniformly upper bounded away from infinity and lower\nbounded away from zero by constants Specifically, there holds\n\n_λ_ min ( _**N**_ _µ_ ) _∥_ [ _**q**_ � _[⊤]_ _,_ _**q**_ � [˙] _⊤_ ] _⊤_ _∥_ 22 _≤_ _V ≤_ _λ_ max ( _**L**_ _µ_ ) _∥_ [ _**q**_ � _[⊤]_ _,_ _**q**_ � [˙] _⊤_ ] _⊤_ _∥_ 22 Because _D_ is compact, one can find a scalar _a_ 3 _>_ 0\n\n\n\n_λ_ min ( _**N**_ _µ_ ) _∥_ [ _**q**_ � _[⊤]_ _,_ _**q**_ � [˙] _⊤_ ] _⊤_ _∥_ 2\n\n\n\n2 _≤_ _V ≤_ _λ_ max ( _**L**_ _µ_ ) _∥_ [ _**q**_ � _[⊤]_ _,_ _**q**_ � [˙] _⊤_ ] _⊤_ _∥_ 2\n\n\n\nsuch that _V_ ˙ _≤−a_ 3 _∥_ [ _**q**_ � _[⊤]_ _,_ _**q**_ � [˙] _⊤_ ] _⊤_ _∥_ 22 It follows that _V_ ˙ _≤_\n\n_−_ [ _a_ 3 _/λ_ max ( _**L**_ _µ_ )] _V_ in _D_ This inequality is used to conclude\nthat _V_ decays exponentially fast to zero, with a minimum rate\n_e_ _[−][a]_ [3] _[/λ]_ [max] [(] _**[L]**_ _[µ]_ [)] _[t]_ [32] Specifically, there holds\n\n\n\nsuch that _V_ ˙ _≤−a_ 3 _∥_ [ _**q**_ � _[⊤]_ _,_ _**q**_ � [˙] _⊤_ ] _⊤_ _∥_ 2\n\n\n\n_∥_ _**q**_ �˙ ( _t_ )\n�� _**q**_ ( _t_ )\n\n\n\n_∥_ 2 _≤_ _[λ]_ [max] [(] _**[L]**_ _[µ]_ [)]\n� _λ_ min ( _**N**_ _µ_\n\n\n\n\n_[λ]_ [max] [(] _**[L]**_ _[µ]_ [)] _**q**_ �˙ (0)\n\n_λ_ min ( _**N**_ _µ_ ) _[∥]_ �� _**q**_ (0)\n\n\n\n_a_ 3\n_∥_ 2 _e_ _[−]_ _λ_ max( _**L**_ _µ_ ) _[t]_ (41)\n�\n\n\n\n_is reduced by increasing µ If only µ is adjusted to be large_\n_(as in [25]) then velocity consensus is quickly achieved but_\n_position consensus is achieved after a long time _\n\n\n**Remark 3** (Designing the gains) ** ** _We summarise here the_\n_process to design µ, η, β to satisfy inequalities detailed in the_\n_proof of Theorem 2 First, one may select β to satisfy_ (36) _ _\n_Then, µ should be set to satisfy_ (24) _ The quantities X and Y_\n_discussed in Section III-C are then computed with η_ ≳ 1 _;_\n_we noted below_ (33) _that X and Y are independent of η_\n_as η increases Having computed X and Y, the last step is_\n_to adjust η to ensure g_ ( _∥_ _**q**_ � _∥_ 2 _, ∥_ _**q**_ � [˙] _∥_ 2 ) _and p_ ( _∥_ _**q**_ � _∥_ 2 _, ∥_ _**q**_ � [˙] _∥_ 2 ) _are_\n_positive definite (see Part 3 1 of Theorem 2 proof) Details of_\n_the inequalities to ensure positive definiteness are found in the_\n_proofs of Lemma 3 and Corollary 1 in [31, Section II-A] _\n\n\n**Remark 4** (Robustness) ** ** _The proposed algorithm_ (15) _is_\n_robust in several aspects First, the exponential stability_\n_property implies that small amounts of noise produce small_\n_departures from the ideal Moreover, the signum term in the_\n_controller offers robustness to the unknown disturbance_ _**ζ**_ _i_ ( _t_ ) _ _\n_In contrast, and as discussed in the introduction, adaptive_\n_controllers are not robust to unmodelled agent dynamics _\n\n\n**Remark 5** (Controller structure) ** ** _Consider the controller_\n(15) _ The term containing the signum function ensures exact_\n_tracking of the leader’s trajectory Consider Fig 1 For t < T_ 1 _,_\n_the signum term results in the region T, where_ _V_ [˙] _is sign_\n_indefinite This signum term can in fact drive an agent away_\n_from its neighbours due to the nonzero error term_ _**e**_ _i_ ( _t_ ) _,_\n_t < T_ 1 _ However, for t < T_ 1 _, the linear terms of the_\n_controller (and in particular adjustment of the gains η, µ)_\n_ensure that_ _V_ [˙] _<_ 0 _in S This ensures that the followers_\n_remain in the bounded region S centred on the leader Such a_\n_controller gives added robustness For example, if G_ _B_ _becomes_\n_temporarily disconnected, all agents will remain close to the_\n_leader so long as G_ _A_ _has a directed spanning tree When_\n_connectivity of G_ _B_ _is restored, perfect tracking follows; this is_\n_illustrated in the simulation below _\n\n\n_E Practical Tracking By Approximating the Signum Function_\n\n\nAlthough the signum function term in (15) allows the leadertracking objective to be achieved, it carries an offsetting disadvantage Use of the signum function can cause mechanical\ncomponents to fatigue due to the rapid switching of the control\ninput Moreover, chattering often results, which can excite\nthe natural frequencies of high-order unmodelled dynamics A modified controller is now proposed using a continuous\napproximation of the signum function and we derive an\nexplicit upper bound on the error in tracking of the leader [5] Consider the following continuous, model-independent algorithm for the _i_ _[th]_ agent, replacing (15):\n\n\n˙\n\n_τ_ _i_ = _−η_ � _a_ _ij_ �( _**q**_ _i_ _−_ _**q**_ _j_ ) + _µ_ ( ˙ _**q**_ _i_ _−_ _**q**_ _j_ )�\n\n_j∈N_ _Ai_\n\n\n� �\n_−_ _β_ _**z**_ _i_ �( _**q**_ _i_ _−_ _**r**_ _i_ ) + _µ_ ( ˙ _**q**_ _i_ _−_ _**v**_ _i_ )� (42)\n\n\n5 We do not consider an approximation for (14) because the observer\ninvolves _computing_ state estimates, as opposed to the _physical_ control input\nfor (13) It follows that lim _t→∞_ _**q**_ �( _t_ ) = **0** _n_ and lim _t→∞_ _**q**_ � [˙] ( _t_ ) = **0** _n_\nexponentially and the leader tracking objective is achieved **Remark 2** (Additional degree of freedom in gain design) ** ** _In_\n\n_[25] we assumed that η_ = 1 _ There is more flexibility in this_\n_paper since we allow η >_ 1 _; one can adjust separately, or_\n_simultaneously, µ and η While the interplay between µ, η, β,_\n_and its effect on performance, is difficult to quantify, we_\n_observe from extensive simulations that in general, one should_\n_make β and µ as small as possible Where possible, it is better_\n_to hold µ constant and increase η to satisfy an inequality_\n_involving both, e g_ (33) _ Notice that λ_ max ( _**H**_ _µ_ ) _and a_ 3 _are_\n_both O_ ( _η_ ) _ Note that as µ increases λ_ max ( _**H**_ _µ_ ) _does not_\n_increase but a_ 3 _does decrease Thus, the convergence rate_\n_a_ 3 _/λ_ max ( _**L**_ _µ_ ) _is not negatively affected by increasing η but_\n\n\n9\n\n\n\nwhere _**z**_ _i_ ( _**x**_ ) ≜ _**x**_ _/_ ( _∥_ _**x**_ _∥_ 2 + _ϵ_ ) with _ϵ >_ 0 being the degree of\napproximation The function _**z**_ _i_ ( _**x**_ ) approximates sgn( _**x**_ ) via\nthe boundary layer concept [33] The networked system is:\n\n\n_**M**_ _**q**_ � [¨] + _**Cq**_ � [˙] + _η_ ( _L_ 22 _⊗_ _**I**_ _p_ )( _**q**_ � + _µ_ _**q**_ � [˙] ) + _**g**_ + _**ζ**_\n\n+ _β_ _**z**_ ( _**s**_ + _µ_ _**s**_ ˙ ) + _**M**_ ( **1** _n_ _⊗_ _**q**_ ¨ 0 ) + _**C**_ ( **1** _n_ _⊗_ _**q**_ ˙ 0 ) = **0** (43)\n\n\nwhere _**z**_ ( _**s**_ + _µ_ _**s**_ ˙ ) = [ _**z**_ 1 ( _**s**_ 1 + _µ_ _**s**_ ˙ 2 ) _[⊤]_ _, ,_ _**z**_ _n_ ( _**s**_ _n_ + _µ_ _**s**_ ˙ _n_ ) _[⊤]_ ] _[⊤]_ Note that _∥_ _**z**_ _i_ ( _**x**_ _i_ ) _∥_ 2 _<_ 1 for any _ϵ >_ 0 The computation of the quantities _X_ _, Y_ in subsection III-C\nis unchanged Because of similarity, we do not provide a\ncomplete proof here; a sketch is outlined and we leave the\nminor adjustments to the reader Consider the same Lyapunovlike function as in (23), with _µ_ sufficiently large to ensure\n_**H**_ _µ_ _>_ 0 The derivative of (23) with respect to time, along\nthe trajectories of (43), is given by\n\n\n\nIf _β_ satisfies (36) then there holds\n\n\n\n_n_\n�( _k_ _C_ _k_ _p_ [2] [+] _[ ξ]_ [)] _[∥]_ _**[x]**_ _[i]_ _[∥]_ [2]\n\n\n_i_ =1\n\n\n\n2\n_∥_ _**x**_ _∥_ 2\n\n_∥_ _**x**_ _i_ _∥_ 2 + _ϵ_ _[−]_\n\n\n\n_βγ_\n\n\n\n_n_\n�\n\n\n_i_ =1\n\n\n\n2\n_∥_ _**x**_ _i_ _∥_ 2\n\n(48)\n\n� _∥_ _**x**_ _i_ _∥_ 2 + _ϵ_ _[−∥]_ _**[x]**_ _[i]_ _[∥]_ [2] �\n\n\n\n_≥_ _βγ_\n\n\n\n_n_\n�\n\n\n_i_ =1\n\n\n\n= _−βγ_\n\n\n\n_n_\n�\n\n\n_i_ =1\n\n\n\n� _∥_ _**x**_ _∥_ _**x**_ _i_ _∥_ _i_ 2 _∥_ + 2 _ϵ ϵ_\n\n\n\n\n_> −βγnϵ_ (49)\n�\n\n\n\n2 [1] _[η]_ _**[q]**_ [�] _[⊤]_ _**[X][q]**_ [�][ + 1] 2\n\n\n\n˙\n_V_ = _−µ_ _[−]_ [1] [�] [1]\n\n2\n\n\n\n2 _[µ]_ [2] _[η]_ [ ˙] _**[q]**_ [�] _⊤_ _**X**_ ˙ _**q**_ � _−_ _**q**_ �˙ _⊤_ **Γ** _p_ _**M**_ ˙ _**q**_ �\n\n\n\n� � ˙\n_−_ _**q**_ _[⊤]_ **Γ** _p_ _**C**_ _[⊤]_ _**q**_ [˙] + _**x**_ _[⊤]_ **Γ** _p_ � _**C**_ ( **1** _n_ _⊗_ _**q**_ 0 ) + ∆�\n\n\n\nbecause _∥_ _**x**_ _i_ _∥_ 2 _/_ ( _∥_ _**x**_ _i_ _∥_ 2 + _ϵ_ ) _<_ 1 for all _ϵ >_ 0 From this,\nwe conclude that _V_ [˙] _≤_ _V_ [˙] _A_ + _βγnϵ_ Recall also that any _µ, η_\nwhich ensures _V_ ˙ _A_ is negative definite in _p_ ( _·, ·_ ) is positive definite in _D_ Similar to _Part 4 S_ also ensures that of the proof of\nTheorem 2, one has _V_ [˙] _≤_ _ψV_ + _βγnϵ_, for some _ψ >_ 0 We\nconclude using [32, Lemma 3 4 (Comparison Lemma)] that\n\n\n_t_\n_V_ ( _t_ ) _≤_ _V_ (0) _e_ _[−][ψt]_ + _βγnϵ_ _e_ _[−][ψ]_ [(] _[t][−][τ]_ [)] _ _ d _τ_ (50)\n� _n_\n\n_≤_ _e_ _[−][ψt]_ [�] _V_ (0) + _βγnϵ/ψ_ � + _βγnϵ/ψ_ (51)\n\n\nwhich implies that _V_ ( _t_ ) decays exponentially fast to the\nbounded set _{_ [ _**q**_ � _[⊤]_ _,_ _**q**_ � [˙] _⊤_ ] _⊤_ : _V_ _≤_ _βγnϵ/ψ}_ From the fact\n\nthat _V_ _≥_ _λ_ min ( _**N**_ _µ_ ) _∥_ [ _**q**_ � _[⊤]_ _,_ _**q**_ � [˙] _⊤_ ] _⊤_ _∥_ 2 ~~2~~, we conclude that the\n\ntrajectories of (43) converge to the bounded set\n\n\n\n+ _β_\n\n\n\n_n_\n� _γ_ _i_ _**x**_ _[⊤]_ _i_ _**[z]**_ _[i]_ [(] _**[x]**_ _[i]_ [+] _**[ y]**_ _i_ [)] � (44)\n\n_i_ =1\n\n\n\nLet _t_ _P_ and _t_ _Q_ be defined as in _Part 3 2_ of the proof of\nTheorem 2 One can compute that, for _t ∈_ _t_ _P_, there holds\n\n\n_V_ ˙ _≤−µ_ _[−]_ [1] [�] _ϕ_ ( _µ, η_ ) _∥_ _**q**_ � [˙] _∥_ 22 + 1 2\n\n2 _[ηλ]_ [min] [(] _**[X]**_ [)] _[∥]_ _**[q]**_ [�] _[∥]_ [2]\n\n_−_ 2 _k_ _C_ _k_ _p_ _∥_ _**q**_ � _∥_ 2 _∥_ _**q**_ � [˙] _∥_ 2 _−_ _k_ _C_ _∥_ _**q**_ � _∥_ 2 _∥_ _**q**_ � [˙] _∥_ 22 _−_ ( _k_ _C_ _k_ _p_ 2 [+] _[ ξ]_ [)] _[∥]_ _**[x]**_ _[∥]_ [2]\n\n\n\nΩ= [ _**q**_ � _[⊤]_ _,_ _**q**_ � [˙] _⊤_ ] : _∥_ [ _**q**_ � _⊤_ _,_ ˙ _**q**_ � _⊤_ ] _∥_ 2 _≤_ _βγnϵ_\n� � _ψλ_ min ( _**N**_ _µ_ )\n\n\n\n2 [�]\n(52)\n\n� [1]\n\n\n\n_−_\n_β_\n\n\n\n_n_\n� _∥_ _**x**_ _i_ _∥_ 2 � _≤−µ_ _[−]_ [1] _p_ ( _∥_ _**q**_ � _∥_ 2 _, ∥_ _**q**_ � [˙] _∥_ 2 ) (45)\n\n_i_ =1\n\n\n\nwhere _p_ ( _·, ·_ ) was defined in (37) This is because there holds\n_∥_ _**x**_ _[⊤]_ _i_ _**[z]**_ _[i]_ [(] _**[x]**_ _[i]_ [ +] _**[ y]**_ _i_ [)] _[∥]_ [2] _[ <][ ∥]_ _**[x]**_ _[i]_ _[∥]_ [2] [, and][ ¯] _[γ]_ [ = 1][ In other words, any]\n_µ, η_ which ensures boundedness of the trajectories of (16),\nwill also ensure that the trajectories of (43) remain bounded\nin _S ∪T_ for all time Consider now _t ∈_ _t_ _Q_, and observe that _**x**_ _[⊤]_ _i_ _**[z]**_ _[i]_ [(] _**[x]**_ _[i]_ [) =]\n2\n_∥_ _**x**_ _i_ _∥_ 2 _/_ ( _∥_ _**x**_ _i_ _∥_ 2 + _ϵ_ ) It follows that\n\n\n\n_**x**_ _[⊤]_ **Γ** _p_ � _**C**_ ( **1** _n_ _⊗_ _**q**_ ˙ 0 ) + ∆� + _β_\n\n\n\n_n_\n� _γ_ _i_ _**x**_ _[⊤]_ _i_ _**[z]**_ _[i]_ [(] _**[x]**_ _[i]_ [)]\n\n\n_i_ =1\n\n\n\n=\n\n\n_≤_\n\n\n\n_n_\n� _γ_ _i_ _**x**_ _[⊤]_ _i_ [(] _**[C]**_ _[i]_ _**[q]**_ [˙] 0 [+] _**[ M]**_ _[ i]_ _**[q]**_ [¨] 0 [+] _**[ g]**_ _i_ [+] _**[ ζ]**_ _i_ [) +] _[ βγ]_ _[i]_ _**[x]**_ _[⊤]_ _i_ _**[z]**_ _[i]_ [(] _**[x]**_ _[i]_ [)]\n\n\n_i_ =1\n\n\n\n_n_ 2\n� _i_ =1 _γ_ _i_ � _−_ ( _k_ _C_ _k_ _p_ 2 + _ξ_ ) _∥_ _**x**_ _i_ _∥_ 2 + _β_ _∥_ _**x**_ _[∥]_ _**[x]**_ _i_ _∥_ _[i]_ 2 _[∥]_ + [2]\n\n\n\n_n_\n�\n\n\n\n_∥_ _**x**_ _i_ _∥_ 2 + _ϵ_\n\n\n\n�\n\n\n\n+ _k_ _C_ _k_ _p_ _∥_ _**q**_ � _∥_ 2 _∥_ _**q**_ � [˙] _∥_ 2 + _µk_ _C_ _k_ _p_ _∥_ _**q**_ � [˙] _∥_ 22 (46)\n\n\nwhich in turn yields\n\n\n_V_ ˙ _≤−µ_ _[−]_ [1] [�] _ϕ_ ( _µ, η_ ) _∥_ _**q**_ � [˙] _∥_ 22 + 1 2\n\n2 _[ηλ]_ [min] [(] _**[X]**_ [)] _[∥]_ _**[q]**_ [�] _[∥]_ [2]\n\n\n� � � � 2\n_−_ 2 _k_ _C_ _k_ _p_ _∥_ _**q**_ _∥_ 2 _∥_ _**q**_ [˙] _∥_ 2 _−_ _k_ _C_ _∥_ _**q**_ _∥_ 2 _∥_ _**q**_ [˙] _∥_ 2\n\n\n\n_n_\n�( _k_ _C_ _k_ _p_ [2] [+] _[ ξ]_ [)] _[∥]_ _**[x]**_ _[i]_ _[∥]_ [2] [+] _[ β][γ]_\n\n\n_i_ =1\n\n\n\n_n_\n�\n\n\n\n_n_\n�\n\n\n_i_ =1\n\n\n\n2\n_∥_ _**x**_ _i_ _∥_ 2\n\n_∥_ _**x**_ _i_ _∥_ 2 + _ϵ_\n\n\n\n(47)\n�\n\n\n\nIV L EADER T RACKING ON D YNAMIC N ETWORKS\n\n\nIn this section, we consider the case where _the sensing graph_\n_G_ _A_ ( _t_ ) _is dynamic, i e time-varying",
    "time-varying _ We assume that there is a\nfinite set _J_ of _m_ possible network topologies, given as _G_ [¯] _A_ =\n_{G_ _A,j_ = ( _V, E_ _j_ _, A_ _j_ ) : _j ∈J }_, where _J_ = _{_ 1 _, , m}_ is the\nindex set We assume further that _G_ _A,j_, _∀_ _j_, contains a directed\nspanning tree, with _v_ 0 as the root node and with no edges\nincoming to _v_ 0 Define _σ_ ( _t_ ) : [0 _, ∞_ ) _�→J_ as the piecewise\nconstant switching signal which determines the switching of\n_G_ _A_ ( _t_ ), with a finite number of switches The switching times\nare indexed as _t_ 1 _, t_ 2 _, _ and we assume that _σ_ ( _t_ ) is such that\n_t_ _i_ +1 _−_ _t_ _i_ _> π_ _d_ _>_ 0 for all _i_, where _π_ _d_ is the dwell time The dynamic network is modelled by the graph _G_ _A_ ( _t_ ) =\n_G_ _A,σ_ ( _t_ ), which in turn implies that the Laplacian associated\nwith _G_ _A_ ( _t_ ) is dynamic, given by _L_ _A_ ( _t_ ) = _L_ _A,σ_ ( _t_ ) Denote\n_L_ 22 ( _t_ ) = _L_ 22 _,σ_ ( _t_ ) as the lower block matrix of _L_ _A_ ( _t_ ),\npartitioned as in (12) It is straightforward to show that the\nfollower network dynamics is given by\n\n\n�¨ � � �\n_**q**_ _∈_ _[a e ]_ _K_ � _−_ _**M**_ _[−]_ [1] [�] _**Cq**_ [˙] + _η_ ( _L_ 22 _,σ_ ( _t_ ) _⊗_ _**I**_ _p_ )( _**q**_ + _µ_ _**q**_ [˙] ) + _**g**_ + _**ζ**_\n\n+ _β_ sgn ( _**s**_ + _µ_ _**s**_ ˙ ) + _**M**_ ( **1** _n_ _⊗_ _**q**_ ¨ 0 ) + _**C**_ ( **1** _n_ _⊗_ _**q**_ ˙ 0 )� [�] (53)\n\n\nWe now seek to exploit an established result which states\nthat a switched system is exponentially stable if the switching\nis sufficiently slow [34], and its ‘frozen’ versions of the\nvarious systems arising between switching instants are all\nexponentially stable Specifically, the following result holds\n\n\n**Theorem 3** ( [34, Theorem 3 2]) ** ** _Consider the family of_\n_systems_ ˙ _**x**_ = _**f**_ _j_ ( _**x**_ ) _, j ∈J Suppose that, in a domain_\n\n\n\n_−_\n\n\n10\n\n\n_D ⊆_ R _[n]_ _containing_ _**x**_ = **0** _, ∃C_ [1] _functions V_ _j_ : _D �→_ R _, j ∈J,_\n_and positive constants c_ _j_ _, d_ _j_ _,_ Λ _j_ _such that_\n\n\n2 2\n_c_ _j_ _∥_ _**x**_ _∥_ 2 _≤_ _V_ _j_ ( _**x**_ ) _≤_ _d_ _j_ _∥_ _**x**_ _∥_ 2 _,_ _∀_ _x ∈_ _D, ∀_ _j ∈J_ (54)\n\n\n_and_ _V_ [˙] _j_ ( _**x**_ ) _≤−_ Λ _j_ _V_ _j_ ( _**x**_ ) _,_ _∀_ _x ∈_ _D, ∀_ _j ∈J Define κ_ ≜\nsup _p,q∈J_ _{V_ _p_ ( _**x**_ ) _/V_ _q_ ( _**x**_ ) : _**x**_ _∈_ _D}, and suppose further that_\n0 _< κ <_ 1 _ Then, for_ _**x**_ (0) _∈_ _D, the origin_ _**x**_ = **0** _of the_\n_switched system_ ˙ _**x**_ = _**f**_ _σ_ ( _t_ ) ( _**x**_ ) _is exponentially stable for every_\n_switching signal σ_ ( _t_ ) _with dwell time π_ _d_ _>_ log( _κ_ ) _/_ Λ _, where_\nΛ = min _j∈J_ Λ _j_ _ _\n\n\nUnder Assumptions 1 and 2, we know from the previous\nTheorem 2 that for each _j_ _[th]_ subsystem,\n\n\n�¨ � � �\n_**q**_ _∈_ _[a e ]_ _K_ _−_ _**M**_ _[−]_ [1] [�] _**Cq**_ [˙] + _η_ ( _L_ 22 _,j_ _⊗_ _**I**_ _p_ )( _**q**_ + _µ_ _**q**_ [˙] ) + _**g**_ + _**ζ**_\n�\n\n+ _β_ sgn ( _**s**_ + _µ_ _**s**_ ˙ ) + _**M**_ ( **1** _n_ _⊗_ _**q**_ ¨ 0 ) + _**C**_ ( **1** _n_ _⊗_ _**q**_ ˙ 0 )� [�] (55)\n\n\nthere exist control gains _µ_ _j_ _, η_ _j_ _, β_ _j_ which exponentially achieve\nthe leader tracking objective In seeking to apply Theorem 3\nto the system (53), we obtain, for each _j ∈J_ with _V_ _j_ given in\n(23), the values _λ_ min ( _**N**_ _µ,j_ ) = _c_ _j_, _λ_ max ( _**L**_ _µ,j_ ) = _d_ _j_ and Λ _j_ =\n_a_ 3 _,j_ _/λ_ max ( _**L**_ _µ,j_ ) where _a_ 3 _,j_ was computed below (40) It\nfollows that Λ = min _j∈J_ _a_ 3 _,j_ _/λ_ max ( _**L**_ _µ,j_ ), and one can also\nobtain that _κ_ = max _j∈J_ _λ_ max ( _**L**_ _µ,j_ ) _/_ min _j∈J_ _λ_ min ( _**N**_ _µ,j_ ) **Theorem 4 ** _Under Assumptions 1 and 2, with dynamic topol-_\n_ogy given by G_ _A_ ( _t_ ) = _G_ _A,σ_ ( _t_ ) _, the leader tracking objective_\n_is achieved using_ (15) _if_ 1) _the control gains µ, η, β satisfy_\n_a set of lower bounding inequalities, and_ 2) _the dwell time_\n_π_ _d_ _satisfies the inequality π_ _d_ _>_ log( _κ_ ) _/_ Λ _, where κ,_ Λ _are as_\n_defined in the immediately preceding paragraph _\n\n\n_Proof _ By selecting _µ_ = max _j∈J_ _µ_ _j_, _η_ = max _j∈J_ _η_ _j_, and\n_β_ = max _j∈J_ _β_ _j_, we guarantee each _j_ _[th]_ subsystem (55) is\nexponentially stable, and also guarantee the boundedness of\nthe trajectories of (53) before the finite-time observer has\nconverged After convergence of the finite-time observer, application of Theorem 3 using the quantities of _κ_ and Λ outlined\nabove delivers the conclusion that (53) is exponentially stable,\ni e the leader tracking objective is achieved V S IMULATIONS\n\n\nA simulation is now provided to demonstrate the algorithm\n(15) Each agent is a two-link robotic arm and five follower\nagents must track the trajectory the leader agent The equations\nof motion are given in [26, pp 259-262] The generalised\ncoordinates for agent _i_ are _**q**_ _i_ = [ _q_ _i_ [(1)] _, q_ _i_ [(2)] ] _[⊤]_, which are\nthe angles of each link in radians The agent parameters\nand initial conditions are given in Table I, and are chosen\narbitrarily Several aspects of the simulation are designed to\nhighlight the robustness of the algorithm First, the topology\nis assumed to be switching, with the graph _G_ _A_ ( _t_ ) switching\nperiodically between the three graphs indicated in Fig 2,\nat a frequency of 1 Hz Graph _G_ _B_ ( _t_ ) switches between the\nthree graphs indicated in Fig 3, also at a frequency of 1 Hz Moreover, if _G_ _A_ ( _t_ ) = _G_ _A,i_ then _G_ _B_ ( _t_ ) = _G_ _B,i_ for _i_ = 1 _,_ 2 _,_ 3 Additionally, _G_ _B_ ( _t_ ) is entirely disconnected for _t ∈_ [10 _,_ 20)\nof the simulation Last, each agent has a disturbance _**ζ**_ _i_ ( _t_ ) =\n\n[sin( _i ×_ 0 _ _ 1 _t_ ) _,_ cos( _i ×_ 0 _ _ 1 _t_ )] _[⊤]_ for _i_ = 1 _, ,_ 5 All edges of\n\n\n\nG\nA2\n\n\n\nL\n\n\n1\n\n\n2\n\n\n\nG\nA3\n\n\n\n3\n\n\n4\n\n\n5\n\n\n\nL\n\n\n1\n\n\n2\n\n\n\nG\nA1\n\n3 L\n\n\n\n4\n\n\n5\n\n\n\n1\n\n\n2\n\n\n\n3\n\n\n4\n\n\n5\n\n\n\nFigure 2 In the simulation, graph _G_ _A_ ( _t_ ) switches between the above three\ngraphs periodically at a rate of 1 Hz _G_ _A_ ( _t_ ) and _G_ _B_ ( _t_ ) have edge weights of 5 The control gains are\nset as _µ_ = 1 _ _ 5, _η_ = 16, _β_ = 25; they are first computed using\nthe inequalities and then adjusted because the inequalities can\nlead to conservative gain choices For the observer, set _ω_ 1 = 1,\n_ω_ 2 = 5 The leader trajectory is\n\n\n\n0 _ _ 5 sin( _t_ ) _−_ 0 _ _ 2 sin(0 _ _ 5 _t_ )\n�0 _ _ 4 �2 sin( _t_ ) + [sin] (2) [(][2] _[t]_ [)] + [sin] (3) [(][3] _[t]_ [)] +\n\n\n\n\n[(][4] _[t]_ [)]\n\n(4) ��\n\n\n\n_**q**_ 0 ( _t_ ) =\n\n\n\n0 _ _ 4 �2 sin( _t_ ) + [sin] (2) [(][2] _[t]_ [)]\n\n\n\n\n[(][2] _[t]_ [)] + [sin][(][3] _[t]_ [)]\n\n(2) (3)\n\n\n\n\n[(][3] _[t]_ [)] + [sin][(][4] _[t]_ [)]\n\n(3) (4)\n\n\n\nFigure 4 shows the generalised coordinates _q_ [(1)] and _q_ [(2)] The\ngeneralised velocities, ˙ _q_ [(1)] and ˙ _q_ [(2)] are shown in Fig 5 The\nwell studied observer results are omitted [29] Consider Fig 4 Clearly, _**q**_ _i_ ( _t_ ) has almost tracked the leader by _t_ = 10, but the\ndistributed observer graph _G_ _B_ ( _t_ ) disconnects for _t ∈_ [10 _,_ 20) As discussed in Remark 5, the controller (15) has robustness\nto network failure, since the linear term in (15) ensures the\ntrajectories remain bounded as long as _G_ _B_ ( _t_ ) is disconnected\n(thus followers do not possess accurate knowledge of _**q**_ 0 _,_ ˙ _**q**_ 0 ) In the simulation, we observe leader tracking is achieved\nonce _G_ _B_ ( _t_ ) reconnects at _t >_ 20 Figures 6 and 7 show the\ngeneralised coordinates and generalised velocity, respectively,\nfor the same simulation set up but with an increase of _µ_ = 4\nfrom _µ_ = 1 _ _ 5 The effects are clear, when we compare to Fig 4\nand 5 First, the rate of velocity synchronisation relative to the\nrate of position synchronisation is much larger when _µ_ = 4 On the other hand, overall convergence rate is decreased; it\ntakes longer for position and velocity synchronisation to occur,\nwith reasons presented in Remark 2 However, the increased\n_µ_ has a benefit of making the follower agents stay in a\nsmaller ball around the leader when _G_ _B_ ( _t_ ) is disconnected\nfor _t ∈_ [10 _,_ 20), i e the tracking error for _t ∈_ [10 _,_ 20) is\nsmaller This is because increasing _µ_ decreases the size of\n_T_, where _V_ [˙] is sign indefinite, as shown in Fig",
    "This is because increasing _µ_ decreases the size of\n_T_, where _V_ [˙] is sign indefinite, as shown in Fig 1 Last, we\nshow a simulation which utilises the continuous approximation\nalgorithm (42) The simulation setup is given above, and we\nlet _ϵ_ = 0 _ _ 5 Figure 8 shows the generalised coordinates of the\nresulting simulation, with a magnification of the plot for the\nfinal 2 seconds of simulation One can clearly see that practical\ntracking is achieved, with a small error The velocity plot is\nomitted VI VI C ONCLUSION\n\n\nIn this paper, a distributed, discontinuous modelindependent algorithm was proposed for a directed network\nof Euler-Lagrange agents It was shown that the leader\ntracking objective is achieved semi-globally exponentially\nfast if the directed graph contains a directed spanning tree,\nrooted at the leader, and if three control gains satisfied a set\n\n\n11\n\n\n\nTable I\n\nA GENT PARAMETERS USED IN SIMULATION\n\n_m_ 1 _m_ 2 _l_ 1 _l_ 2 _l_ _c_ 1 _l_ _c_ 2 _I_ 1 _I_ 2 _q_ _i_ [(1)] (0) _q_ _i_ [(2)] (0) _q_ ˙ _i_ [(1)] (0) _q_ ˙ _i_ [(2)] (0)\nAgent 1 0 5 0 4 0 4 0 3 0 2 0 15 0 1 0 05 0 1 0 9 -0 5 -0 6\nAgent 2 0 2 0 4 0 6 0 1 0 35 0 08 0 15 0 08 -0 4 0 9 0 1 -1 4\nAgent 3 0 5 0 4 0 4 0 3 0 2 0 15 0 1 0 05 0 9 -1 2 0 3 0 6\nAgent 4 1 0 6 0 45 0 8 0 2 0 4 0 15 0 5 -2 0 -2 0 -1 0 0 2\nAgent 5 0 25 0 4 0 8 0 5 0 3 0 1 0 45 0 15 0 3 1 5 1 0 1 2\n\n\n\nG\nB1\n\n\n\n3\n\n\n4\n\n\n5\n\n\n\nG\nB3\n\n\n\nL\n\n\n1\n\n\n2\n\n\n\nL\n\n\n1\n\n\n2\n\n\n\nG\nB2\n\n3 L\n\n\n\n4\n\n\n5\n\n\n\n1\n\n\n2\n\n\n\n3\n\n\n4\n\n\n5\n\n\n\nFigure 3 Graph _G_ _B_ ( _t_ ) switches between the above three graphs periodically\nat a rate of 1 Hz; if _G_ _A_ ( _t_ ) = _G_ _A,i_ then _G_ _B_ ( _t_ ) = _G_ _B,i_ for _i_ = 1 _,_ 2 _,_ 3 1\n\n\n0\n\n\n-1\n\n\n-2\n\n\n\nTime (s)\n\n\nFigure 5 Plot of generalised velocity vs time; the graph _G_ _B_ ( _t_ ) is disconnected for _t ∈_ [10 _,_ 20) 1\n\n\n0\n\n\n-1\n\n\n-2\n\n\n\n2\n\n\n1\n\n\n0\n\n\n-1\n\n\n\n0 5 10 15 20 25 30 35 40 45\n\n\n\n\n\n2\n\n\n0\n\n\n-2\n\n\n\n0 5 10 15 20 25 30 35 40 45\n\n\nagent1 agent2 agent3 Tim ~~e (s)~~ agent4 agent5 Leader\n\n\n0 5 10 15 20 25 30 35 40 45\n\nTime (s)\n\n\n\nFigure 4 Plot of generalised coordinates vs time; the graph _G_ _B_ ( _t_ ) is\ndisconnected for _t ∈_ [10 _,_ 20) of lower bounding inequalities The algorithm was shown to\nbe robust to agent disturbances, unmodelled agent dynamics\nand modelling uncertainties A continuous approximation\nof the algorithm was proposed to avoid chattering, and we\nthen extended the result to include switching topologies A\nnumerical simulation illustrated the algorithm’s effectiveness R EFERENCES\n\n\n[1] W Ren and Y Cao, _Distributed Coordination of Multi-agent Networks:_\n_Emergent Problems, Models and Issues_ Springer London, 2011 [2] R Ortega, J A L Perez, P J Nicklasson, and H Sira-Ramirez,\n_Passivity-based Control of Euler-Lagrange systems: Mechanical, Elec-_\n_trical and Electromechanical Applications_",
    "Sira-Ramirez,\n_Passivity-based Control of Euler-Lagrange systems: Mechanical, Elec-_\n_trical and Electromechanical Applications_ Springer Science & Business Media, 2013 [3] S -J Chung and J -J Slotine, “Cooperative Robot Control and Concurrent Synchronization of Lagrangian Systems,” _IEEE Transactions on_\n_Robotics_, vol 25, no 3, pp 686–700, 2009 [4] Q Hu, B Xiao, and P Shi, “Tracking control of uncertain euler–lagrange\nsystems with finite-time convergence,” _International Journal of Robust_\n_and Nonlinear Control_, vol Shi, “Tracking control of uncertain euler–lagrange\nsystems with finite-time convergence,” _International Journal of Robust_\n_and Nonlinear Control_, vol 25, no 17, pp 3299–3315, 2015 [5] Q Yang, H Fang, J Chen, Z Jiang, and M Cao, “Distributed Global\nOutput-Feedback Control for a Class of Euler-Lagrange Systems,” _IEEE_\n_Transactions on Automatic Control_, 11 2017 Cao, “Distributed Global\nOutput-Feedback Control for a Class of Euler-Lagrange Systems,” _IEEE_\n_Transactions on Automatic Control_, 11 2017 [6] Z Meng, Z Lin, and W Ren, “Leader–Follower Swarm Tracking for\nNetworked Lagrange Systems,” _Systems & Control Letters_, vol Ren, “Leader–Follower Swarm Tracking for\nNetworked Lagrange Systems,” _Systems & Control Letters_, vol 61,\nno 1, pp 117–126, 2012 Figure 6 Plot of generalised coordinates vs time; the graph _G_ _B_ ( _t_ ) is\ndisconnected for _t ∈_ [10 _,_ 20) The gain _µ_ has been increased from _µ_ = 1 _ _ 5\nto _µ_ = 4 [7] J Mei, W Ren, and G Ren, and G Ma, “Distributed Containment Control for\nLagrangian Networks With Parametric Uncertainties Under a Directed\nGraph,” _Automatica_, vol Ma, “Distributed Containment Control for\nLagrangian Networks With Parametric Uncertainties Under a Directed\nGraph,” _Automatica_, vol 48, no 4, pp 653–659, 2012 [8] A Abdessameud, I G Polushin, and A Tayebi, “Synchronization\nof lagrangian systems with irregular communication delays,” _IEEE_\n_Transactions on Automatic Control_, vol",
    "Tayebi, “Synchronization\nof lagrangian systems with irregular communication delays,” _IEEE_\n_Transactions on Automatic Control_, vol 59, no 1, pp 187–193, January\n2014 [9] G Chen and F L Lewis, “Distributed Adaptive Tracking Control for\nSynchronization of Unknown Networked Lagrangian Systems,” _IEEE_\n_Transactions on Systems, Man, and Cybernetics, Part B: Cybernetics_,\nvol Lewis, “Distributed Adaptive Tracking Control for\nSynchronization of Unknown Networked Lagrangian Systems,” _IEEE_\n_Transactions on Systems, Man, and Cybernetics, Part B: Cybernetics_,\nvol 41, no 3, pp 805–816, 2011 [10] E Nuno, R Ortega, L Basanez, and D Hill, “Synchronization of\nNetworks of Nonidentical Euler-Lagrange Systems with Uncertain Parameters and Communication Delays,” _IEEE Transactions on Automatic_\n_Control_, vol Hill, “Synchronization of\nNetworks of Nonidentical Euler-Lagrange Systems with Uncertain Parameters and Communication Delays,” _IEEE Transactions on Automatic_\n_Control_, vol 56, no 4, pp 935–941, 2011 [11] Z Meng, D V Dimarogonas, and K H Johansson, “Leader–Follower\nCoordinated Tracking of Multiple Heterogeneous Lagrange Systems\nUsing Continuous Control,” _IEEE Transactions on Robotics_, vol 30,\n\n\n\n2\n\n\n0\n\n\n-2\n\n\n\n0 5 10 15 20 25 30 35 40 45\n\n\nagent1 agent2 agent3 Time ~~(s)~~ agent4 agent5 Leader\n\n\n0 5 10 15 20 25 30 35 40 45\n\nTime (s)\n\n\n12\n\n\n\n1\n\n\n0\n\n\n-1\n\n\n2\n\n\n1\n\n\n0\n\n\n-1\n\n\n\n0 5 10 15 20 25 30 35 40 45\n\n\nagent1 agent2 ~~T~~ ime (s agent3 ~~)~~ agent4 agent5 Leader\n\n\n\n0 5 10 15 20 25 30 35 40 45\n\nTime (s)\n\n\nFigure 7 Plot of generalised velocity vs time; the graph _G_ _B_ ( _t_ ) is disconnected for _t ∈_ [10 _,_ 20) The gain _µ_ has been increased from _µ_ = 1 _ _ 5 to\n_µ_ = 4 0 5 10 15 20 25 30 35 40 45\n\n\n2\n\n\n\n0\n\n\n-2\n\n\n\n0 5 10 15 20 25 30 35 40 45\n\nTime (s)\n\n\n\nFigure 8 Plot of generalised coordinates vs time; the graph _G_ _B_ ( _t_ ) is\ndisconnected for _t ∈_ [10 _,_ 20) The continuous approximation algorithm (42)\nis used with _ϵ_ = 0 _ _ 5 no 3, pp 739–745, 2014 [12] S Ghapani, J Mei, W Ren, and Y",
    "Ren, and Y Song, “Fully distributed flocking with\na moving leader for Lagrange networks with parametric uncertainties,”\n_Automatica_, vol 67, pp 67–76, 2016 [13] A Abdessameud, A Tayebi, and I Polushin, “Leader-Follower Synchronization of Euler-Lagrange Systems with Time-Varying Leader Trajectory and Constrained Discrete-time Communication,” _IEEE Transactions_\n_on Automatic Control_, vol Preprint, 2016 [14] W [14] W Ren, “Distributed Leaderless Consensus Algorithms for Networked\nEuler–Lagrange Systems,” _International Journal of Control_, vol Ren, “Distributed Leaderless Consensus Algorithms for Networked\nEuler–Lagrange Systems,” _International Journal of Control_, vol 82,\nno 11, pp 2137–2149, 2009 [15] E Nuno, I Sarras, and L Basanez, “Consensus in Networks of\nNonidentical Euler-Lagrange Systems using P+ d Controllers,” _IEEE_\n_Transactions on Robotics_, vol Basanez, “Consensus in Networks of\nNonidentical Euler-Lagrange Systems using P+ d Controllers,” _IEEE_\n_Transactions on Robotics_, vol 29, no 6, pp 1503–1508, 2013 [16] Z Meng, T Yang, G Shi, D V Dimarogonas, Y Hong, and K H Johansson, “Set Target Aggregation of Multiple Mechanical Systems,”\nin _2014 IEEE 53rd Annual Conference on Decision and Control_ IEEE,\n2014, pp 6830–6835 [17] J Mei, W Ren, and G Ma, “Distributed Coordinated Tracking With a\nDynamic Leader for Multiple Euler-Lagrange Systems,” _IEEE Transac-_\n_tions on Automatic Control_, vol Ma, “Distributed Coordinated Tracking With a\nDynamic Leader for Multiple Euler-Lagrange Systems,” _IEEE Transac-_\n_tions on Automatic Control_, vol 56, no 6, pp 1415–1421, 2011 [18] Y Zhao, Z Duan, and G Wen, “Distributed finite-time tracking of\nmultiple Euler–Lagrange systems without velocity measurements,” _In-_\n_ternational Journal of Robust and Nonlinear Control_, vol 25, no 11,\npp 1688–1703, 2015 [19] J R Klotz, Z Kan, J M Shea, E L Pasiliao, and W E Dixon, “Asymptotic Synchronization of a Leader-Follower Network of Uncertain EulerLagrange Systems,” _IEEE Transactions on Control of Network Systems_,\nvol",
    "Dixon, “Asymptotic Synchronization of a Leader-Follower Network of Uncertain EulerLagrange Systems,” _IEEE Transactions on Control of Network Systems_,\nvol 2, no 2, pp 174–182, June 2015 [20] Z Feng, G Hu, W Ren, W E Dixon, and J Mei, “Distributed\n\n\n\nCoordination of Multiple Unknown Euler-Lagrange Systems,” _IEEE_\n_Transactions on Control of Network Systems_, vol Mei, “Distributed\n\n\n\nCoordination of Multiple Unknown Euler-Lagrange Systems,” _IEEE_\n_Transactions on Control of Network Systems_, vol PP, no 99, pp 1–\n1, 2016 [21] P F Hokayem, D M Stipanovi´c, and M W Spong, “Coordination\nand Collision Avoidance for Lagrangian Systems With Disturbances,”\n_Applied Mathematics and Computation_, vol Spong, “Coordination\nand Collision Avoidance for Lagrangian Systems With Disturbances,”\n_Applied Mathematics and Computation_, vol 217, no 3, pp 1085–1094,\n2010 [22] N Chopra, “Output Synchronization on Strongly Connected Graphs,”\n_IEEE Transactions on Automatic Control_, vol Chopra, “Output Synchronization on Strongly Connected Graphs,”\n_IEEE Transactions on Automatic Control_, vol 57, no 11, pp 2896–\n2901, Nov 2012 [23] M Ye, C Yu, and B D O Anderson, “Model-Independent Rendezvous\nof Euler-Lagrange Agents on Directed Networks,” in _Proceedings of_\n_IEEE 54th Annual Conference on Decision and Control, Osaka, Japan_,\n2015, pp 3499–3505 [24] M Ye, B D O Anderson, and C Yu, “Distributed model-independent\nconsensus of Euler–Lagrange agents on directed networks,” _Interna-_\n_tional Journal of Robust and Nonlinear Control_, vol Yu, “Distributed model-independent\nconsensus of Euler–Lagrange agents on directed networks,” _Interna-_\n_tional Journal of Robust and Nonlinear Control_, vol 27, no 14, pp 2428–2450, September 2017 [25] ——, “Model-Independent Trajectory Tracking of Euler–Lagrange\nAgents on Directed Networks,” in _Proceedings of IEEE 55th Annual_\n_Conference on Decision and Control (CDC), Las Vegas, USA_, 2016, pp",
    "[25] ——, “Model-Independent Trajectory Tracking of Euler–Lagrange\nAgents on Directed Networks,” in _Proceedings of IEEE 55th Annual_\n_Conference on Decision and Control (CDC), Las Vegas, USA_, 2016, pp 6921–6927 [26] M W Spong, S Hutchinson, and M Hutchinson, and M Vidyasagar, _Robot Modeling and_\n_Control_ Wiley New York, 2006, vol 3 [27] R A Horn and C R Johnson, _Matrix Analysis_ Cambridge University\nPress, New York, 2012 [28] H Zhang, Z Li, Z Qu, and F L Lewis, “On Constructing Lyapunov\nFunctions for Multi-Agent Systems,” _Automatica_, vol Lewis, “On Constructing Lyapunov\nFunctions for Multi-Agent Systems,” _Automatica_, vol 58, pp 39–42,\n2015 [29] Y Cao, W Ren, and Z Meng, “Decentralized Finite-time Sliding\nMode Estimators and Their Applications in Decentralized Finite-time\nFormation Tracking,” _Systems & Control Letters_, vol Meng, “Decentralized Finite-time Sliding\nMode Estimators and Their Applications in Decentralized Finite-time\nFormation Tracking,” _Systems & Control Letters_, vol 59, no 9, pp 522–529, 2010 [30] J [30] J Cortes, “Discontinuous Dynamical Systems,” _Control Systems, IEEE_,\nvol Cortes, “Discontinuous Dynamical Systems,” _Control Systems, IEEE_,\nvol 28, no 3, pp 36–73, 2008 [31] M Ye, B D O Anderson, and C Yu, “Leader Tracking of\nEuler-Lagrange Agents on Directed Switching Networks Using\nA Model-Independent Algorithm,” 2018, arXiv:1802 Yu, “Leader Tracking of\nEuler-Lagrange Agents on Directed Switching Networks Using\nA Model-Independent Algorithm,” 2018, arXiv:1802 00906 [cs SY] [[Online] Available: https://arxiv org/abs/1802 00906](https://arxiv org/abs/1802 00906)\n\n[32] H Khalil, _Nonlinear Systems_ Prentice Hall, 2002 [33] C Edwards and S Spurgeon, _Sliding Mode Control: Theory and_\n_Applications_, ser Series in Systems and Control CRC Press, 1998 [34] D [34] D Liberzon, _Switching in Systems and Control_ Springer Science &\nBusiness Media, 2012"
  ]
}