{
  "filename": "PI_D__tuning_for_Flight_Control_Systems_via_Increm.pdf",
  "text_length": 30329,
  "chunk_count": 9,
  "chunks": [
    "## PI(D) tuning for Flight Control Systems via Incremental Nonlinear Dynamic Inversion\n\nPaul Acquatella B [∗][,][1] Wim van Ekeren [∗][,][∗∗][,][2] Qi Ping Chu [∗∗][,][3]\n\n\n∗ DLR, German Aerospace Center\nInstitute of System Dynamics and Control\nD-82234 Oberpfaffenhofen, Germany\n∗∗ Delft University of Technology, Faculty of Aerospace Engineering\n2629HS Delft, The Netherlands\n\n\nAbstract: Previous results reported in the robotics literature show the relationship between\ntime-delay control (TDC) and proportional-integral-derivative control (PID) In this paper, we\nshow that incremental nonlinear dynamic inversion (INDI) — more familiar in the aerospace\ncommunity — are in fact equivalent to TDC This leads to a meaningful and systematic method\nfor PI(D)-control tuning of robust nonlinear flight control systems via INDI We considered a\nreformulation of the plant dynamics inversion which removes effector blending models from the\nresulting control law, resulting in robust model-free control laws like PI(D)-control Keywords: aerospace, tracking, application of nonlinear analysis and design\n\n\n\n1 INTRODUCTION\n\n\nEnsuring stability and performance in between operational\npoints of widely-used gain-scheduled linear PID controllers\nmotivates the use of nonlinear dynamic inversion (NDI) for\nflight control systems NDI cancels out nonlinearities in\nthe model via state feedback, and then linear control can\nbe subsequently designed to close the systems’ outer-loop,\nhence eliminating the need of linearizing and designing\ndifferent controllers for several operational points as in\ngain-scheduling In this paper we consider nonlinear flight control strategies\nbased on incremental nonlinear dynamic inversion (INDI) Using sensor and actuator measurements for feedback allows the design of an incremental control action which, in\ncombination with nonlinear dynamic inversion, stabilizes\nthe partly-linearized nonlinear system incrementally With\nthis result, dependency on exact knowledge of the system\ndynamics is greatly reduced, overcoming this major robustness issue from conventional nonlinear dynamic inversion INDI has been considered a sensor-based approach\nbecause sensor measurements were meant to replace a\nlarge part of the vehicle model Theoretical development of increments of nonlinear control action date back from the late nineties and started\nwith activities concerning ‘implicit dynamic inversion’ for\ninversion-based flight control (Smith (1998); Bacon and\nOstroff (2000)), where the architectures considered in this\npaper were firstly described Other designations for these\ndevelopments found in the literature are ‘modified NDI’\n\n\n1 Research Engineer, Space Systems Dynamics Department",
    "Other designations for these\ndevelopments found in the literature are ‘modified NDI’\n\n\n1 Research Engineer, Space Systems Dynamics Department paul acquatella@dlr de 2 Graduate Student, Control & Operations Department w vanekeren@student tudelft nl 3 Associate Professor, Control & Operations Department q p chu@tudelft nl and ‘simplified NDI’, but the designation ‘incremental\nNDI’, introduced in (Chen and Zhang (2008)), is considered to describe the methodology and nature of these\ntype of control laws better (Chen and Zhang (2008); Chu\n(2010); Sieberling et al (2010)) INDI has been elaborated\nand applied theoretically in the past decade for advanced\nflight control and space applications (Sieberling et al INDI has been elaborated\nand applied theoretically in the past decade for advanced\nflight control and space applications (Sieberling et al (2010); Smith (1998); Bacon and Ostroff (2000); Bacon\net al (2000, 2001); Acquatella B et al (2012); Simpl´ıcio\net al (2013)) (2013)) More recently, this technique has been applied also in practice for quadrotors and adaptive control\n(Smeur et al (2016a,b)) In this paper, we present three main contributions in the\ncontext of nonlinear flight control system design 1) We revisit the NDI/INDI control laws and we establish\nthe equivalence between INDI and time-delay control\n(TDC) 2) Based on previous results reported in the robotics literature showing the relationship between discrete formulations of TDC and proportional-integral-derivative control\n(PID), we show that an equivalent PI(D) controller with\ngains < K, T i, (T d ) > tuned via INDI/TDC is more meaningful and systematic than heuristic methods, since one\nconsiders desired error dynamics given by Hurwitz gains\n< k P, (k D ) > Subsequently, tuning the remaining effector\nblending gain is much less cumbersome than designing a\nwhole set of gains iteratively 3) We also consider a reformulation of the plant dynamics\ninversion as it is done in TDC which removes the effector\nblending model (control derivatives) from the resulting\ncontrol law This has not been the case so far in the\nreported INDI controllers, causing robustness problems\nbecause of their uncertainties Moreover, this allows to\nconsider the introduced term as a scheduling variable\nwhich is only directly related to the proportional gain K",
    "Moreover, this allows to\nconsider the introduced term as a scheduling variable\nwhich is only directly related to the proportional gain K 2 FLIGHT VEHICLE MODELING\n\n\nWe are interested in Euler’s equation of motion representing flight vehicles’ angular velocity dynamics\n\n\nI ˙ω + ω × I ω = M B (1)\n\n\nwhere M B ∈R [3] is the external moment vector in body\naxes, ω ∈R [3] is the angular velocity vector, and I ∈R [3][×][3]\nthe inertia matrix of the rigid body assuming symmetry\nabout the plane x − z of the body Furthermore, we will be interested in the time history of\nthe angular velocity vector, hence the dynamics of the\nrotational motion of a vehicle (1) can be rewritten as the\nfollowing set of differential equations\n\n\n˙\nω = I [−][1] [�] M B − ω × I ω � (2)\n\n\nwhere\n\n\n\n,\n\n�\n\n\n\n�\n\n\n\n, M B =\n\n�\n\n\n\nL\n\nM\n� N\n\n\n\nbC l\n\ncC m\n\n� bC n\n\n\n\nω =\n\n\n\np\n\nq\n� r\n\n\n\n=\nSQ\n\n\n\n�\n\n\n\nI =\n\n\n\nI xx 0 I xz\n0 I yy 0\n� I xz 0 I zz\n\n\n\n,\n\n\n\nwith p, q, r, the body roll, pitch, and yaw rates, respectively; L, M, N, the roll, pitch, and yaw moments, respectively; S the wing surface area, Q the dynamic pressure,\nb the wing span, c the mean aerodynamic chord, and\nC l, C m, C n the moment coefficients for roll, pitch, and yaw,\nrespectively Furthermore, let M B be the sum of moments\npartially generated by the aerodynamics of the airframe\nM a and moments generated by control surface deflections\nM c, and we describe M B linearly in the deflection angles δ\nassuming the control derivatives to be linear as in Sieberling et al (2010) with (M c ) δ = ∂δ∂ [M] [c] [; therefore]\n\n\nM B = M a + M c = M a + (M c ) δ δ (3)\n\n\nwhere\n\n\n\n�\n\n\n\n, M c =\n\n�\n\n\n\nL c\nM c\n� N c\n\n\n\n�\n\n\n\nδ a\nδ e\n� δ r\n\n\n\nM a =\n\n\n\nL a\nM a\n� N a\n\n\n\n, δ =\n\n\n\nand δ corresponding to the control inputs: aileron, elevator, and rudder deflection angles, respectively Hence the\ndynamics (2) can be rewritten as\n\n\n˙\nω = f (ω) + G(ω)δ (4)\n\n\nwith\n\n\nf (ω) = I [−][1] [�] M a − ω × I ω�, G(ω) = I [−][1] (M c ) δ For practical implementations, we consider first-order actuator dynamics represented by the following transfer\nfunction\n\nδ K a\n= G a (s) = (5)\nδ c τ a s + 1 [,]\n\n\nand furthermore, we do not consider these actuator dynamics in the control design process as it is usually the\ncase for dynamic inversion-based control For that reason,\nwe assume that these actuators are sufficiently fast in the\ncontrol-bandwidth sense, meaning that 1/τ a is higher than\nthe control system closed-loop bandwidth",
    "For that reason,\nwe assume that these actuators are sufficiently fast in the\ncontrol-bandwidth sense, meaning that 1/τ a is higher than\nthe control system closed-loop bandwidth 3 FLIGHT CONTROL LAW DESIGN\n\n\n3 1 Nonlinear Dynamic Inversion\n\n\nLet us define the control parameter to be the angular\nvelocities, hence the output is simply y = ω We then\nconsider an error vector defined as e = y d − y where y d\ndenotes the smooth desired output vector (at least one\ntime differentiable) Nonlinear dynamic inversion (NDI) is designed to linearize\nand decouple the rotational dynamics in order to obtain\nan explicit desired closed loop dynamics to be followed Introducing the virtual control input ν = ω˙ des, if the\nmatrix G(ω) is non-singular (i Introducing the virtual control input ν = ω˙ des, if the\nmatrix G(ω) is non-singular (i e , invertible) in the domain\nof interest for all ω, the nonlinear dynamic inversion\ncontrol consists in the following input transformation\n(Slotine and Li (1990); Chu (2010))\nδ = G(ω) [−][1] [�] ν − f (ω)� (6)\nwhich cancels all the nonlinearities, and a simple inputoutput linear relationship between the output y and the\nnew input ν is obtained as\n\n˙\ny = ν (7)\nApart from being linear, an interesting result from this\nrelationship is that it is also decoupled since the input ν i\nonly affects the output y i From this fact, the input transformation (6) is called a decoupling control law, and the\nresulting linear system (7) is called the single-integrator\nform This single-integrator form (7) can be rendered exponentially stable with\nν = ˙y d + k P e (8)\nwhere ˙y d is the feedforward term for tracking tasks, and\nk P ∈R [3][×][3] a constant diagonal matrix, whose i−th\ndiagonal elements k P i are chosen so that the polynomials\ns + k P i (i = p, q, r) (9)\nmay become Hurwitz, i e , k P i < 0 This results in the\nexponentially stable and decoupled desired error dynamics\ne˙ + k P e = 0 (10)\nwhich implies that e(t) → 0 From this typical tracking\nproblem it can be seen that the entire control system\nwill have two control loops (Chu (2010); Sieberling et al (2010)): the inner linearization loop (6), and the outer\ncontrol loop (8) This resulting NDI control law depends on\naccurate knowledge of the aerodynamic moments, hence it\nis susceptible to model uncertainties contained in both M a\nand M c In NDI control design, we consider outputs with relative\ndegrees of one (rates), meaning a first-order system to\nbe controlled, see Fig 1",
    "1 Extensions of input-output linearization for systems involving higher relative degrees are\ndone via feedback linearization (Slotine and Li (1990); Chu\n(2010)) Extensions of input-output linearization for systems involving higher relative degrees are\ndone via feedback linearization (Slotine and Li (1990); Chu\n(2010)) 3 3 2 Incremental Nonlinear Dynamic Inversion\n\n\nThe concept of incremental nonlinear dynamic inversion\n(INDI) amounts to the application of NDI to a system\nexpressed in an incremental form This improves the robustness of the closed-loop system as compared with conventional NDI since dependency on the accurate knowledge of the plant dynamics is reduced Unlike NDI, this\n\n\nX, Y, Z V, ψ, γ µ, α, β p, q, r\n\n\n\n\n\n\n\n\n\nFig 1 Four loop nonlinear flight control design We are focused on nonlinear dynamic inversion of the rate control loop\n(grey box) in the following We are focused on nonlinear dynamic inversion of the rate control loop\n(grey box) in the following Image credits: Sonneveldt (2010) Image credits: Sonneveldt (2010) control design technique is implicit in the sense that desired closed-loop dynamics do not reside in some explicit\nmodel to be followed but result when the feedback loops\nare closed (Bacon and Ostroff (2000); Bacon et al (2000)) To obtain an incremental form of system dynamics, we\nconsider a first-order Taylor series expansion of ˙ω (Smith\n(1998); Bacon and Ostroff (2000); Bacon et al (2000,\n2001); Sieberling et al (2010); Acquatella B et al (2012,\n2013)), not in the geometric sense, but with respect to a\nsuffiently small time-delay λ as\n\n\n˙ ˙\nω = ω 0 + ∂ω [∂] �f (ω) + G(ω)δ� [�] ��� ωδ==δω 00 (ω − ω 0 )\n\n+ ∂δ [∂] �G(ω)δ� [�] ��� ωδ==δω 00 (δ − δ 0 ) + O(∆ω [2], ∆δ [2] )\n\n\n∼ ˙\n= ω 0 + f 0 (ω − ω 0 ) + G 0 (δ − δ 0 )\n\nwith\n\n˙\nω 0 ≡ f (ω 0 ) + G(ω 0 )δ 0 = ˙ω(t − λ) (11a)\nwhere ω 0 = ω(t − λ) and δ 0 = δ(t − λ) are the timedelayed signals of the current state ω and control δ, respectively This means an approximate linearization about\nthe λ−delayed signals is performed incrementally For such sufficiently small time-delay λ so that f (ω) does\nnot vary significantly during λ, we assume the following\napproximation to hold\nǫ INDI (t) ≡ f (ω(t − λ)) − f (ω(t)) [∼] = 0 (12)\n\nwhich leads to\n∆˙ω = [∼] G 0           - ∆δ (13)\n\n˙ ˙ ˙ ˙\nHere, ∆˙ω = ω − ω 0 = ω − ω(t − λ) represents the\nincremental acceleration, and ∆δ = δ − δ 0 represents\nthe so-called incremental control input For the obtained\napproximation ˙ω [∼] = ˙ω 0 + G 0 (δ − δ 0 ), NDI is applied to\nobtain a relation between the incremental control input\nand the output of the system\n\n˙\nδ = δ 0 + G [−] 0 [1] �ν − ω 0 � (14)\n\n\nNote that the deflection angle δ 0 that corresponds to ˙ω 0\nis taken from the output of the actuators, and it has\nbeen assumed that a commanded control is achieved sufficiently fast according to the assumptions of the actuator\ndynamics in (5) The total control command along with\nthe obtained linearizing control ∆δ can be rewritten as\n\n\nδ(t) = δ(t − λ) + G [−] 0 [1] ν − ω˙ (t − λ) (15)\n� �\n\n\nThe dependency of the closed-loop system on accurate\nknowledge of the airframe model in f (ω) is largely decreased, improving robustness against model uncertainties contained therein Therefore, this implicit control law\n\n\n\ndesign is more dependent on accurate measurements or\naccurate estimates of ˙ω 0, the angular acceleration, and δ 0,\nthe deflection angles, respectively Remark 1: By using the measured ˙ω(t − λ) and δ(t − λ)\nincrementally we practically obtain a robust, model-free\ncontroller with the self-scheduling properties of NDI Notice, however, that typical INDI control laws are nevertheless also depending on effector blending models reflected in G 0, which makes this implicit controller susceptible to uncertainties in these terms Instead, consider the\nfollowing transformation as in (Chang and Jung (2009))\n\n˙\nω = H + ¯g · δ (16)\n\nwith\nH(t) = f (ω) + (G(ω) − g¯)δ,\nand with the following (but not limited) options for ¯g\n(Chang and Jung (2009)), where n = 3 in our case\n\n\n\nApplying nonlinear dynamic inversion (NDI) to (16) results in an expression for the control input of the vehicle\n\nas\nδ(t) = ¯g [−][1] [�] ν(t) − H(t)� (17)\n\n\nConsidering H 0 = ˙ω 0 − g¯ · δ 0, the incremental counterpart\nof (17) results in a control law that is neither depending\non the airframe model nor the effector blending moments\n\nδ(t) = δ(t − λ) + ¯g [−][1] [�] ν − ω˙ (t − λ) (18)\n�\n\n\nRemark 2: The self-scheduling properties of INDI in (15)\ndue to the term G 0 are now lost, suggesting that ¯g should\nbe an scheduling variable 3 3 Time Delay Control and Proportional Integral control\n\n\nTime delay control (TDC) (Chang and Jung (2009)) departs from the usual dynamic inversion input transformation of (16)\nδ(t) = ¯g [−][1] [�] ν(t) − H [¯] (t)� (19)\nwhere case whenH [¯] denotes an estimation ofH¯ = H which results in perfect inversion H, being the nominal\nInstead of having an estimate, the TDC takes the following\nassumption (Chang and Jung (2009)) analogous to (12)\nǫ T DC (t) ≡ H(t − λ) − H(t) [∼] = 0 (20)\n\n\nThis relationship is used together with (16) to obtain what\nis called time-delay estimation (TDE) as the following\n\n\n\n\n\n, ¯g 2 =\n\n\n\n\n1 0 · · · 0\n\n0 1 0 1\n\n\n\n\n\n\n\n\n\nk G 1 0 - · · 0\n0 k G 2 0 k G n\n\n\n\n \n\n\n\ng¯ 1 = k G - I n = k G\n\n\n\n\n\n\n\n\nH¯ = H(t − λ) = ˙ω(t − λ) − g¯ · δ(t − λ) (21)\n\n\nIn addition, ǫ(t) is called TDE error at time t Combining\nthe equations we obtain the following TDC law\n\n˙\nδ(t) = δ(t − λ) + ¯g [−][1] [�] ν − ω(t − λ)� (22)\nwhich is in fact equivalent to the INDI control law obtained\nin (18) Appropriate selection of ¯g must ensure stability\naccording to (Chang and Jung (2009)), and ideally, this\nterm should be tuned according to the best estimate of the\ntrue effector blending moment ˆg(˜ω) for measured angular\nvelocities ˜ω So far we have considered derivations in continuous-time For practical implementations of these controllers and\nfor the matters of upcoming discussions, sampled-time\nformulations involving continuous and discrete quantities\nas in (Chang and Jung (2009)) are more convenient and\nrestated here For that, considering that the smallest λ one\ncan consider is the equivalent of the sampling period t s of\nthe on-board computer The sampled formulation of (22)\nmay be expressed as\n\n˙\nδ(k) = δ(k − 1) + ¯g [−][1] [�] ν(k − 1) − ω(k − 1)� (23)\nwhere it has been necessary to consider ν at sample k−1 for\ncausality reasons Replacing the sampled virtual control ν\naccording to (8) we have\n\n\n˙\nδ(k) = δ(k − 1) + ¯g [−][1] [�] e(k − 1) + k P e(k − 1)� (24)\nand we can consider the following finite difference approximation of the error derivatives as angular accelerations\nare not directly measured\n\n˙\ne(k) = [e(k) − e(k − 1)]/t s (25)\n\n\nConsider now the standard proportional-integral (PI) control\n\n\n\nδ(t) = K�e(t) + T I [−][1]\n\n\n\nt\n\ne(σ)dσ� + δ DC, (26)\n\n� 0\n\n\n\nwhere K ∈R [3][×][3] denotes a diagonal proportional gain\nmatrix, T I ∈R [3][×][3] a constant diagonal matrix representing a reset or integral time, and δ DC ∈R [3] denotes a\nconstant vector representing a trim-bias, which acts as\na trim setting and is computed by evaluating the initial\nconditions The discrete form of the PI is given by\n\n\n\nwe have the following relationships as originally found\nin (Chang and Jung (2009)) which are the relationship\nbetween the discrete formulations of TDC and PI in\n\nincremental form\nK = (¯g · t s ) [−][1], T I = k P [−][1] (29)\n\n\nWhenever the system under consideration is of secondorder controller canonical form, we will have error dynamics of the form ¨e + k D ˙e + k P e = 0, and considering the\nnewly introduced derivative gain k D related to ¨e we have\nK = k D  - (¯g · t s ) [−][1], T I = k D  - k P [−][1] [,] T D = k D [−][1] (30)\n\n\nThis suggests not only that an equivalent discrete PI(D)\ncontroller with gains < K, T i, (T d ) > can be obtained\nvia INDI/TDC, but doing so is more meaningful and\nsystematic than heuristic methods This is because we\nbegin the design from desired error dynamics given by\nHurwitz gains < k P, (k D ) > and what follows is finding\nthe remaining effector blending gain ¯g either analytically\nwhenever G is well known, with a proper estimate G [ˆ], or by\ntuning according to closed-loop requirements As already\nmentioned, details on a sufficient condition for closed-loop\nstability under discrete TDC, and therefore applicable to\nits equivalent INDI, can be found in (Chang and Jung\n(2009)) and the references therein In essence, this procedure is more efficient and much less\ncumbersome than designing a whole set of gains iteratively Moreover, for flight control systems, the self-scheduling\nproperties of inversion-based controllers have suggested superior advantages with respect to PID controls since these\nmust be gain-scheduled according to the flight envelope\nvariations The relationships here outlined suggests that\nPID-scheduling shall be done at the proportional gain K\nvia the effector blending gain ¯g, and not over the whole\nset of gains < K, T i, (T d ) > 4",
    "4 LONGITUDINAL FLIGHT CONTROL\n\nSIMULATION\n\n\nIn this section, robust PI tuning via INDI is demonstrated\nwith a simple yet significant example consisting of the\ntracking control design for a longitudinal launcher vehicle\nmodel The second-order nonlinear model is obtained from\n(Sonneveldt (2010); Kim et al (2004)), and it consists on\nlongitudinal dynamic equations representative of a vehicle\ntraveling at an altitude of approximately 6000 meters,\nwith aerodynamic coefficients represented as third order\npolynomials in angle of attack α and Mach number M The nonlinear equations of motion in the pitch plane are\ngiven by\n\n\n\nδ(k) = K�e(k − 1) + T I [−][1]\n\n\n\nk−1\n� t s e(i)� + δ DC (27)\n\n\ni=0\n\n\n\nWhen substracting two consecutive terms of this discrete\nformulation, we can remove the integral sum and achieve\nthe so-called PI controller in incremental form\n\n˙\nδ(k) = δ(k − 1) + K · t s �e(k − 1) + T I [−][1] - e(k − 1)� (28)\n\n\nFollowing the same steps, and for completeness, we also\npresent the PID extension by simply considering the extra\nderivative term ¨e\n\n¨\nδ(k) = δ(k−1)+K - t s �T D e(k−1)+ ˙e(k−1)+T I [−][1] - e(k−1)�,\n\nwhere T D ∈R [3][×][3] denotes a constant diagonal matrix\nrepresenting derivative time The nonlinear equations of motion in the pitch plane are\ngiven by\n\n\n\nδ(k) = K�e(k − 1) + T I [−][1]\n\n\n\nk−1\n� t s e(i)� + δ DC (27)\n\n\ni=0\n\n\n\nWhen substracting two consecutive terms of this discrete\nformulation, we can remove the integral sum and achieve\nthe so-called PI controller in incremental form\n\n˙\nδ(k) = δ(k − 1) + K · t s �e(k − 1) + T I [−][1] - e(k − 1)� (28)\n\n\nFollowing the same steps, and for completeness, we also\npresent the PID extension by simply considering the extra\nderivative term ¨e\n\n¨\nδ(k) = δ(k−1)+K - t s �T D e(k−1)+ ˙e(k−1)+T I [−][1] - e(k−1)�,\n\nwhere T D ∈R [3][×][3] denotes a constant diagonal matrix\nrepresenting derivative time 3 4 Equivalence of INDI/TDC/PI(D)\n\n\nHaving in mind the found the equivalence between INDI\nand TDC, and comparing terms from (24) with (28),\n\n\n\n¯\n˙ qS\nα = q +\nmV T\n\n\n\nC z (α, M ) + b z (M )δ, (31a)\n� �\n\n\n\nq˙ = [qSd][¯]\n\nI yy\n\n\n\nC m (α, M ) + b m (M )δ, (31b)\n� �\n\n\n\nwhere\n\nC z (α, M ) = ϕ z1 (α) + ϕ z2 (α)M,\nC m (α, M ) = ϕ m1 (α) + ϕ m2 (α)M,\nb z (M ) = 1 6238M − 6 7240,\nb m (M ) = 12 0393M − 48 2246,\n\n\nand\nϕ z1 (α) = −288 7α [3] + 50 32α |α| − 23 89α,\nϕ z2 (α) = −13 53α |α| + 4 185α,\nϕ m1 (α) = 303 1α [3] − 246 3α |α| − 37 56α,\nϕ m2 (α) = 71 51α |α| + 10 01α These approximations are valid for the flight envelope of\n−10 [◦] ≤ α ≤ 10 [◦] and 1 8 ≤ M ≤ 2 6",
    "6 To facilitate\nthe control design, the nonlinear longitudinal model is\nrewritten in the more general state-space form as\nx˙ 1 = x 2 + f 1 (x 1 ) + g 1 u (32a)\nx˙ 2 = f 2 (x 1 ) + g 2 u (32b)\n\nwhere:\n\nx 1 = α, x 2 = q\ng 1 = C 1 b z, g 2 = C 2 b m\n\nand\n\nqS¯\nf 1 (x 1 ) = C 1 �ϕ z1 (x 1 ) + ϕ z2 (x 1 )M �, C 1 =,\nmV T\n\nf 2 (x 1 ) = C 2 �ϕ m1 (x 1 ) + ϕ m2 (x 1 )M �, C 2 = [qSd][¯] I yy\n\n\nThe control objective considered here is to design a PI\nautopilot via INDI that tracks a smooth command reference y r with the pitch rate x 2 It is assummed that the\naerodynamic force and moment functions are accurately\nknown and the Mach number M is treated as a parameter\navailable for measurement Moreover, for this second-order\nsystem in non-lower triangular form due to g 1 u and f 2 (x 1 ),\npitch rate control using INDI is possible due to the timescale separation principle (Chu (2010); Sieberling et al Moreover, for this second-order\nsystem in non-lower triangular form due to g 1 u and f 2 (x 1 ),\npitch rate control using INDI is possible due to the timescale separation principle (Chu (2010); Sieberling et al (2010)) With respect to actuator dynamics modeled as in\n(5), we consider K a = 1, and τ a = 1e [−][2] 4 1 Pitch rate control design\n\n\nFirst, introduce the rate-tracking error\nz 2 = x 2 − x 2 ref (33)\nthe z 2 −dynamics satisfy the following error\nz˙ 2 = ˙x 2 − x˙ 2 ref (34)\nfor which we design the following exponentially stable\ndesired error dynamics\n\n˙\nz 2 + k P 2 z 2 = 0, k P 2 = 50 rad/s (35)\nAccording to the results previously outlined, the incremental nonlinear dynamic inversion control law design follows\nfrom considering the approximate dynamics around the\ncurrent reference state for the dynamic equation of the\npitch rate as in (13)\nq˙ [∼] = ˙q 0 + ¯g · ∆δ (36)\nassuming that pitch acceleration is available for measurement and the scalar ¯g to be a factor of the accurately\nknown estimate of g 2\n\ng¯ = k G           - ˆg 2, k G = 1 This is rewritten in our formulation as\n\n˙\nx 2 = ˙ [∼] x 2 0 + ¯g · ∆u (37)\nxwhere recalling that ˙˙ 2, and therefore the incremental nonlinear dynamic in-x 2 0 is an incremental instance before\nversion law is hence obtained as\n\n˙\nu = u 0 + ¯g [−][1] [�] ν − x 2 0 �, (38)\n\n\n\nwith\nν = −k P 2 z 2 + ˙x 2 ref, (39)\nor more compactly\n\n˙\nu = u 0 + ¯g [−][1] [�] − k P 2 z 2 − x 2 0 + ˙x 2 ref � (40)\n\n\nThis results as desired, in the following z 2 −dynamics\n\n˙ ˙\nz 2 = ˙x 2 0 + ¯g · ∆u − x 2 ref (41)\n\n\nNotice that we are replacing the accurate knowledge of f 2\nby a measurement (or an estimate) as f 2 = ˙ [∼] x 2 0, which will\nresult in a control law which is not entirely dependent on\na model, hence more robust We now consider these continuous-time formulations in\nsampled-time To that end, we replace the small λ with\nthe sampling period t s so that t k = k · t s is the k−th\nsampling instant at time k, and therefore\nu(k) = u(k − 1)+\ng¯ [−][1] [�] − k P 2 z 2 (k − 1) − x˙ 2 (k − 1) + ˙x 2 ref (k − 1)�, (42)\n\nwhere due to causality relationships we need to consider\nthe independent variables at the same sampling time k −1 Referring back to the derived relationship between INDI\nand PI control, the equivalent PI control in incremental\nform is\n\n˙\nu(k) = u(k − 1) + K · t s �z 2 (k − 1) + T I [−][1] z 2 (k − 1)�,\n(43)\n\nwith\nK = (¯g · t s ) [−][1], T I = k P [−] 2 [1] (44)\n\n\nThe nature of the desired error dynamics (proportional)\ngain k P 2 is therefore of an integral control action, whereas\nthe effector blending gain ¯g act as proportional control Having designed for desired error dynamics, and for a\ngiven sampling time t s, tuning a pitch rate controller is\ngonly a matter of selecting a proper effector blending gain¯ according to performance requirements Remark 3: Notice at this point that having the PI control\nin incremental form introduces a finite difference of the\nerror state, which is the equivalent counterpart of what\nhas been considered the acceleration or state derivative\nx˙ 2 0 in INDI controllers Remark 4: Notice also that designing the PI control\ngains via INDI is highly beneficial, since only the effector\nblending gain is the tuning variable This strongly suggests\nthat robust adaptive control can be achieved by scheduling\nthis variable online during flight and not over the whole\nset of gains Simulation results for the INDI/PI control are presented in\nFigure 2, considering smooth rate doublets for a nominal\nlongitudinal dynamics model at Mach 2 For both controllers, the same zero-mean Gaussian white-noise with\nstandard deviation s d q = 1e [−][3] rad/s is added to the rates\nto simulate noisy measurements The designed INDI gains\nof k P 2 = 50 rad/s and k G = 1 are mapped to PI gains\nresulting in K = 100 ˆg 2 [−][1] and T I = 0 02 s, both controllers\nshowing identical closed-loop response as expected With this example, it is demonstrated how a self-scheduled\nPI can be tuned via INDI by departing from desired error\ndynamics with the gain k P 2, and considering an accurate\neffector blending model estimate ¯g = ˆg 2 6\n\n\n4\n\n\n2\n\n\n0\n\n\n−2\n\n\n−4\n\n\n\n\n\nAIAA Guidance, Navigation, and Control Conference American Institute of Aeronautics and Astronautics,\nInc (AIAA-2012-4623) Acquatella B , P , van Kampen, E , and Chu, Q P (2013)",
    "(2013) Incremental Backstepping for Robust Nonlinear Flight\nControl In EuroGNC 2013, 2nd CEAS Specialist Conference on Guidance, Navigation, and Control In EuroGNC 2013, 2nd CEAS Specialist Conference on Guidance, Navigation, and Control Bacon, B J and Ostroff, A J (2000) (2000) Reconfigurable\nFlight Control using Nonlinear Dynamic Inversion with\na Special Accelerometer Implementation In AIAA\nGuidance, Navigation, and Control Conference and Exhibit (AIAA-2000-4565) Bacon, B J , Ostroff, A J , and Joshi, S M (2000) (2000) Nonlinear Dynamic Inversion Reconfigurable Controller utilizing a Fault-tolerant Accelerometer Approach Technical\nreport, NASA Langley Research Center Bacon, B J , Ostroff, A J , and Joshi, S M (2001) (2001) Reconfigurable NDI Controller using Inertial Sensor Failure\nDetection & Isolation IEEE Transactions on Aerospace\nand Electronic Systems, 37, 1373–1383 IEEE Transactions on Aerospace\nand Electronic Systems, 37, 1373–1383 Chang, P H and Jung, J H (2009) (2009) A Systematic Method\nfor Gain Selection of Robust PID Control for Nonlin\near Plants of Second-Order Controller Canonical Form IEEE Transactions on Control Systems Technology,\n17(2), 473–483 Chen, H B and Zhang, S G (2008) Robust Dynamic\nInversion Flight Control Law Design In ISSCAA 2008,\n2nd International Symposium on Systems and Control\nin Aerospace and Astronautics In ISSCAA 2008,\n2nd International Symposium on Systems and Control\nin Aerospace and Astronautics Chu, Q P (2010) Advanced Flight Control Lecture notes,\nDelft University of Technology, Faculty of Aerospace\nEngineering Lecture notes,\nDelft University of Technology, Faculty of Aerospace\nEngineering Kim, S H , Kim, Y S , and Song, C (2004)",
    "(2004) A Robust\nAdaptive Nonlinear Control Approach to Missile Autopilot Design Control Engineering Practice, 33(6),\n1732–1742 Sieberling, S , Chu, Q P , and Mulder, J A (2010) Robust\nFlight Control Using Incremental Nonlinear Dynamic\nInversion and Angular Acceleration Prediction Journal\nof Guidance, Control and Dynamics, 33(6), 1732–1742 Simpl´ıcio, P , Pavel, M , van Kampen, E , and Chu, Q P (2013) (2013) An Acceleration Measurements-based Approach\nfor Helicopter Nonlinear Flight Control using Incremental Nonlinear Dynamic Inversion Control Engineering\nPractice, 21(8), 1065–1077 Control Engineering\nPractice, 21(8), 1065–1077 Slotine, J J and Li, W (1990) Applied Nonlinear Control Applied Nonlinear Control Prentice Hall Inc Smeur, E J , Chu, Q P , and de Croon, G C (2016a) (2016a) Adaptive Incremental Nonlinear Dynamic Inversion for\nAttitude Control of Micro Air Vehicles Journal of\nGuidance, Control and Dynamics, 39(3), 450–461 Smeur, E J , de Croon, G C , and Chu, Q P (2016b) (2016b) Gust Disturbance Alleviation with Incremental Nonlinear Dynamic Inversion In IEEE/RSJ International\nConference on Intelligent Robots and Systems (IROS) Smith, P R (1998) A Simplified Approach to Nonlinear Dynamic Inversion Based Flight Control In\nAIAA Atmospheric Flight Mechanics Conference, 762–\n770 American Institute of Aeronautics and Astronautics, Inc (AIAA-98-4461) Sonneveldt, L (2010) Adaptive Backstepping Flight Control for Modern Fighter Aircraft PhD thesis, Delft University of Technology, Faculty of Aerospace Engineering 6\n\n\n4\n\n\n2\n\n\n0\n\n\n−2\n\n\n−4\n\n\n\n−6\n\n\n−4\n\n\n−2\n\n\n0\n\n\n2\n\n\n4\n\n\n\n−6 q IN DI − q P I −6 δ IN DI − δ P I 6\n\n\n\n−6\n\n\n\n\n|Col1|Col2|Col3|Col4|Col5|Col6|Col7|\n|---|---|---|---|---|---|---|\n||||||||\n||||||||\n||||||||\n||||||||\n||||||||\n|||||qREF<br>qIN DI<br>qP I<br>|||\n|||||qIN DI|−qP I|−qP I|\n||||||||\n\n\n|Col1|Col2|Col3|Col4|Col5|\n|---|---|---|---|---|\n||||||\n||||||\n||||||\n||||||\n||||||\n|||αIN DI<br>αIN DI <br>δIN DI<br>δ|−αP I<br>δ||\n|||IN DI|−P I|−P I|\n||||||\n\n\n\n0 5 10 15 20 0 5 10 15 20\n\ntime (s) time (s)\n\n\nFig 2 INDI/PI nominal tracking control simulation of the\nflight model (31) for k P 2 = 50 rad/s and k G = 1\n\n\n5 CONCLUSIONS\n\n\nThis paper presented a meaningful and systematic method\nfor PI(D) tuning of robust nonlinear flight control systems\nbased on results previously reported in the robotics literature (Chang and Jung (2009)) regarding the relationship between time-delay control (TDC) and proportionalintegral-derivative control (PID) The method was demonstrated in the context of an example for the pitch rate\ntracking of a conventional longitudinal nonlinear flight\nmodel, showing the same tracking performance under\nnominal conditions Being incremental nonlinear dynamic inversion (INDI)\nequivalent to TDC clearly suggests that imposing desired error dynamics, as usual for INDI control laws,\nand then mapping these into an equivalent incremental\nPI(D)-controller together with control derivatives leads to\na meaningful and systematic PI(D) gain tuning method,\nwhich is very difficult to do heuristically We considered a reformulation of the plant dynamics inversion which reduces knowledge of the effector blending\nmodel (control derivatives) from the resulting control law,\nreducing feedback control dependency on accurate knowledge of both the aircraft and effector blending models,\nhence resulting in robust and model-free control laws like\nthe PI(D) control Since usual flight control systems involves gain scheduling over the flight envelope, another\nkey benefit of this result is that scheduling only the effector blending gain seems promising for adaptive control\nsystems Since usual flight control systems involves gain scheduling over the flight envelope, another\nkey benefit of this result is that scheduling only the effector blending gain seems promising for adaptive control\nsystems ACKNOWLEDGEMENTS\n\n\nM Ruf, N Tekles, and G Tekles, and G Looye are acknowledged for\ndiscussions leading to improvements of this paper REFERENCES\n\n\nAcquatella B , P , Falkena, W , van Kampen, E , and Chu,\nQ P (2012) (2012) Robust Nonlinear Spacecraft Attitude Control using Incremental Nonlinear Dynamic Inversion Robust Nonlinear Spacecraft Attitude Control using Incremental Nonlinear Dynamic Inversion In"
  ]
}