{
  "filename": "Temporal_Logic_Verification_of_Stochastic_Systems_.pdf",
  "text_length": 42962,
  "chunk_count": 14,
  "chunks": [
    "## Temporal Logic Verification of Stochastic Systems Using Barrier Certificates [⋆]\n\nPushpak Jagtap [1], Sadegh Soudjani [2], and Majid Zamani [1]\n\n\n1 Technical University of Munich, Germany\n{pushpak jagtap,zamani}@tum de\n2 Newcastle University, United Kingdom\nSadegh Soudjani@ncl ac uk\n\n\nAbstract uk\n\n\nAbstract This paper presents a methodology for temporal logic verification of\ndiscrete-time stochastic systems Our goal is to find a lower bound on the probability\nthat a complex temporal property is satisfied by finite traces of the system Desired\ntemporal properties of the system are expressed using a fragment of linear temporal\nlogic, called safe LTL over finite traces We propose to use barrier certificates for computations of such lower bounds, which is computationally much more efficient than\nthe existing discretization-based approaches The new approach is discretization-free\nand does not suffer from the curse of dimensionality caused by discretizing state sets The proposed approach relies on decomposing the negation of the specification into a\nunion of sequential reachabilities and then using barrier certificates to compute upper\nbounds for these reachability probabilities We demonstrate the effectiveness of the\nproposed approach on case studies with linear and polynomial dynamics 1 Introduction\n\n\nVerification of dynamical systems against complex specifications has gained significant attention in last few decades [3,29] The verification task is challenging for continuous-space\ndynamical systems under uncertainties and is hard to be performed exactly There have been\nseveral results in the literature utilizing approximate finite models (a There have been\nseveral results in the literature utilizing approximate finite models (a k a abstractions) for\nverification of stochastic dynamical systems Examples include results on verification of\ndiscrete-time stochastic hybrid systems against probabilistic invariance [25,23] and linear\ntemporal logic specifications [1,30] using Markov chain abstractions Verification of discretetime stochastic switched systems against probabilistic computational tree logic formulae is\ndiscussed in [14] using interval Markov chains as abstract models However, these abstraction\ntechniques are based on state set discretization and face the issue of discrete state explosion This scalability issue is only partly mitigated in [24,15] based on compositional abstraction\nof stochastic systems On the other hand, a discretization-free approach, based on barrier certificates, has been\nused for verifying stochastic systems against simple temporal properties such as safety and\nreachability Employing barrier certificates for safety verification of stochastic systems is\ninitially proposed in [19] Similar results are reported in [32] for switched diffusion processes\n\n\n⋆ This work was supported in part by the German Research Foundation (DFG) through the grant\nZA 873/1-1 and the TUM International Graduate School of Science and Engineering (IGSSE) and piecewise-deterministic Markov processes The results in [9] propose a probabilistic barrier certificate to compute bounds on the probability that a stochastic hybrid system reaches\nunsafe region However, in order to provide infinite time horizon guarantees, all of these results require an assumption that the barrier certificates exhibit supermartingale property\nwhich in turns presuppose stochastic stability and vanishing noise at the equilibrium point\nof the system In this work, we consider the problem of verifying discrete-time stochastic systems against\ncomplex specifications over finite time horizons without requiring any assumption on the stability of the system This is achieved by relaxing supermartingale condition to c-martingale\nas also utilized in [27] Correspondingly, instead of infinite-horizon specifications, we consider\nfinite-horizon temporal specifications, which are more practical in the real life applications\nincluding motion planning problems [22,16,2] In spirit, this work extends the idea of combining automata representation of the specification and barrier certificates, which is proposed\nin [33] for non-stochastic dynamics, in order to verify stochastic systems against specifications expressed as a fragment of LTL formulae, namely, safe LTL on finite traces Our work\nalso has the same flavour as [6], but in a completely different setting, in combining barrier\ncertificates to guarantee satisfaction of temporal specifications To the best of our knowledge, this paper is the first one to use barrier certificates for algorithmic verification of stochastic systems against a wide class of temporal properties Our\nmain contribution is to provide a systematic approach for computing lower bounds on the\nprobability that the discrete-time stochastic system satisfies given safe LTL specification\nover a finite time horizon This is achieved by first decomposing specification into a sequence of simpler verification tasks based on the structure of the automaton associated with\nthe negation of the specification Next, we use barrier certificates for computing probability bounds for simpler verification tasks which are further combined to get a (potentially\nconservative) lower bound on the probability of satisfying the original specification The effectiveness of the proposed approach is demonstrated using several case studies with linear\nand polynomial dynamics",
    "The effectiveness of the proposed approach is demonstrated using several case studies with linear\nand polynomial dynamics 2 Preliminaries\n\n\n2 1 Notations\n\n\nWe denote the set of nonnegative integers by N 0 := {0, 1, 2, } and the set of positive\nintegers by N := {1, 2, 3, } The symbols R, R [+], and R [+] 0 [denote the set of real, positive, and]\nnonnegative real numbers, respectively We use R [n][×][m] to denote the space of real matrices\nwith n rows and m columns We consider a probability space (Ω, F Ω, P Ω ) where Ω is the sample space, F Ω is a sigmaalgebra on Ω comprising the subset of Ω as events, and P Ω is a probability measure that\nassigns probabilities to events We assume that random variables introduced in this article\nare measurable functions of the form X : (Ω, F Ω ) → (S X, F X ) as Prob{A} = P Ω {X [−][1] (A)}\nfor any A ∈F X We often directly discuss the probability measure on (S X, F X ) without\nexplicitly mentioning the underlying probability space and the function X itself We often directly discuss the probability measure on (S X, F X ) without\nexplicitly mentioning the underlying probability space and the function X itself 2 2 Discrete-time stochastic systems\n\n\nIn this work, we consider discrete-time stochastic systems given by a tuple S = (X, V w, w, f ),\nwhere X and V w are Borel spaces representing state and uncertainty spaces of the system We denote by (X, B(X)) the measurable space with B(X) being the Borel sigma-algebra on\nthe state space Notation w denotes a sequence of independent and identically distributed\n(i i d ) random variables on the set V w as w := {w(k) : Ω → V w, k ∈ N 0 } The map\nf : X × V w → X is a measurable function characterizing the state evolution of the system For a given initial state x(0) ∈ X, the state evolution can be written as\n\n\nx(k + 1) = f (x(k), w(k)), k ∈ N 0 (1)\n\n\nWe denote the solution process generated over N time steps by x N = x(0), x(1), , x(N −\n1) The sequence w together with the measurable function f induce a unique probability\nmeasure on the sequences x N We are interested in computing a lower bound on the probability that system S = (X, V w, w, f )\nsatisfies a specification expressed as a temporal logic property We provide syntax and semantics of the class of specifications dealt with in this paper in the next subsection 2 3 Linear temporal logic over finite traces\n\n\nIn this subsection, we introduce linear temporal logic over finite traces, referred to as LTL F\n\n[4] LTL F uses the same syntax of LTL over infinite traces given in [3] The LTL F formulas\nover a set Π of atomic propositions are obtained as follows:\n\n\nϕ ::= true | p | ¬ϕ | ϕ 1 ∧ ϕ 2 | ϕ 1 ∨ ϕ 2 | �ϕ | ♦ϕ | □ϕ | ϕ 1 Uϕ 2,\n\n\nwhere p ∈ Π, � is the next operator, ♦ is eventually, □ is always, and U is until The\nsemantics of LTL F is given in terms of finite traces, i e , finite words σ, denoting a finite\nnon-empty sequence of consecutive steps over Π We use |σ| to represent the length of σ and\nσ i as a propositional interpretation at ith position in the trace, where 0 ≤ i < |σ| Given a\nfinite trace σ and an LTL F formula ϕ, we inductively define when an LTL F formula ϕ is\ntrue at the ith step (0 ≤ i < |σ|), denoted by σ, i |= ϕ, as follows:\n\n\n–\nσ, i |= true;\n– σ, i |= p, for p ∈ Π iff p ∈ σ i ;\n– σ, i |= ¬ϕ iff σ, i ̸|= ϕ;\n– σ, i |= ϕ 1 ∧ ϕ 2 iff σ, i |= ϕ 1 and σ, i |= ϕ 2 ;\n– σ, i |= ϕ 1 ∨ ϕ 2 iff σ, i |= ϕ 1 or σ, i |= ϕ 2 ;\n– σ, i |= �ϕ iff i < |σ| − 1 and σ, i + 1 |= ϕ;\n– σ, i |= ♦ϕ iff for some j such that i ≤ j < |σ|, we have σ, j |= ϕ;\n– σ, i |= □ϕ iff for all j such that i ≤ j < |σ|, we have σ, j |= ϕ;\n– σ, i |= ϕ 1 Uϕ 2 iff for some j such that i ≤ j < |σ|, we have σ, j |= ϕ 2, and for all k s t i ≤ k < j, we have σ, k |= ϕ 1 The formula ϕ is true on σ, denoted by σ |= ϕ, if and only if σ, 0 |= ϕ We denote the\nlanguage of such finite traces associated with LTL F formula ϕ by L(ϕ) Notice that in\n\n\nthis case we also have the usual boolean equivalences such as ϕ 1 ∨ ϕ 2 ≡¬(¬ϕ 1 ∧¬ϕ 2 ),\nϕ 1 =⇒ ϕ 2 ≡¬ϕ 1 ∨ ϕ 2, ♦ϕ ≡ true Uϕ, and □ϕ ≡¬♦¬ϕ In this paper, we consider only safety properties [12] Hence, we use a subset of LTL F called\nsafe LTL F as introduced in [22] and defined as follows Definition 1",
    "Definition 1 An LTL F formula is called a safe LTL F formula if it can be represented in\npositive normal form, i e , negations only occur adjacent to atomic propositions, using the\ntemporal operators next (�) and always (□) Next, we define deterministic finite automata which later serve as equivalent representations\nof LTL F formulae Definition 2 A deterministic finite automaton (DFA) is a tuple A = (Q, Q 0, Σ, δ, F ),\nwhere Q is a finite set of states, Q 0 ⊆ Q is a set of initial states, Σ is a finite set (a A deterministic finite automaton (DFA) is a tuple A = (Q, Q 0, Σ, δ, F ),\nwhere Q is a finite set of states, Q 0 ⊆ Q is a set of initial states, Σ is a finite set (a k a alphabet), δ : Q × Σ → Q is a transition function, and F ⊆ Q is a set of accepting states σ\nWe use notation q −→ q [′] to denote transition relation (q, σ, q [′] ) ∈ δ A finite word σ =\n(σ 0, σ 1, , σ n−1 ) ∈ Σ [n] is accepted by a DFA A if there exists a finite state run q =\n(q 0, q 1, , q n ) ∈ Q [n][+1] such that q 0 ∈ Q 0, q i −→ σ i q i+1 for all 0 ≤ i < n and q n ∈ F The\naccepted language of A, denoted by L(A), is the set of all words accepted by A According to [5], every LTL F formula ϕ can be translated to a DFA A ϕ that accepts the same\nlanguage as ϕ, i e , L(ϕ) = L(A ϕ ) Such A ϕ can be constructed explicitly or symbolically\nusing existing tools, such as SPOT [7] and MONA [8] Remark 1",
    "Remark 1 For a given LTL F formula ϕ over atomic propositions Π, the associated DFA\nA ϕ is usually constructed over the alphabet Σ = 2 [Π] Solution process of a system S is also\nconnected to the set of words by a labeling function L from the state space to the alphabet\nΣ Without loss of generality, we work with the set of atomic propositions directly as the\nalphabet rather than its power set Property satisfaction by the solution process For a given discrete-time stochastic\nsystem S = (X, V w, w, f ) with dynamics (1), finite-time solution processes x N are connected\nto LTL F formulae with the help of a measurable labeling function L : X → Π, where Π is\nthe set of atomic propositions Definition 3 For a stochastic system S = (X, V w, w, f ) and labeling function L : X → Π,\na finite sequence σ x N = (σ 0, σ 1, , σ N −1 ) ∈ Π [N] is a finite trace of the solution process\nx N = x(0), x(1), , x(N − 1) of S if we have σ k = L(x(k)) for all k ∈{0, 1, , N − 1} Next, we define the probability that the discrete-time stochastic system S satisfies safe LTL F\nformula ϕ over traces of length |σ| = N Definition 4 Let T race N (S) be the set of all finite traces of solution processes of S with\nlength |σ x N | = N and ϕ be a safe LTL F formula over Π Then P{T race N (S) |= ϕ} is the\nprobability that ϕ is satisfied by discrete-time stochastic system S over a finite time horizon\n\n[0, N ) ⊂ N 0",
    "Then P{T race N (S) |= ϕ} is the\nprobability that ϕ is satisfied by discrete-time stochastic system S over a finite time horizon\n\n[0, N ) ⊂ N 0 **10**\n\n\n**5**\n\n\n**0**\n\n\n**-5**\n\n\n**-10**\n\n\n\n|Col1|Col2|Col3|Col4|Col5|X<br>3|\n|---|---|---|---|---|---|\n||**X**|||||\n||**2**|||**X1**||\n|||||||\n|||**X0**||||\n|||||||\n\n\n**-10** **-5** **0** **5** **10**\n\n_**x**_ _**1**_\n\n\n(a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b)\n\n\n\nFig 1 (a) State space and regions of interest for Example 1, (b) DFA A ¬ϕ that accepts all traces\nsatisfying ¬ϕ where ϕ is given in (3) Remark 2 The set of atomic propositions Π = {p 0, p 1, , p M } and the labeling function\nL : X → Π provide a measurable partition of the state space X = ∪ [M] i=1 [X] [i] [ as][ X] [i] [ :=][ L] [−][1] [(][p] [i] [) ]\nWithout loss of generality, we assumed that X i ̸= ∅ for any i 2 4 Problem formulation\n\n\nProblem 1 Given a system S = (X, V w, w, f ) with dynamics (1), a safe LTL F specification ϕ\nof length N over a set Π = {p 0, p 1, , p M } of atomic propositions, and a labeling function\nL : X → Π, compute a lower bound on the probability that the traces of solution process\nof S of length N satisfies ϕ, i e , a quantity ϑ such that P{T race N (S) |= ϕ} ≥ ϑ Note that ϑ = 0 is a trivial lower bound, but we are looking at computation of lower bounds\nthat are as tight as possible For finding a solution to Problem 1, we first compute an\nupper bound on the probability P{T race N (S) |= ¬ϕ} This is done by constructing a DFA\nA ¬ϕ = (Q, Q 0, Π, δ, F ) that accepts all finite words over Π that satisfies ¬ϕ Example 1 Consider a two-dimensional stochastic system S = (X, V w, w, f ) with X =\nV w = R [2] and dynamics\n\n\nx 1 (k + 1) = x 1 (k) − 0 01x [2] 2 [(][k][) + 0][ ][1][w] [1] [(][k][)][,]\nx 2 (k + 1) = x 2 (k) − 0 01x 1 (k)x 2 (k) + 0 1w 2 (k), (2)\n\n\nwhere w 1 (·), w 2 (·) are independent standard normal random variables Let the regions of\ninterest be given as\n\n\nX 0 = {(x 1, x 2 ) ∈ X | x 1 ≥−10, −10 ≤ x 2 ≤ 0, and x 1 + x 2 ≤ 0},\n\n\nX 1 = {(x 1, x 2 ) ∈ X | 0 ≤ x 1 ≤ 10, x 2 ≤ 10, and x 1 + x 2 ≥ 0},\nX 2 = {(x 1, x 2 ) ∈ X | −10 ≤ x 1 ≤ 0 and 0 ≤ x 2 ≤ 10}, and\n\n\nX 3 = X \\ (X 0 ∪ X 1 ∪ X 2 ) The sets X 0, X 1, X 2, and X 3 are shown in Figure 1(a) The set of atomic propositions is\ngiven by Π = {p 0, p 1, p 2, p 3 }, with labeling function L(x) = p i for any x ∈ X i, i ∈{0, 1, 2, 3} We are interested in computing a lower bound on the probability that T race N (S) of length\nN satisfies the following specification:\n\n\n– Solution process should start in either X 0 or X 2 If it starts in X 0, it will always stay\naway from X 1 or always stay away from X 2 If it starts in X 2, it will always stay away\nfrom X 1 within time horizon [0, N ) ⊂ N 0 This property can be expressed by the safe LTL F formula\n\n\nϕ = (p 0 ∧ (□¬p 1 ∨            - ¬p 2 )) ∨ (p 2 ∧            - ¬p 1 ) (3)\n\n\nThe DFA corresponding to the negation of the safe LTL F formula ϕ in (3) is shown in Figure\n1(b) ⊓⊔\n\n\nNext, we provide a systematic approach to solve Problem 1 by combining automata and barrier certificates introduced in the next section We introduce the notion of barrier certificate\nsimilar to the one used in [19] and show how to use it for solving Problem 1 in Sections 4-5 3 Barrier Certificate\n\n\nWe recall that a function B : X → R is a supermartingale for system S = (X, V w, w, f ) if\n\n\nE[B(x(k + 1)) | x(k)] ≤ B(x(k)), ∀x(k) ∈ X, k ∈ N 0,\n\n\nwhere the expectation is with respect to w(k) This inequality requires that the expected\nvalue of B(x(·)) does not increases as a function of time To provide results for finite time\nhorizon, we instead use a relaxation of supermartingale condition called c-martingale",
    "To provide results for finite time\nhorizon, we instead use a relaxation of supermartingale condition called c-martingale Definition 5 Definition 5 Function B : X → R is a c-martingale for system S = (X, V w, w, f ) if it\nsatisfies\nE[B(x(k + 1)) | x(k)] ≤ B(x(k)) + c, ∀x(k) ∈ X, k ∈ N 0,\n\n\nwith c ≥ 0 being a non-negative constant We provide the following lemma and use it in the sequel This lemma is a direct consequence\nof [13, Theorem 1] and is also utilized in [27, Theorem II 1] Lemma 1 Let B : X → R [+] 0 [be a non-negative c-martingale for system][ S][ Then for any]\nconstant λ > 0 and any initial condition x 0 ∈ X,\n\n\nP{ sup B(x(k)) ≥ λ | x(0) = x 0 } ≤ [B][(][x] [0] [) +][ cT] [d] (4)\n0≤k≤T d λ\n\n\nNext theorem provides inequalities on a barrier certificate that gives an upper bound on\nreachability probabilities This theorem is inspired by the result of [19, Theorem 15] that\nuses supermartingales for reachability analysis of continuous-time systems Theorem 1 Consider a discrete-time stochastic system S = (X, V w, w, f ) and sets X 0, X 1 ⊆\nX Suppose there exist a non-negative function B : X → R [+] 0 [and constants][ c][ ≥] [0][ and]\nγ ∈ [0, 1] such that\n\n\nB(x) ≤ γ ∀x ∈ X 0, (5)\nB(x) ≥ 1 ∀x ∈ X 1, (6)\n\n\nB(x) is c-martingale ∀x ∈ X (7)\n\n\nThen the probability that the solution process x T d of S starts from initial state x(0) ∈ X 0\nand reaches X 1 within time horizon [0, T d ] ⊂ N 0 is upper bounded by γ + cT d Proof Since B(x(k)) is non-negative and c-martingale, we conclude that (4) in Lemma 1\nholds Now using (5) and the fact that X 1 ⊆{x ∈ X | B(x) ≥ 1}, we have P{x(k) ∈\nX 1 for some 0 ≤ k ≤ T d | x(0) = x 0 } ≤ P{sup 0≤k≤T d B(x(k)) ≥ 1 | x(0) = x 0 } ≤ B(x 0 ) +\ncT d ≤ γ + cT d This concludes the proof ⊓⊔\n\n\nTheorem 1 enables us to formulate an optimization problem by minimizing the value of\nγ and c in order to find an upper bound for finite-horizon reachability that is as tight as\npossible In the next section, we discuss how to translate LTL F verification problem into the computation of a collection of barrier certificates each satisfying inequalities of the form (5)-(7) Then we show in Section 5 how to use Theorem 1 to provide a lower bound on the probability\nof satisfying LTL F specifications over finite time horizon 4 Decomposition into Sequential Reachability\n\n\nConsider a DFA A ¬ϕ = (Q, Q 0, Π, δ, F ) that accepts all finite words of length n ∈ [0, N ] ⊂\nN 0 over Π that satisfy ¬ϕ Self-loops in the DFA play a central role in our decomposition p\nLet Q s ⊆ Q be a set of states of A ¬ϕ having self-loops, i e , Q s := {q ∈ Q | ∃p ∈ Π, q −→ q} Accepting state run of A ¬ϕ Sequence q = (q 0, q 1, , q n ) ∈ Q [n][+1] is called an accepting\nstate run if q 0 ∈ Q 0, q n ∈ F, and there exist a finite word σ = (σ 0, σ 1, , σ n−1 ) ∈ Π [n]\n\nsuch that q i −→ σ i q i+1 for all i ∈{0, 1, , n − 1} We denote the set of such finite words by\nσ(q) ⊆ Π [n] and the set of accepting runs by R We also indicate the length of q ∈ Q [n][+1] by\n|q|, which is n + 1 Let R ≤N +1 be the set of all finite accepting state runs of lengths less than or equal to N +1\nexcluding self-loops,\n\n\nR ≤N +1 := {q = (q 0, q 1, , q n ) ∈R | n ≤ N, q i ̸= q i+1, ∀i < n} (8)\n\n\nComputation of R ≤N +1 can be done efficiently using algorithms in graph theory by viewing\nA ¬ϕ as a directed graph Consider G = (V, E) as a directed graph with vertices V = Q and\nedges E ⊆V × V such that (q, q [′] ) ∈E if and only if q [′] ≠ q and there exist p ∈ Π such that\np\nq −→ q [′] From the construction of the graph, it is obvious that the finite path in the graph\nof length n + 1 starting from vertices q 0 ∈ Q 0 and ending at q F ∈ F is an accepting state\n\n\nAlgorithm 1 Computation of sets P(q), q ∈R ≤N +1\n\nRequire: G, Q s, N\n1: Compute set R ≤N+1 by depth first search on G\n2: for all q ∈R ≤N+1 and |q| ≥ 3 do\n3: for i = 1 to |q| − 3 do\n4: P 1 (q) ←{(q i, q i+1, q i+2 )}\n5: if q i+1 ∈ Q s then\n6: P(q) ←{(q i, q i+1, q i+2, N + 2 −|q|)}\n7: else\n8: P(q) ←{(q i, q i+1, q i+2, 1)}\nreturn P(q)\n\n\nrun q of A ¬ϕ without any self-loop thus belongs to R ≤N +1 Then one can easily compute\nR ≤N +1 using variants of depth first search algorithm [21] Decomposition into sequential reachability is performed as follows For any q = (q 0, q 1, , q n ) ∈\nR ≤N +1, we define P(q) as a set of all state runs of length 3 augmented with a horizon,\n\n\nP(q) := {(q i, q i+1, q i+2, T (q, q i+1 )) | 0 ≤ i ≤ n − 2}, (9)\n\n\nwhere the horizon is defined as T (q, q i+1 ) = N + 2 −|q| for q i+1 ∈ Q s and 1 otherwise Remark 3 Note that P(q) = ∅ for |q| = 2 In fact, any accepting state run of length 2\nspecifies a subset of the state space such that the system satisfies ¬ϕ whenever it starts\nfrom that subset This gives trivial zero probability for satisfying the specification, thus\nneglected in the sequel The computation of sets P(q), q ∈R ≤N +1, is illustrated in Algorithm 1 and demonstrated\nbelow for our demo example Example 1 (continued) For safe LTL F formula ϕ given in (3), Figure 1(b) shows a DFA\nA ¬ϕ that accepts all words that satisfy ¬ϕ From Figure 1(b), we get Q 0 = {q 0 } and\nF = {q 3 } We consider traces of maximum length N = 5 The set of accepting state runs of\nlengths at most N + 1 without self-loops is\n\n\nR ≤6 = {(q 0, q 4, q 3 ), (q 0, q 1, q 2, q 3 ), (q 0, q 1, q 4, q 3 ), (q 0, q 3 )} The set of states with self-loops is Q s = {q 1, q 2, q 4 } Then the sets P(q) for q ∈R ≤6 are as\nfollows:\n\n\nP(q 0, q 3 ) = ∅, P(q 0, q 4, q 3 ) = {(q 0, q 4, q 3, 4)},\n\n\nP(q 0, q 1, q 2, q 3 ) = {(q 0, q 1, q 2, 3), (q 1, q 2, q 3, 3)},\nP(q 0, q 1, q 4, q 3 ) = {(q 0, q 1, q 4, 3), (q 1, q 4, q 3, 3)} For every q ∈R ≤6, the corresponding finite words σ(q) are listed as follows:\n\n\nσ(q 0, q 3 ) = {p 1 ∨ p 3 }, σ(q 0, q 4, q 3 ) = {(p 2, p 1 )},\n\n\nσ(q 0, q 1, q 2, q 3 ) = {(p 0, p 1, p 2 )}, σ(q 0, q 1, q 4, q 3 ) = {(p 0, p 2, p 1 )} ⊓⊔\n\n\n5 Computation of Probabilities Using Barrier Certificates\n\n\nHaving the set of state runs of length 3 augmented with horizon, in this section, we provide a\nsystematic approach to compute a lower bound on the probability that the solution process of\nS satisfies ϕ Given DFA A ¬ϕ, our approach relies on performing a reachability computation\nover each element of P(q), q ∈R ≤N +1, where reachability probability is upper bounded\nusing barrier certificates Next theorem provides an upper bound on the probability that the solution process of the\nsystem satisfies the specification ¬ϕ Theorem 2 For a given safe LTL F specification ϕ, let A ¬ϕ be a DFA corresponding to its\nnegation, R ≤N +1 be the set of accepting state runs of length at most N + 1 as defined in\n(8), and P be the set of runs of length 3 augmented with horizon as defined in (9) Then the\nprobability that the system satisfies ¬ϕ within time horizon [0, N ] ⊆ N 0 is upper bounded by\n\n\n\nP{T race N (S) |= ¬ϕ} ≤ �\n\n\n\n� {(γ ν + c ν T ) | ν = (q, q [′], q [′′], T ) ∈P(q)}, (10)\n\n\n\nq∈R ≤N +1\n\n\nwhere γ ν + c ν T is the upper bound on the probability of the trajectories of S starting from\nX 0 := L [−][1] (σ(q, q [′] )) and reaching X 1 := L [−][1] (σ(q [′], q [′′] )) within time horizon [0, T ] ⊆ N 0\ncomputed via Theorem 1 Proof Consider an accepting run q ∈R ≤N +1 and set P(q) as defined in (9) For an element\nν = (q, q [′], q [′′], T ) ∈P(q), the upper bound on the probability of trajectories of S stating\nfrom L [−][1] (σ(q, q [′] )) and reaching L [−][1] (σ(q [′], q [′′] )) within time horizon T is given by γ ν + c ν T This follows from Theorem 1 Now the upper bound on the probability of the trace of the\nsolution process reaching accepting state following trace corresponding to q is given by the\nproduct of the probability bounds corresponding to all elements ν = (q, q [′], q [′′], T ) ∈P(q)\nand is given by\n\n\nP{σ x N (q) |= ¬ϕ} ≤ � {(γ ν + c ν T ) | ν = (q, q [′], q [′′], T ) ∈P(q)} (11)\n\n\nNote that, the way we computed time horizon T d, we always get the upper bound for the\nprobabilities for all possible combinations of self-loops for accepting state runs of length less\nthan or equal to N + 1 The upper bound on the probability that the solution processes of\nsystem S violate ϕ can be computed by summing the probability bounds for all possible\naccepting runs as computed in (11) and is given by\n\n\n\nP{T race N (S) |= ¬ϕ} ≤ �\n\nq∈R ≤N +1\n\n\n\n� {(γ ν + c ν T ) | ν = (q, q [′], q [′′], T ) ∈P(q)} ⊓⊔\n\n\nTheorem 2 enables us to decompose the computation into a collection of sequential reachability, compute bounds on the reachability probabilities using Theorem 1, and then combine\nthe bounds in a sum-product expression Remark 4 In case we are unable to find barrier certificates for some of the elements ν ∈P(q)\nin (10), we replace the related term (γ ν + c ν T ) by the pessimistic bound 1 In order to get a\nnon-trivial bound in (10), at least one barrier certificate must be found for each q ∈R ≤N +1 Corollary 1 Given the result of Theorem 2, the probability that the trajectories of S of\nlength N satisfies safe LTL F specification ϕ is lower-bounded by\n\n\nP{T race N (S) |= ϕ} ≥ 1 − P{T race N (S) |= ¬ϕ} 5",
    "5 1 Computation of barrier certificate\n\n\nProving existence of a barrier certificate, finding one, or showing that a given function\nis in fact a barrier certificate are in general hard problems But if we restrict the class\nof systems and labeling functions, we can construct computationally efficient techniques\nfor searching barrier certificates of specific forms One technique is to use sum-of-squares\n(SOS) optimization [17], which relies on the fact that a polynomial is non-negative if it\ncan be written as sum of squares of different polynomials One technique is to use sum-of-squares\n(SOS) optimization [17], which relies on the fact that a polynomial is non-negative if it\ncan be written as sum of squares of different polynomials Therefore, we raise the following\nassumption Assumption 1 System S has state set X ⊆ R [n] and its vector field f : X × V w → X\nis a polynomial function of state x for any w ∈ V w Partition sets X i = L [−][1] (p i ), i ∈\n{0, 1, 2, , M }, are bounded semi-algebraic sets, i e , they can be represented by polynomial\nequalities and inequalities Under Assumption 1, we can formulate (5)-(7) as an SOS optimization problem to search\nfor a polynomial-type barrier certificate B(·) and the tightest upper bound (γ + cT d ) The\nfollowing lemma provides a set of sufficient conditions for the existence of such a barrier\ncertificate required in Theorem 1, which can be solved as an SOS optimization Lemma 2 Suppose Assumption 1 holds and sets X 0, X 1, X can be defined by vectors of\npolynomial inequalities X 0 = {x ∈ R [n] | g 0 (x) ≥ 0}, X 1 = {x ∈ R [n] | g 1 (x) ≥ 0}, and\nX = {x ∈ R [n] | g(x) ≥ 0}, where the inequalities are defined element-wise Suppose there\nexists a sum-of-squares polynomial B(x), constants γ ∈ [0, 1] and c ≥ 0, and vectors of\nsum-of-squares polynomials λ 0 (x), λ 1 (x), and λ(x) of appropriate size such that following\nexpressions are sum-of-squares polynomials\n\n\n−B(x) − λ [T] 0 [(][x][)][g] [0] [(][x][) +][ γ] (12)\n\nB(x) − λ [T] 1 [(][x][)][g] [1] [(][x][)][ −] [1] (13)\n\n−E[B(f (x, w))|x] + B(x) − λ [T] (x)g(x) + c (14)\n\n\nThen B(x) satisfies conditions (5)-(7) Proof The proof is similar to that of Lemma 7 in [33] and is omitted due to lack of space ⊓⊔\n\n\nRemark 5 Assumption 1 is essential for applying the results of Lemma 2 to any LTL F\nspecification For a given specification, we can relax this assumption and allow some of the\npartition sets X i to be unbounded For this, we require that the labels corresponding to\nunbounded partition sets should only appear either on self-loops or on accepting runs of\nlength less than 3 For instance, Example 1 has an unbounded partition set X 3 and its\ncorresponding label p 3 satisfies this requirement (see Figure 1), thus the results are still\napplicable for verifying the specification",
    "For instance, Example 1 has an unbounded partition set X 3 and its\ncorresponding label p 3 satisfies this requirement (see Figure 1), thus the results are still\napplicable for verifying the specification 5 2 Computational complexity\n\n\nBased on Lemma 2, a polynomial barrier certificate B(·) satisfying (5)-(7) and minimizing\nconstants γ and c can be automatically computed using SOSTOOLS [20] in conjunction\nwith a semidefinite programming solver such as SeDuMi [28] 2 Computational complexity\n\n\nBased on Lemma 2, a polynomial barrier certificate B(·) satisfying (5)-(7) and minimizing\nconstants γ and c can be automatically computed using SOSTOOLS [20] in conjunction\nwith a semidefinite programming solver such as SeDuMi [28] We refer the interested reader\nto [27] and [19] for more discussions We refer the interested reader\nto [27] and [19] for more discussions Note that the value of the upper bound of violating\nthe property depends highly on the selection of degree of polynomials in Lemma 2 From the construction of directed graph G = (V, E), explained in Section 4, the number of\ntriplets and hence the number of barrier certificates needed to be computed are bounded by\n|V| [3] = |Q| [3], where |V| is the number of vertices in G Further, it is known [3] that |Q| is at\nmost |¬ϕ|2 [|¬][ϕ][|], where |¬ϕ| is the length of formula ¬ϕ in terms of number of operations,\nbut in practice, it is much smaller than this bound [11] Computational complexity of finding polynomials B, λ 0, λ 1, λ in Lemma 2 depends on both\nthe degree of polynomials appearing in (12)-(14) and the number of variables It is shown\nthat for fixed degrees the required computations grow polynomially with respect to the\ndimension [33] Hence we expect that this technique is more scalable in comparison with the\ndiscretization-based approaches especially for large-scale systems 6 Case Studies\n\n\nIn this section, we demonstrate the effectiveness of the proposed results on several case\nstudies We first showcase the results on the running example, which has nonlinear dynamics\nwith additive noise We then apply the technique to a ten-dimensional linear system with\nadditive noise to show its scalability The third case study is a three-dimensional nonlinear\nsystem with multiplicative noise",
    "The third case study is a three-dimensional nonlinear\nsystem with multiplicative noise 6 1 Running example\n\n\nTo compute an upper bound on reachability probabilities corresponding to each element\nof P(q) in Theorem 2, we use Lemma 2 to formulate it as a SOS optimization problem to minimize values of γ and c using bisection method The optimization problem is\nsolved using SOSTOOLS and SeDuMi, to obtain upper bounds in Theorem 2 The computed upper bounds on probabilities corresponding to the elements of P(·), (q 0, q 4, q 3, 4),\n(q 0, q 1, q 2, 3), (q 1, q 2, q 3, 3), (q 0, q 1, q 4, 3), and (q 1, q 4, q 3, 3) are respectively 0 00586, 0 00232,\n0 00449, 0 00391, and 0 00488 Using Theorem 2, we get\n\n\nP{T race N (S) |= ¬ϕ} ≤ 0 00586 + 0 00232 × 0 00449 + 0 00391 × 0 00488 = 0 00589 Thus, a lower bound on the probability that trajectories of S satisfy safe LTL F property\n(3) over time horizon N = 5 is given by 0 Thus, a lower bound on the probability that trajectories of S satisfy safe LTL F property\n(3) over time horizon N = 5 is given by 0 99411 The optimization finds polynomials of\ndegree 5 for B, λ, λ 0, and λ 1 Hence 4 barrier certificates are computed each with 245\noptimization coefficients, which takes 29 minutes in total For the sake of comparison, we\nprovide a probabilistic guarantee from Monte-Carlo method using 50000 realizations, which\nresults in the interval P{T race N (S) |= ϕ} ∈ [0 9959, 0 9979] with confidence 1 − 10 [−][4] (b)\n\n\n|Col1|Room 7|T e = 20|Col4|Room 8|Col6|\n|---|---|---|---|---|---|\n|Room1|Room 2|Room 3|Room 4|Room 5|Room 6|\n||Room 9|||Room 10||\n\n\n\n(a)\n\n\n\nFig 2 (a) A schematic of ten-room building, (b) DFA A ¬ϕ that accepts all traces satisfying ¬ϕ\nwhere ϕ is given in (15) 6 2 Thermal model of a ten-room building\n\n\nConsider temperature evolution in a ten-room building shown schematically in Figure 2(a) We use this model to demonstrate the effectiveness of the results on large-dimensional state\nspaces This model is adapted from [10] by discretizing it with sampling time τ s = 5 minutes\nand without including heaters The dynamics of S are given as follows:\n\n\nx 1 (k + 1) = (1 − τ s (α + α e1 ))x 1 (k) + τ s αx 2 (k) + τ s α e1 T e + 0 5w 1 (k),\nx 2 (k + 1) = (1 − τ s (4α + α e2 ))x 2 (k) + τ s α(x 1 (k) + x 3 (k) + x 7 (k) + x 9 (k))\n\n\n+ τ s α e2 T e + 0 5w 2 (k),\nx 3 (k + 1) = (1 − τ s (2α + α e1 ))x 3 (k) + τ s α(x 2 (k) + x 4 (k))+τ s α e1 T e +0 5w 3 (k),\n\n\nx 4 (k + 1) = (1 − τ s (2α + α e1 ))x 4 (k) + τ s α(x 3 (k) + x 5 (k))+τ s α e1 T e +0 5w 4 (k),\nx 5 (k + 1) = (1 − τ s (4α + α e2 ))x 5 (k) + τ s α(x 4 (k) + x 6 (k) + x 8 (k) + x 10 (k))\n\n\n+ τ s α e2 T e + 0 5w 5 (k),\nx 6 (k + 1) = (1 − τ s (α + α e1 ))x 6 (k) + τ s αx 5 (k) + τ s α e1 T e + 0 5w 6 (k),\n\n\nx 7 (k + 1) = (1 − τ s (α + α e1 ))x 7 (k) + τ s αx 2 (k) + τ s α e1 T e + 0 5w 7 (k),\n\n\nx 8 (k + 1) = (1 − τ s (α + α e1 ))x 8 (k) + τ s αx 5 (k) + τ s α e1 T e + 0 5w 8 (k),\nx 9 (k + 1) = (1 − τ s (α + α e1 ))x 9 (k) + τ s αx 2 (k) + τ s α e1 T e + 0 5w 9 (k),\n\n\nx 10 (k + 1) = (1 − τ s (α + α e1 ))x 10 (k) + τ s αx 5 (k) + τ s α e1 T e + 0 5w 10 (k),\n\n\nwhere x i, i ∈{1, 2, , 10}, denotes the temperature in each room, T e = 20 [◦] C is the ambient\ntemperature, and α = 5 × 10 [−][2], α e1 = 5 × 10 [−][3], and α e2 = 8 × 10 [−][3] are heat exchange\ncoefficients Noise terms w i (k), i ∈{1, 2, , 10}, are independent standard normal random variables The state space of the system is X = R [10] We consider regions of interest X 0 = [18, 19 75] [10],\nX 1 = [20 25, 22] [10], X 2 = X \\ (X 0 ∪ X 1 ) The set of atomic propositions is given by Π =\n{p 0, p 1, p 2 } with labeling function L(x i ) = p i for all x i ∈ X i, i ∈{0, 1, 2} The objective is\nto compute a lower bound on the probability that the solution process of length N = 50\nsatisfies the safe LTL F formula\n\n\nϕ = (p 0 ∧              - ¬p 1 ) ∨ (p 1 ∧              - ¬p 0 ) (15)\n\n\nThe DFA A ¬ϕ corresponding to ¬ϕ is shown in Figure 2(b) We use Algorithm 1 to get\nR ≤11 = {(q 0, q 3 ), (q 0, q 1, q 3 ), (q 0, q 2, q 3 )}, P(q 0, q 1, q 3 ) = {q 0, q 1, q 3, 9}, and P(q 0, q 2, q 3 ) =\n\n\nFig 3",
    "3 DFA A ¬ϕ that accepts all traces satisfying ¬ϕ where ϕ = p 0 ∧     - ¬p 2 {q 0, q 2, q 3, 9} As described in Section 5, we compute two barrier certificates and SOS polynomials satisfying inequalities of Lemma 2 The lower bound P{T race N (S) |= ϕ} ≥ 0 9820\nis obtained using SOSTOOLS and SeDuMi for initial states starting from X 0 ∪ X 1 The\noptimization finds B, λ, λ 0, and λ 1 as quadratic polynomials Hence two barrier certificates\nare computed each with 255 optimization coefficients, which takes 18 minutes in total For\nthe sake of comparison, we provide a probabilistic guarantee from Monte-Carlo method using 50000 realizations, which results in the interval P{T race N (S) |= ϕ} ∈ [0 9984, 0 9997]\nwith confidence 1 − 10 [−][5] 6 3 Lorenz model of a thermal convection loop\n\n\nOur third case study is the Lorenz model of a thermal convection loop as used in [18] with\nmultiplicative noise The nonlinear dynamics of S is given as\n\n\nx 1 (k + 1) = (1 − aT )x 1 (k) + aT x 2 (k) + 0 025x 1 (k)w 1 (k),\n\n\nx 2 (k + 1) = (1 − T )x 2 (k) − T x 2 (k)x 3 (k) + 0 025x 2 (k)w 2 (k),\nx 3 (k + 1) = (1 + bT )x 3 (k) + T x 1 (k)x 2 (k) + 0 025x 3 (k)w 3 (k), (16)\n\n\nwhere a = 10, b = 8/3, and T = 0 01 Noise terms w 1 (k), w 2 (k), and w 3 (k) are independent\nstandard normal random variables We refer the interested readers to [31] for a detailed\ntreatment of the model The state space of the system is X = R [3] We define regions of\ninterest as X 0 = [−10, 10] [2] × [2, 10], X 1 = [−10, 10] [2] × [−2, 2], X 2 = [−10, 10] [2] × [−10, −2],\nand X 3 = X \\ (X 0 ∪ X 1 ∪ X 2 ) The set of atomic propositions is given by Π = {p 0, p 1, p 2, p 3 } with labeling function L(x i ) =\np i for all x i ∈ X i, i ∈{0, 1, 2, 3} We consider safe LTL F property ϕ = p 0 ∧ - ¬p 2 and time\nhorizon N = 10 The DFA A ¬ϕ corresponding to the negation of ϕ is shown in Figure 3 One\ncan readily see that R ≤11 = {(q 0, q 1, q 2 )} with P(q 0, q 1, q 2 ) = (q 0, q 1, q 2, 9) Thus, we need\nto compute only one barrier certificate We use inequalities of Lemma 2 and find a barrier\ncertificate that gives the lower bound P{T race N (S) |= ϕ} ≥ 0 9859 The optimization finds\nB, λ, λ 0, and λ 1 as polynomials of degree 4 Hence only one barrier certificate is computed\nwith 53 optimization coefficients, which takes 3 minutes For the sake of comparison, MonteCarlo method results in the interval [0 9912, 0 9972] for the true probability with confidence\n1 − 10 [−][4] using 10000 realizations Remark that current implementations of discretization-based approaches (e",
    "Remark that current implementations of discretization-based approaches (e g , [26]) are\nnot directly applicable to the model in Subsection 6 1 and to the model (16) due to the\nmultiplicative noise in the latter and unbounded state space of the former Application of\nthese techniques to the model in Subsection 6 2 will also be computationally much more\nexpensive than our approach due to its exponential complexity as a function of state space\ndimension 7 Conclusions\n\n\nIn this paper, we proposed a discretization-free approach for formal verification of discretetime stochastic systems The approach computes lower bounds on the probability of satisfying a specification encoded as safe LTL over finite traces It is based on computation\nof barrier certificates and uses sum-of-squares optimization to find such bounds From the\nimplementation perspective, we plan to generalize our code and make it publicly available\nso that it can be applied to systems and specifications defined by users References\n\n\n1 Abate, A , Katoen, J P , Mereacre, A : Quantitative automata model checking of autonomous\nstochastic hybrid systems In: Proceedings of the 14th international conference on Hybrid systems: computation and control pp 83–92 ACM (2011)\n2 Ayala, A I M , Andersson, S B , Belta, C : Probabilistic control from time-bounded temporal logic specifications in dynamic environments In: 2012 IEEE International Conference on\nRobotics and Automation pp 4705–4710 (2012)\n3 Baier, C , Katoen, J P , Larsen, K G : Principles of model checking MIT press (2008)\n4 De Giacomo, G , Vardi, M Y : Linear temporal logic and linear dynamic logic on finite traces In: International Joint Conference on Artificial Intelligence vol 13, pp 854–860 (2013)\n5 De Giacomo, G , Vardi, M Y : Synthesis for LTL and LDL on finite traces In: International\nJoint Conference on Artificial Intelligence vol 15, pp 1558–1564 (2015)\n6 Dimitrova, R , Majumdar, R",
    ", Majumdar, R : Deductive control synthesis for alternating-time logics In: 2014\nInternational Conference on Embedded Software (EMSOFT) In: 2014\nInternational Conference on Embedded Software (EMSOFT) pp 1–10 (2014)\n7 Duret-Lutz, A , Lewkowicz, A , Fauchille, A , Michaud, T , Renault, E , Xu, L : Spot 2 0:\nA framework for LTL and \\omega -automata manipulation In: International Symposium on\nAutomated Technology for Verification and Analysis pp 122–129 Springer (2016)\n8 Henriksen, J G , Jensen, J , Jørgensen, M , Klarlund, N , Paige, R , Rauhe, T , Sandholm,\nA : Mona: Monadic second-order logic in practice In: International Workshop on Tools and\nAlgorithms for the Construction and Analysis of Systems pp 89–110 Springer (1995)\n9 Springer (1995)\n9 Huang, C , Chen, X , Lin, W , Yang, Z , Li, X : Probabilistic safety verification of stochastic\nhybrid systems using barrier certificates ACM Transactions on Embedded Computing Systems\n16(5s), 186 (2017)\n10 ACM Transactions on Embedded Computing Systems\n16(5s), 186 (2017)\n10 Jagtap, P , Zamani, M , Zamani, M : QUEST: A tool for state-space quantization-free synthesis of symbolic\ncontrollers In: International Conference on Quantitative Evaluation of Systems pp 309–313 [Springer (2017), http://www hcs ei tum de/software/quest/](http://www hcs ei tum de/software/quest/)\n11 Klein, J , Baier, C : Experiments with deterministic ω-automata for formulas of linear temporal\nlogic Theoretical Computer Science 363(2), 182–195 (2006)\n12 Theoretical Computer Science 363(2), 182–195 (2006)\n12 Kupferman, O , Vardi, M : Model checking of safety properties In: International Conference\non Computer Aided Verification pp 172–183 Springer (1999)\n13 Kushner, H J : On the stability of stochastic dynamical systems Proceedings of the National\nAcademy of Sciences 53(1), 8–12 (1965)\n14 Lahijanian, M , Andersson, S B , Belta, C",
    ", Belta, C : Formal verification and synthesis for discrete-time\nstochastic systems IEEE Transactions on Automatic Control 60(8), 2031–2045 (2015)\n15 IEEE Transactions on Automatic Control 60(8), 2031–2045 (2015)\n15 Lavaei, A , Soudjani, S , Zamani, M : From dissipativity theory to compositional construction\nof finite Markov decision processes In: Hybrid Systems: Computation and Control (HSCC) pp 21–30 ACM, New York, NY, USA (2018)\n16 Maity, D , Baras, J S S : Motion planning in dynamic environments with bounded time temporal\nlogic specifications In: 2015 23rd Mediterranean Conference on Control and Automation pp 940–946 (2015)\n\n\n17 Parrilo, P A : Semidefinite programming relaxations for semialgebraic problems Mathematical\nprogramming 96(2), 293–320 (2003)\n18 Postoyan, R , Nesic, D : Time-triggered control of nonlinear discrete-time systems In: 2016\nIEEE 55th Conference on Decision and Control pp 6814–6819 (2016)\n19 Prajna, S , Jadbabaie, A , Pappas, G J J : A framework for worst-case and stochastic safety\nverification using barrier certificates IEEE Transactions on Automatic Control 52(8), 1415–\n1428 (2007)\n20 IEEE Transactions on Automatic Control 52(8), 1415–\n1428 (2007)\n20 Prajna, S , Papachristodoulou, A , Parrilo, P A : Introducing SOSTOOLS: a general purpose\nsum of squares programming solver In: Proceedings of the 41st IEEE Conference on Decision\n[and Control vol 1, pp 741–746 (2002), http://www cds caltech edu/sostools/](http://www cds caltech edu/sostools/)\n21 Russell, S J , Norvig, P : Artificial Intelligence: A Modern Approach Pearson Education, 2 edn (2003)\n22 Saha, I , Ramaithitima, R , Kumar, V , Pappas, G J , Seshia, S A : Automated composition\nof motion primitives for multi-robot systems from safe LTL specifications In: 2014 IEEE/RSJ\nInternational Conference on Intelligent Robots and Systems pp 1525–1532 (2014)\n23 Soudjani, S , Abate, A : Precise approximations of the probability distribution of a Markov\nprocess in time: an application to probabilistic invariance In: TACAS, LNCS, vol 8413, pp 547–561 Springer (2014)\n24 Soudjani, S , Abate, A , Majumdar, R",
    ", Majumdar, R : Dynamic Bayesian networks as formal abstractions of\nstructured stochastic processes In: 26th International Conference on Concurrency Theory pp 1–14 Dagstuhl Publishing, Madrid, Spain (2015)\n25 Soudjani, S , Abate, A : Adaptive and sequential gridding procedures for the abstraction and\nverification of stochastic processes SIAM Journal on Applied Dynamical Systems 12(2), 921–\n956 (2013)\n26 SIAM Journal on Applied Dynamical Systems 12(2), 921–\n956 (2013)\n26 Soudjani, S , Gevaerts, C , Abate, A : FAUST [2] : Formal Abstractions of Uncountable-STate\nSTochastic processes In: Baier, C , Tinelli, C (eds ) Tools and Algorithms for the Construction\nand Analysis of Systems pp 272–286 Springer Berlin Heidelberg, Berlin, Heidelberg (2015)\n27 Steinhardt, J , Tedrake, R , Tedrake, R : Finite-time regional verification of stochastic non-linear systems The International Journal of Robotics Research 31(7), 901–923 (2012)\n28 Sturm, J F : Using SeDuMi 1 02, a MATLAB toolbox for optimization over symmetric cones [Optimization methods and software 11(1-4), 625–653 (1999), http://sedumi ie lehigh edu/](http://sedumi ie lehigh edu/)\n29 Tabuada, P Tabuada, P : Verification and control of hybrid systems: a symbolic approach : Verification and control of hybrid systems: a symbolic approach Springer Science\n& Business Media (2009)\n30 Tkachev, I , Abate, A : Formula-free finite abstractions for linear temporal verification of\nstochastic hybrid systems In: Proceedings of the 16th international conference on Hybrid systems: computation and control pp 283–292 ACM (2013)\n31 Vincent, T L , Yu, J : Control of a chaotic system Dynamics and Control 1(1), 35–52 (1991)\n32 Wisniewski, R , Bujorianu, M L L : Stochastic safety analysis of stochastic hybrid systems In:\n2017 IEEE 56th Annual Conference on Decision and Control pp 2390–2395 (2017)\n33 Wongpiromsarn, T , Topcu, U , Lamperski, A : Automata theory meets barrier certificates:\nTemporal logic verification of nonlinear systems IEEE Transactions on Automatic Control\n61(11), 3344–3355 (2016)"
  ]
}