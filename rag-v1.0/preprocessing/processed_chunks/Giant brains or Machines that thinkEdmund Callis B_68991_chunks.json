{
  "filename": "Giant brains or Machines that thinkEdmund Callis B_68991.epub",
  "text_length": 502203,
  "chunk_count": 119,
  "chunks": [
    "The Project Gutenberg eBook of Giant\nbrains; or, Machines that think\nThis ebook is for the use of anyone anywhere in the United States and\nmost other parts of the world at no cost and with almost no\nrestrictions whatsoever You may copy it, give it away or re-use it\nunder the terms of the Project Gutenberg License included with this\nebook or online at www gutenberg org If you are not located in the\nUnited States, you will have to check the laws of the country where\nyou are located before using this eBook Title: Giant brains; or, Machines that think\nAuthor: Edmund Callis Berkeley\nRelease date: September 14, 2022 [eBook #68991]\nMost recently updated: October 19, 2024\nLanguage: English\nOriginal publication: United States: John Wiley & Sons, 1949\nCredits: Tim Lindell and the Online Distributed Proofreading\nTeam at https://www pgdp net (This book was produced from images\nmade available by the HathiTrust Digital Library )\n*** START OF THE PROJECT GUTENBERG EBOOK GIANT BRAINS;\nOR, MACHINES THAT THINK ***\n\n\nGIANT BRAINS\nOR\nMACHINES THAT THINK\nEDMUND CALLIS BERKELEY\nConsultant in Modern Technology\nPresident, E C Berkeley and Associates\nJOHN WILEY & SONS, INC , NEW YORK\nCHAPMAN & HALL, LIMITED, LONDON\nCopyright, 1949\nby\nEDMUND CALLIS BERKELEY\nAll Rights Reserved\nThis book or any part thereof must not\nbe reproduced in any form without\nthe written permission of the publisher Second Printing, February, 1950\nPrinted in the United States of America\nTo my friends,\nwhose help and instruction\n\n\nmade this book possible\n\n\n\n\nPREFACE\nThe Subject, Purpose, and Method\nof this Book\nThe subject of this book is a type of machine that comes closer to\nbeing a brain that thinks than any machine ever did before 1940 These new machines are called sometimes mechanical brains and\nsometimes sequence-controlled calculators and sometimes by other\nnames Essentially, though, they are machines that can handle\ninformation with great skill and great speed And that power is very\nsimilar to the power of a brain These new machines are important They do the work of hundreds\nof human beings for the wages of a dozen They are powerful\ninstruments for obtaining new knowledge They apply in science,\nbusiness, government, and other activities They apply in reasoning\nand computing, and, the harder the problem, the more useful they\nare Along with the release of atomic energy, they are one of the great\nachievements of the present century No one can afford to be unaware\nof their significance In this book I have sought to tell a part of the story of these new\nmachines that think Perhaps you, as you start this book, may not\nagree with me that a machine can think: the first chapter of this book\nis devoted to the discussion of this question My purpose has been to tell enough about these machines so that\nwe can see in general how they work I have sought to explain some\ngiant brains that have been built and to show how they do thinking\noperations I have sought also to talk about what these machines can\ndo in the future and to judge their significance for us It seems to me\nthat they will take a load off men’s as great as the load that printing\ntook off men’s writing: a tremendous burden lifted We need to examine several of the new mechanical brains:\nMassachusetts \nInstitute \nof \nTechnology’s \ndifferential \nanalyzer,\nHarvard’s IBM automatic sequence-controlled calculator, Moore\nSchool’s ENIAC (Electronic Numerical Integrator and Calculator), and\nBell Laboratories’ general-purpose relay calculator These are\n\n\ndescribed in the sequence in which they were finished between the\nyears 1942 and 1946 We also have to go on some excursions—for instance, the nature of\nlanguage and of symbols, the meaning of thinking, the human brain\nand nervous system, the future design of machinery that can think,\nand a little algebra and logic I have also sought to discuss the\nrelations between machines that think and human society—what we\ncan foresee as likely to happen or be needed as a result of the\nremarkable invention of machines that can think READING THIS BOOK\nThis book is intended for everyone I have sought to put it together\nin such a way that any reader can select from it what he wants Perhaps at first reading you want only the main thread of the\nstory Then read only what seems interesting, and skip whatever\nseems uninteresting The subheadings should help to tell you what to\nread and what to skip Nearly all the chapters can be read with little\nreference to what goes before, although some reference to the\nsupplements in the back may at times be useful Perhaps your memory of physics is dim, like mine The little\nknowledge of physics needed is explained here and there throughout\nthe book, and the index should tell where to find any explanation you\nmay want Perhaps it is a long time since you did any algebra Then\nSupplement 2 on mathematics may hold something of use to you Two\nsections (one in Chapter 5 and one in Chapter 6) labeled as containing\nsome rather mathematical details may be skipped with no great loss Perhaps you are unacquainted with logic that uses symbols—the\nbranch of logic called mathematical logic In fact, very few people are\nfamiliar with it No discussion in the book hinges on understanding\nthis subject, except for Chapter 9 where a machine that calculates\nlogical truth is described In all other chapters you may freely skip all\nreferences to mathematical logic But, if you are curious about the\nsubject and how it can be usefully applied in the field of mechanical\nbrains, then begin with the introduction to the subject in Chapter 9,\nand note the suggestions in the section entitled “Algebra of Logic” in\nSupplement 2 In any case, glance at the table of contents, the chapter headings\nand subheadings, and the supplements at the back These should give\nan idea of how the book is put together and how you may select what\nmay be interesting to you Please do not read this book straight from beginning to end unless\nthat way proves to be congenial to you If you are not interested in\ntechnical details, skip most of the middle chapters, which describe\nexisting mechanical brains If, on the other hand, you want more\ndetails than this book contains, look up references in Supplement 3 Here are listed, with a few comments, over 250 books, articles, and\npamphlets related to the subject of machinery for computing and\nreasoning These cover many parts of the field; some parts, however,\nare not yet covered by any published information There are no photographs in this book, although there are over 80\ndrawings Photographs of these complicated machines can really show\nvery little: panels, lights, switches, wires, and other kinds of\nhardware What is important is the way the machine works inside This cannot be shown by a photograph but may be shown by\nschematic drawings In the same way, a photograph of a human being\nshows almost nothing about how he thinks UNDERSTANDING THIS BOOK\nI have tried to write this book so that it could be understood I\nhave attempted to explain machinery for computing and reasoning\nwithout using technical words any more than necessary To do this\nseemed to be easy in some places, much harder in others As a test of\nthis attempt, a count has been made of all the different words in the\nbook that have two syllables or more, that are used for explaining,\nand that are not themselves defined There are fewer than 1800 of\nthese words In Supplement 1, entitled “Words and Ideas,” I have\ndigressed to discuss further the problem of explanation and\nunderstanding Every now and then in the book, along comes a word or a phrase\nthat has a special meaning, for example, the name of something new When it first appears, it is put in italics and is explained or defined In\naddition, all the words and phrases having special meaning appear\nagain in the index, and next to each is the page number of its\nexplanation or definition In many places, I have talked of mechanical brains as if they were\nliving For example, instead of “capacity to store information” I have\nspoken of “memory ” Of course, the machines are not living; but they\ndo have individuality, responsiveness, and other traits of living\nbeings, just as a political party pictured as a living elephant does Besides, to treat things as persons is a help in making any subject\nvivid and understandable, as every song writer and cartoonist\nillustrates We speak of “Old Man River” and “Father Time”; we may\nspeak of a ship or a locomotive as “she”; and the crew on the first\nHarvard sequence-controlled calculator has often called her “Bessy,\nthe Bessel engine ”\nLet us pause a little longer on the subject of understanding What\nis the understanding of something new It is a state of knowing, a\nprocess of knowing more and more The more we know about\nsomething new, the better we understand it It is possible for almost\nanybody to understand almost anything, I believe What is mainly\nneeded in order to grasp an idea is a good collection of true\nstatements about it and some practice in using those statements in\nsituations For example, no one has ever seen or touched the separate\nscraps of electricity called electrons But electrons have been\ndescribed and measured; hundreds of thousands of people work with\nelectrons; they know and use true statements about electrons In\neffect, these people understand electrons Probably the hardest task of an author is to make his statements\nunderstandable yet accurate It is too much to hope for complete\nsuccess I shall be very grateful to any reader who points out to me\nthe statements that he has not understood or that are in error As to the views I have expressed, I do not expect every reader to\nagree with me In fact, I shall be glad if many a reader disagrees with\nme For then someone else may say to both of us, “You’re both right\nand both wrong—the truth lies atwixt and atween you ” Thoughtful\nand tolerant disagreement is the finest climate for scientific progress BASIC FACTS\nMany of the mechanical brains described in this book will do good\nwork for years; but their design is already out of date Many\norganizations are hard at work finding new tricks in electronics,\nmaterials, and engineering and making new mechanical brains that\n\n\nare better and faster In spite of future developments, though, the basic facts about\nmechanical brains will endure These basic facts are drawn from the\nprinciples of thinking, of mathematics, of science, of engineering, etc These facts govern all handling of information They do not depend\nvery much on human or mechanical energy They do not depend very\nmuch on signs They do not depend very much on the century, or the\nlanguage, or the country For example, “II et III V sunt,” the Romans\nmay have said; “deux et trois font cinq,” say the French; “2 + 3 = 5,”\nsay the mathematicians; and we say, “two and three make five ” The\nmain effort in this book has been to make clear the basic facts about\nmechanical brains, for they are now a masterly instrument for\nobtaining new knowledge Edmund Callis Berkeley\nNew York 11, N Y",
    "Y June 30, 1949\n\n\n\n\nACKNOWLEDGMENTS\nThis book has been over seven years in the making and has\nevolved through many different plans for its contents It springs\nessentially from the desire to see human beings use their knowledge\nbetter: we know enough, but how are we to use what we know Machines that handle information, that make knowledge accessible,\nare a long step in the direction of using what we know For help in causing this desire to come to fruition, I should like to\nexpress my indebtedness especially to Professor (then Commander,\nU S N R ) Howard H Aiken of Harvard University, whose stimulus,\nwhile I was stationed for ten months in 1945-46 in his laboratory, was\nvery great I should also like to express my appreciation to Mr Harry J Volk,\nwhose vision and enthusiasm greatly encouraged me in the writing of\nthis book For careful reviews and helpful comments on the chapters dealing\nwith existing mechanical brains, I am especially grateful to Dr Franz\nL Alt, Mr E G Andrews, Professor Samuel H Caldwell, Dr Grace M Hopper, Mr Theodore A Kalin, and Dr John W Mauchly, who are\nexperts in their fields Dr Ruth P Berkeley, Dr Rudolf Flesch, Mr J Ross Macdonald, Dr Z I Mosesson, Mr Irving Rosenthal, Mr Max S Weinstein, and many others have been true friends in reading and\ncommenting upon many parts of the manuscript Mr Frank W Keller\ndevoted much time and skill to converting my rough sketches into\nillustrations Mr Murray B Ritterman has been of invaluable help in\npreparing and checking much of the bibliography Miss Marjorie L Black has helped very greatly in turning scraps of paper bearing\nsentences into an excellent manuscript for the printer For permission to use the quotations on various pages in Chapters\n11 and 12, I am indebted to the kindness of:\nE P Dutton & Co , for quotations from\nFrankenstein, by Mary W Shelley, Everyman’s\nLibrary, No 616 Samuel French, for quotations from R U R , by\nKarel Čapek [1]\nModern Industry, for a quotation from the issue of\nFebruary 15, 1947 Responsibility for the statements and opinions expressed in this\nbook is solely my own These statements and opinions do not\nnecessarily represent the views of any organization with which I may\nbe or have been associated To the best of my knowledge and belief\nno information contained in this book is classified by the Department\nof Defense of the United States Edmund Callis Berkeley\n\n\n\n\nCONTENTS\n1 CAN MACHINES THINK What Is a Mechanical Brain",
    "What Is a Mechanical Brain 1\n2 LANGUAGES:\n   Systems for Handling Information\n10\n3 A MACHINE THAT WILL THINK:\n   The Design of a Very Simple Mechanical Brain\n22\n4 COUNTING HOLES:\n   Punch-Card Calculating Machines\n42\n5 MEASURING:\n   Massachusetts Institute of Technology’s  \n   Differential Analyzer No MEASURING:\n   Massachusetts Institute of Technology’s  \n   Differential Analyzer No 2\n65\n6 ACCURACY TO 23 DIGITS:\n   Harvard’s IBM Automatic\n \n   Sequence-Controlled Calculator\n89\n7 SPEED—5000 ADDITIONS A SECOND:\n   Moore School’s ENIAC\n \n   (Electronic Numerical Integrator and Calculato\n113\n8 RELIABILITY—NO WRONG RESULTS:\n   Bell Laboratories’\n \n   General-Purpose Relay Calculator\n128\n9 REASONING:\n   The Kalin-Burkhart Logical-Truth Calculator\n144\n10 AN EXCURSION:\n\n\n   The Future Design of Machines That Think\n167\n11 THE FUTURE:\n   Machines That Think, and\n \n   What They Might Do for Men\n180\n12 SOCIAL CONTROL:\n   Machines That Think, and\n \n   How Society May Control Them\n196\n \nSUPPLEMENTS\n1 Words and Ideas\n209\n2 Mathematics\n214\n3 References\n228\n \nINDEX\n257\n\n\n\n\nChapter 1\nCAN MACHINES THINK WHAT IS A MECHANICAL BRAIN Recently there has been a good deal of news about strange giant\nmachines that can handle information with vast speed and skill They\ncalculate and they reason Some of them are cleverer than others—\nable to do more kinds of problems Some are extremely fast: one of\nthem does 5000 additions a second for hours or days, as may be\nneeded Where they apply, they find answers to problems much faster\nand more accurately than human beings can; and so they can solve\nproblems that a man’s life is far too short to permit him to do That is\nwhy they were built These machines are similar to what a brain would be if it were\nmade of hardware and wire instead of flesh and nerves It is therefore\nnatural to call these machines mechanical brains Also, since their\npowers are like those of a giant, we may call them giant brains Several giant mechanical brains are now at work finding out\nanswers never before known Two are in Cambridge, Mass ; one is at\nMassachusetts Institute of Technology, and one at Harvard University Two are in Aberdeen, Md , at the Army’s Ballistic Research\nLaboratories These four machines were finished in the period 1942 to\n1946 and are described in later chapters of this book More giant\nbrains are being constructed Can we say that these machines really think What do we mean by\nthinking, and how does the human brain think HUMAN THINKING\nWe do not know very much about the physical process of thinking\nin the human brain If you ask a scientist how flesh and blood in a\nhuman brain can think, he will talk to you a little about nerves and\nabout electrical and chemical changes, but he will not be able to tell\nyou very much about how we add 2 and 3 and make 5 What men\n\n\nknow about the way in which a human brain thinks can be put down\nin a few pages, and what men do not know would fill many libraries Injuries to brains have shown some things of importance; for\nexample, they have shown that certain parts of the brain have certain\nduties There is a part of the brain, for instance, where sights are\nrecorded and compared If an accident damages the part of the brain\nwhere certain information is stored, the human being has to relearn—\nhaltingly and badly—the information destroyed We know also that thinking in the human brain is done essentially\nby a process of storing information and then referring to it, by a\nprocess of learning and remembering We know that there are no little\nwheels in the brain so that a wheel standing at 2 can be turned 3\nmore steps and the result of 5 read Instead, you and I store the\ninformation that 2 and 3 are 5, and store it in such a way that we can\ngive the answer when questioned But we do not know the register in\nour brain where this particular piece of information is stored Nor do\nwe know how, when we are questioned, we are able automatically to\npick up the nerve channels that lead into this register, get the answer,\nand report it Since there are many nerves in the brain, about 10 billion of them,\nin fact, we are certain that the network of connecting nerves is a main\npart of the puzzle We are therefore much interested in nerves and\ntheir properties NERVES AND THEIR PROPERTIES\nA single nerve, or nerve cell, consists of a cell nucleus and a fiber This fiber may have a length of anything from a small fraction of an\ninch up to several feet In the laboratory, successive impulses can be\nsent along a nerve fiber as often as 1000 a second Impulses can travel\nalong a nerve fiber in either direction at a rate from 3 feet to 300 feet\na second Because the speed of the impulse is far less than 186,000\nmiles a second—the speed of an electric current—the impulse in the\nnerve is thought by some investigators to be more chemical than\nelectrical We know that a nerve cell has what is called an all-or-none\nresponse, like the trigger of a gun If you stimulate the nerve up to a\ncertain point, nothing will happen; if you reach that point, or cross it,\n\n\n—bang —the nerve responds and sends out an impulse The strength\nof the impulse, like the shot of the gun, has no relation whatever to\nthe amount of the stimulation",
    "The strength\nof the impulse, like the shot of the gun, has no relation whatever to\nthe amount of the stimulation Fig 1 Scheme of a nerve cell The structure between the end of one nerve and the beginning of\nthe next is called a synapse (see Fig 1) 1) No one really knows very\nmuch about synapses, for they are extremely small and it is not easy\nto tell where a synapse stops and other stuff begins Impulses travel\nthrough synapses in from ½ to 3 thousandths of a second An impulse\ntravels through a synapse only in one direction, from the head (or\naxon) of one nerve fiber to the foot (or dendrite) of another It seems\nclear that the activity in a synapse is chemical When the head of a\nnerve fiber brings in an impulse to a synapse, apparently a chemical\ncalled acetylcholine is released and may affect the foot of another fiber,\nthus transmitting the impulse; but the process and the conditions for it\nare still not well understood It is thought that nearly all information is handled in the brain by\ngroups of nerves in parallel paths For example, the eye is estimated to\nhave about 100 million nerves sensitive to light, and the information\nthat they gather is reported by about 1 million nerves to the part of\nthe brain that stores sights Not much more is yet known, however, about the operation of\nhandling information in a human brain We do not yet know how the\nnerves are connected so that we can do what we do Probably the\ngreatest obstacle to knowledge is that so far we cannot observe the\ndetailed structure of a living human brain while it performs, without\nhurting or killing it BEHAVIOR THAT IS THINKING\nTherefore, we cannot yet tell what thinking is by observing\nprecisely how a human brain does it Instead, we have to define\nthinking by describing the kind of behavior that we call thinking Let\nus consider some examples When you and I add 12 and 8 and make 20, we are thinking We\nuse our minds and our understanding to count 8 places forward from\n\n\n12, for example, and finish with 20 If we could find a dog or a horse\nthat could add numbers and tell answers, we would certainly say that\nthe animal could think With no trouble a machine can do this An ordinary 10-column\nadding machine can be given two numbers like 1,378,917,766 and\n2,355,799,867 and the instruction to add them The machine will then\ngive the answer, 3,734,717,633, much faster than a man In fact, the\nmechanical brain at Harvard can add a number of 23 digits to another\nnumber of 23 digits and get the right answer in ³/₁₀ of a second Or, suppose that you are walking along a road and come to a fork If you stop, read the signpost, and then choose left or right, you are\nthinking You know beforehand where you want to go, you compare\nyour destination with what the signpost says, and you decide on your\nroute This is an operation of logical choice A machine can do this The mechanical brain now at Aberdeen\nwhich was built at Bell Laboratories can examine any number that\ncomes up in the process of a calculation and tell whether it is bigger\nthan 3 (or any stated number) or smaller If the number is bigger than\n3, the machine will choose one process; if the number is smaller than\n3, the machine will choose another process Now suppose that we consider the basic operation of all thinking:\nin the human brain it is called learning and remembering, and in a\nmachine it is called storing information and then referring to it For\nexample, suppose you want to find 305 Main Street in Kalamazoo You look up a map of Kalamazoo; the map is information kindly\nstored by other people for your use When you study the map, notice\nthe streets and the numbering, and then find where the house should\nbe, you are thinking A machine can do this In the Bell Laboratories’ mechanical brain,\nfor example, the map could be stored as a long list of the blocks of the\ncity and the streets and numbers that apply to each block The\nmachine will then hunt for the city block that contains 305 Main\nStreet and report it when found A machine can handle information; it can calculate, conclude, and\nchoose; it can perform reasonable operations with information A\nmachine, therefore, can think THE DEFINITION OF A MECHANICAL BRAIN\nNow when we speak of a machine that thinks, or a mechanical\nbrain, what do we mean Essentially, a mechanical brain is a machine\nthat handles information, transfers information automatically from\none part of the machine to another, and has a flexible control over the\nsequence of its operations No human being is needed around such a\nmachine to pick up a physical piece of information produced in one\npart of the machine, personally move it to another part of the\nmachine, and there put it in again Nor is any human being needed to\ngive the machine instructions from minute to minute Instead, we can\nwrite out the whole program to solve a problem, translate the\nprogram into machine language, and put the program into the\nmachine Then we press the “start” button; the machine starts\nwhirring; and it prints out the answers as it obtains them Machines\nthat handle information have existed for more than 2000 years These\ntwo properties are new, however, and make a deep break with the\npast How should we imagine a mechanical brain One way to think of\na mechanical brain is shown in Fig 2 We see here a railroad line with\nfour stations, marked input, storage, computer, and output These\nstations are joined by little gates or switches to the main railroad line We can imagine that numbers and other information move along this\nrailroad line, loaded in freight cars Input and output are stations\nwhere numbers or other information go in and come out, respectively Storage is a station where there are many platforms and where\ninformation can be stored The computer is a special station somewhat\nlike a factory; when two numbers are loaded on platforms 1 and 2 of\nthis station and an order is loaded on platform 3, then another\nnumber is produced on platform 4 Fig 2 Scheme of a mechanical brain We see also a tower, marked control This tower runs a telegraph\nline to each of its little watchmen standing by the gates The tower\ntells them when to open and when to shut which gates Now we can see that, just as soon as the right gates are shut,\nfreight cars of information can move between stations Actually the\n\n\nfreight cars move at the speed of electric current, thousands of miles a\nsecond So, by closing the right gates each fraction of a second, we\ncan flash numbers and information through the system and perform\noperations of reasoning Thus we obtain a mechanical brain In general, a mechanical brain is made up of:\n1 A quantity of registers where information\n(numbers and instructions) can be stored 2 Channels along which information can be sent 3 Mechanisms that can carry out arithmetical and\nlogical operations 4 A control, which guides the machine to perform\na sequence of operations 5 Input and output devices, whereby information\ncan go into the machine and come out of it 6 Motors or electricity, which provide energy THE KINDS OF THINKING A\nMECHANICAL BRAIN CAN DO\nThere are many kinds of thinking that mechanical brains can do Among other things, they can:\n  1 Learn what you tell them",
    "Learn what you tell them 2 Apply the instructions when needed 3 Read and remember numbers 4 Add, subtract, multiply, divide, and round off 5 Look up numbers in tables 6 Look at a result, and make a choice 7 Do long chains of these operations one after another 8 Write out an answer 9 Make sure the answer is right 10 Know that one problem is finished, and turn to another 11 Determine most of their own instructions 12 Work unattended They do these things much better than you or I They are fast The\nmechanical brain built at the Moore School of Electrical Engineering\n\n\nat the University of Pennsylvania does 5000 additions a second They\nare reliable Even with hundreds of thousands of parts, the existing\ngiant brains have worked successfully They have remarkably few\nmechanical troubles; in fact, for one of the giant brains, a mechanical\nfailure is of the order of once a month They are powerful The big\nmachine at Harvard can remember 72 numbers each of 23 digits at\none time and can do 3 operations with these numbers every second The mechanical brains that have been finished are able to solve\nproblems that have baffled men for many, many years, and they think\nin ways never open to men before Mechanical brains have removed\nthe limits on complexity of routine: the machine can carry out a\ncomplicated routine as easily as a simple one Already, processes for\nsolving problems are being worked out so that the mechanical brain\nwill itself determine more than 99 per cent of all the routine orders\nthat it is to carry out But, you may ask, can they do any kind of thinking The answer is\nno No mechanical brain so far built can:\n1 Do intuitive thinking 2 Make bright guesses, and leap to conclusions 3 Determine all its own instructions 4 Perceive complex situations outside itself and interpret them A clever wild animal, for example, a fox, can do all these things; a\nmechanical brain, not yet There is, however, good reason to believe\nthat most, if not all, of these operations will in the future be\nperformed not only by animals but also by machines Men have only\njust begun to construct mechanical brains All those finished are\nchildren; they have all been born since 1940 Soon there will be much\nmore remarkable giant brains WHY ARE THESE GIANT BRAINS IMPORTANT Most of the thinking so far done by these machines is with\nnumbers They have already solved problems in airplane design,\nastronomy, physics, mathematics, engineering, and many other\nsciences, that previously could not be solved To find the solutions of\nthese problems, mathematicians would have had to work for years\nand years, using the best known methods and large staffs of human\ncomputers These mechanical brains not only calculate, however They also\nremember and reason, and thus they promise to solve some very\nimportant human problems For example, one of these problems is the\napplication of what mankind knows It takes too long to find\nunderstandable information on a subject The libraries are full of\nbooks: most of them we can never hope to read in our lifetime The\ntechnical journals are full of condensed scientific information: they\ncan hardly be understood by you and me There is a big gap between\nsomebody’s knowing something and employment of that knowledge\nby you or me when we need it But these new mechanical brains\nhandle information very swiftly In a few years machines will\nprobably be made that will know what is in libraries and that will tell\nvery swiftly where to find certain information Thus we can see that\nmechanical brains are one of the great new tools for finding out what\nwe do not know and applying what we do know Chapter 2\nLANGUAGES:\nSYSTEMS FOR HANDLING INFORMATION\nAs everyone knows, it is not always easy to think By thinking, we\nmean computing, reasoning, and other handling of information By\ninformation we mean collections of ideas—physically, collections of\nmarks that have meaning By handling information, we mean\nproceeding logically from some ideas to other ideas—physically,\nchanging from some marks to other marks in ways that have meaning For example, one of your hands can express an idea: it can store the\nnumber 3 for a short while by turning 3 fingers up and 2 down In the\nsame way, a machine can express an idea: it can store information by\narranging some equipment The Harvard mechanical brain can store\n132 numbers between 0 and 99,999,999,999,999,999,999,999 for\ndays When you want to change the number stored by your fingers,\nyou move them: perhaps you need a half second to change the\nnumber stored by your fingers from 3 to 2, for example In the same\nway, a machine can change a stored number by changing the\narrangement of some equipment: the electronic brain Eniac can\nchange a stored number in ¹/₅₀₀₀ of a second LANGUAGES\nSince it is not always easy to think, men have given much\nattention to devices for making thinking easier They have worked out\nmany systems for handling information, which we often call languages Some languages are very complete and versatile and of great\nimportance Others cover only a narrow field—such as numbers alone\n—but in this field they may be remarkably efficient",
    "Others cover only a narrow field—such as numbers alone\n—but in this field they may be remarkably efficient Just what is a\nlanguage Every language is both a scheme for expressing meanings and\nphysical equipment that can be handled For example, let us take spoken\nEnglish The scheme of spoken English consists of more than 150,000\nwords expressing meanings, and some rules for putting words together\n\n\nmeaningfully The physical equipment of spoken English consists of\n(1) sounds in the air, and (2) the ears of millions of people, and their\nmouths and voices, by which they can hear and speak the sounds of\nEnglish For another example, let us take numbers expressed in the\nArabic numerals and the rules of arithmetic The scheme of this\nlanguage contains only ten digits 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 or their\nequivalents, and some rules for combining them Sufficient physical\nequipment for this language might very well be a ten-column desk\ncalculating machine with its counter wheels, gears, keys, etc If we\ntried to exchange the physical equipment of these two languages, we\nwould be blocked: the desk calculating machine cannot possibly\nexpress the meaningful combinations of 150,000 words, and sounds in\nthe air are not permanent enough to express the steps of division of\none large number by another SCHEMES FOR EXPRESSING MEANINGS\nIf we examine languages that have existed, we can observe a\nnumber of schemes for expressing meanings SCHEMES FOR EXPRESSING MEANINGS\nIf we examine languages that have existed, we can observe a\nnumber of schemes for expressing meanings In the table on pp 12-13\nis a rough list of a dozen of them From among these we can choose\nthe schemes that are likely to be useful in mechanical brains Schemes\n11 and 12 are the schemes that have been predominantly used in\nmachinery for computing Scheme 12 consisting of combinations of\njust two marks, ✓, ✕, provides one of the best codes for mechanical\nhandling of information This scheme, called binary coding (see\nSupplement 2), is also useful for measuring the quantity of\ninformation QUANTITY OF INFORMATION\nHow should we measure the quantity of information The smallest\nunit of information is a “yes” or a “no,” a check mark (✓) or a cross\n(✕), an impulse in a nerve or no impulse, a 1 or a 0, black or white,\ngood or bad, etc This twofold difference is called a binary digit of\ninformation (see Supplement 2) It is the convenient unit of\ninformation SCHEMES FOR EXPRESSING MEANINGS\n\n\nExample:\n \n/——————^—————————\\\n \nNo Principle\nof Scheme\nSign\n(1)\n(2)\n(3)\nSounds\n1 Sound of new\nword is like\nsound of\nreferent\nBobwhite[2]\n2 An utterance\nbecomes a\nnew word\nPooh [3]\n3 New word is\nlike another\nword\nChortle[4]\ni\nL\n4 Word has\nbeen used\nthrough\nthe ages\nMother[5]\nSights\n5 Picture\nis like\nreferent\n\n\n6 Pattern is\nsymbol of\nan idea\n5\nMapping of Sounds\n7 Object\npictured\nas the\nwanted\nsound\n8 Pattern is\nsymbol for\na large\nound unit\n9 Pattern is\nsymbol for\na small\nsound unit\nƷ\nI\nA\n8\npping of Sights or Symbols\n10 Systematic\ncombinations\nof 26\nletters\nENIAC\nA\n11 Systematic\ncombinations\nof 10 digits\n135-03-1228 A\nno\n\n\n12 Systematic\ncombinations\nof 2 marks\n✓,✕,✕,✓,✓\n \nWith 2 units of information or 2 binary digits (1 or 0) we can\nrepresent 4 pieces of information:\n00, 01, 10, 11\nWith 3 units of information we can represent 8 pieces of information:\n000, 001, 010, 011, 100, 101, 110, 111\nWith 4 units of information we can represent 16 pieces of\ninformation:\n0000\n0001\n0010\n0011\n0100\n0101\n0110\n0111\n1000\n1001\n1010\n1011\n1100\n1101\n1110\n1111\nNow 4 units of information are sufficient to represent a decimal digit 0,\n1, 2, 3, 4, 5, 6, 7, 8, 9 and allow 6 possibilities to be left over; 3 units\nof information are not sufficient For example, we may have:\n0\n0000\n5\n0101\n1\n0001\n6\n0110\n2\n0010\n7\n0111\n3\n0011\n8\n1000\n4\n0100\n9\n1001\nWe say, therefore, that a decimal digit 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 is\nequivalent to 4 units of information Thus a table containing 10,000\nnumbers, each of 10 decimal digits, is equivalent to 400,000 units of\ninformation One of the 26 letters of the alphabet is equivalent to 5 units of\n\n\ninformation, for, 5 binary digits (1 or 0) have 32 possible\narrangements, and these are enough to provide for the 26 letters Any\nprinted information in English can be expressed in about 80\ncharacters consisting of 10 numerals, 52 capital and small letters, and\nsome 18 punctuation marks and other types of marks; 6 binary digits\n(1 or 0) have 64 possible arrangements, and 7 binary digits (1 or 0)\nhave 128 possible arrangements Each character in a printed book,\ntherefore, is roughly equivalent to 7 units of information It can be determined that a big telephone book or a big reference\ndictionary stores printed information at the rate of about 1 billion\nunits of information per cubic foot If the 10 billion nerves in the\nhuman brain could independently be impulsed or not impulsed, then\nthe human brain could conceivably store 10 billion units of\ninformation The largest library in the world is the Library of\nCongress, containing 7 million volumes including pamphlets It stores\nabout 100 trillion units of information We can thus see the significance of a quantity of information from 1\nunit to 100 trillion units No distinction is here made between\ninformation that reports facts and information that does not For\nexample, a book of fiction about persons who never existed is still\ncounted as information, and, of course, much instruction and\nentertainment may be found in such a source PHYSICAL EQUIPMENT FOR\nHANDLING INFORMATION\nThe first thing we want to do with information is store it The\nsecond thing we want to do is combine it We want equipment that\nmakes these two processes easy and efficient We want equipment for\nhandling information that:\n1 Costs little 2 Holds much information in little space 3 Is permanent, when we want to keep the\ninformation 4 Is erasable, when we want to remove\ninformation 5 Is versatile, holds easily any kind of information,\n\n\nand allows operations to be done easily The amount of human effort needed to handle information\ncorrectly depends very much on the properties of the physical\nequipment expressing the information, although the laws of correct\nreasoning are independent of the equipment For example, the great\ndifficulty with spoken sounds as physical equipment for handling\ninformation is the trouble of storing them The technique for doing so\nwas mastered only about 1877 when Thomas A Edison made the first\nphonograph Even with this advance, no one can glance at a\nsoundtrack and tell quickly what sounds are stored there; only by\nturning back the machine and listening to a groove can we determine\nthis",
    "Even with this advance, no one can glance at a\nsoundtrack and tell quickly what sounds are stored there; only by\nturning back the machine and listening to a groove can we determine\nthis It was not possible for the men of 2000 b c to wait thousands of\nyears for the storing of spoken sounds The problem of storing\ninformation was accordingly taken to other types of physical\nequipment PHYSICAL EQUIPMENT FOR\nHANDLING INFORMATION\nNo Physical\nObjects\nArranged\nin or on\nOperated or\nProduced by\nLow\nCost Little\nSpace P\nn\n(1)\n(2)\n(3)\n(4)\n(5)\n(6)\nMind\n1 Nerve\ncells\nHuman\nbrain\nBody\n✕\n✓✓\nSounds\n2 Sounds\nAir\nVoice\n✓✓\n✓✓\n3 Sound-\ntracks\nWax\ncylinders,\nphonograph\nrecords\nMachines\nand\nmotors\n✓\n✓\nSights\n4 Marks\nSand\nStick\n✓\n✕\n\n\n5 Colored\npainting\ncanvases,\netc Cave\nwalls,\nPaintbrush\nand paints\n✕\n✕\n6 Marks,\ninscript-\nions\nClay,\nstone\nStylus,\nchisel\n✕✕\n✓\n7 Marks\nSlate\nChalk\n✓\n✕\n8 Marks\nparchment,\netc Paper,\nand ink,\npencil\nPen\n✓✓\n✓\n9 Letters,\netc Paper\nbooks\netc Printing\npress,\nmovable\ntype,\nmotor,\nand hands\n✓✓\n✓✓\n10 Photo-\ngraphs\nFilm,\nprints,\netc Camera\n✓\n✓✓\n11 Letters,\netc Paper,\nmimeograph\nstencil,\netc Typewriter\nand\nfingers\n✓\n✓✓\nBody\n12 Gestures\nSpace\nBody\n✓\n✕\n13 Fingers\nHands\nBody\n✕\n✕\nObjects\n14 Pebbles\nSlab\nHands\n✓✓\n✓\n\n\n15 Knots\nString\nHands\n✓✓\n✓\n16 Tallies,\nnotches\nStick\nKnife\n✓✓\n✓\n17 Beads\nRods in\na frame,\nabacus\nHands\n✓\n✓\n18 Ruled\nlines,\npointers\nRulers,\nscales,\ndials\nHands,\npressure,\netc ✓\n✓\nMachines\n19 Counter\nwheels,\ngears,\nkeys,\nlights,\netc Desk\ncalculating\nmachines,\nfire-control\ninstruments,\netc Motor\nand\nhands\n✓\n✓\n20 Punched\ncards\nand\npaper\ntape\nPunch card\nmachinery,\nteletype,\netc Motor\nand\ninput\ninstructions\n✓✓\n✓✓\n21 Relays\nDial\ntelephone,\nother\nmachinery\nMotor\nand\ninput\ninstructions\n✕\n✓\n22 Elect-\nronic\ntubes\nMachinery\nMotor\nand\ninput\ninstructions\n✓\n✓\n\n\n23 Magnetic\nsurfaces:\nwire,\ntape,\ndiscs\nMachinery\nMotor\nand\ninput\ninstructions\n✓✓\n✓✓\n24 Delay\nlines:\nelectric,\nacoustic\nMachinery\nMotor\nand\ninput\ninstructions\n✕\n✓\n25 Electro-\nstatic\nstorage\ntubes\nMachinery\nMotor\nand\ninput\ninstructions\n✕\n✓✓\n \n✓✓   yes, very ✓     yes, adequately ✕     not generally ✕✕  not at all",
    "✕✕  not at all What are the types of physical equipment for handling\ninformation, and which are the good ones In the table on pp 16-17\nis a rough list of 25 types of physical equipment for handling\ninformation 16-17\nis a rough list of 25 types of physical equipment for handling\ninformation ✓✓ means “yes, very;” ✓ means “yes, adequately;” ✕\nmeans “not generally;” ✕✕ means “not at all ”\nFor example, our fingers (see No 13) as a device for handling\ninformation are very expensive for most cases They take up a good\ndeal of space Certainly they are very temporary storage; any\ninformation they may express is very erasable; and what we can\nexpress with them alone is very limited Yet, with a typewriter (see No 11), our fingers become versatile and efficient In fact, our fingers can\nmake 4 strokes a second; we can select any one of about 38 keys; and,\nsince each key is equivalent to 5 or 6 units of information, the\neffective speed of our fingers may be about 800 units of information a\n\n\nsecond LANGUAGES OF PHYSICAL OBJECTS\nThe use of pebbles (see No 14) for keeping track of numerical\ninformation is shown in the history of the words containing the root\ncalc-of the word calculate The Latin word calcis meant pertaining to\nlime or limestone, and the Latin word calculus derived from it meant\nfirst a small piece of limestone, and later any small stone, particularly\na pebble used in counting All three of these meanings have left\ndescendants: “chalk,” “calcite,” “calcium,” relating in one way or\nanother to lime; in medicine, “calculus,” referring to stones in the\nkidneys or elsewhere in the body; and in mathematics, “calculate,”\n“calculus,” referring to computations, once done with pebbles The pebbles, and the slab (for which the ancient Greek word is\nabax) on which they were arranged and counted, were later replaced,\nfor ease in handling, by groups of beads strung on rods and placed in\na frame (see No 17) These constituted the abacus (see Supplement 2\nand the figure there) This was the first calculating machine It is still\nused all over Asia; in fact, even today more people use the abacus for\naccounting than use pencil and paper The skill with which the abacus\ncan be used was shown in November 1946 in a well-publicized contest\nin Japan Kiyoshi Mastuzaki, a clerk in the Japanese communications\ndepartment, using the abacus, challenged Private Thomas Wood of the\nU S Army, using a modern desk calculating machine, and defeated\nhim \nin \na \nspeed \ncontest \ninvolving \nadditions, \nsubtractions,\nmultiplications, and divisions The heaps of small pebbles, the notches in sticks, and the abacus\nhad the advantage of being visible and comparatively permanent Storing and reading were relatively easy They were rather compact\nand easy to manipulate, certainly much easier than spoken words But\nthey were subject to disadvantages also Moving correctly from one\narrangement to another was difficult, since there was no good way for\nstoring intermediate steps so that the process could be easily verified Furthermore, these devices applied to specified numbers only Also,\nthere was no natural provision for recording what the several\nnumbers belonged to This had to be recorded with the help of\nanother language, writing The language of physical objects was picked up from obscurity by\n\n\nthe invention of motors and the demands of commerce and business Commencing in the late 1800’s, desk calculating machines (see No 19)\nwere constructed to meet mass calculation requirements They would\nadd, subtract, multiply, and divide specific numbers with great\naccuracy and speed But until recently they still were adjuncts to the\nother languages, for they provided figures one at a time for insertion\nin the spaces on the ledger pages or calculation sheets where figures\nwere called for Beginning in the 1920’s, a remarkable change has taken place Instead of performing single operations, machines have been\ndeveloped to perform chains of operations with many kinds of\ninformation One of these machines is the dial telephone: it can select\none of 7 million telephones by successive sorting according to the\nletters and digits of a telephone number Another of these machines is\na fire-control instrument, a mechanism for controlling the firing of a\ngun For example, in a modern anti-aircraft gun the mechanism will\nobserve an enemy plane flying at several hundred miles an hour,\nconvert the observations into gun-aiming directions, and determine\nthe aiming directions fast enough to shoot down the plane Punch-card\nmachinery, machines handling information expressed as punched holes\nin cards, enable the fulfillment of social security legislation, the\nproduction of the census, and countless operations of banks, insurance\ncompanies, department stores, and factories And, finally, in 1942 the\nfirst mechanical brain was finished at Massachusetts Institute of\nTechnology THE CRUCIAL DEVICES FOR\nMECHANICAL BRAINS\nLet us consider the two modern physical devices for handling\ninformation which make mechanical brains possible These are relays\nand electronic tubes (Nos 21 and 22) The last three kinds of\nequipment listed in the table (magnetic surfaces, No 23; delay lines,\nNo 24; and electrostatic storage tubes, No 25) were not included in any\nmechanical brains functioning by the middle of 1948 The discussion\nof them is therefore put off to Chapter 10, where we talk about the\nfuture design of mechanical brains",
    "The discussion\nof them is therefore put off to Chapter 10, where we talk about the\nfuture design of mechanical brains Fig 1 Relay\nFigure 1 shows a simple relay There are two electrical circuits\nhere One has two terminals—Pickup and Ground The other has three\nterminals—Common, Normally Open, and Normally Closed When\ncurrent flows through the coil of wire around the iron, it makes the\niron a magnet; the magnet pulls down the flap of iron above,\novercoming the force of the spring When there is no current through\nthe coil, the iron is not a magnet, and the flap is held up by the\nspring Now suppose that there is current in Common When there is\nno current in Pickup, the current from Common will flow through the\nupper contact, to the terminal marked Normally Closed When there is\ncurrent in Pickup, the current from Common will flow through the\nlower contact, to the terminal marked Normally Open Thus we see\nthat a relay expresses a “yes” or a “no,” a 1 or 0, a binary digit, a unit\nof information A relay costs $5 to $10 It is rather expensive for\nstoring a single unit of information The fastest it can be changed from\n1 to 0, or vice versa, is about ¹/₁₀₀ of a second Fig 2 Electronic tube Figure 2 shows a simple electronic tube It has three parts—the\nCathode, the Grid, and the Plate The Grid actually is a coarse net of\nmetal wires Electrons can flow from the Cathode to the Plate,\nprovided the voltage on the Grid is such as to permit them to flow So\nwe can see that an electronic tube is a very simple on-off device and\nexpresses a “yes” or a “no,” a 1 or 0, a binary digit, a unit of\ninformation A simple electronic tube suitable for calculating purposes\ncosts 50 cents to a $1, only ⅒ the cost of a relay It can be changed\nfrom 1 to 0, or back again, in 1 millionth of a second Relays have been widely used in the mechanical brains so far built,\nand electronic tubes are the essence of Eniac In the next chapter, we shall see how physical equipment for\nhandling information can be put together to make a simple\nmechanical brain Chapter 3\nA MACHINE THAT WILL THINK:\nTHE DESIGN OF A VERY SIMPLE\nMECHANICAL BRAIN\nWe shall now consider how we can design a very simple machine\nthat will think Let us call it Simon, because of its predecessor, Simple\nSimon SIMON, THE VERY SIMPLE\nMECHANICAL BRAIN\nBy designing Simon, we shall see how we can put together\nphysical equipment for handling information in such a way as to get a\nvery simple mechanical brain At every point in the design of Simon,\nwe shall make the simplest possible choice that will still give us a\nmachine \nthat: \nhandles \ninformation, \ntransfers \ninformation\nautomatically from one part of the machine to another, and has\ncontrol over the sequence of operations Simon is so simple and so\nsmall, in fact, that it could be built to fill up less space than a grocery-\nstore box, about 4 cubic feet If we know a little about electrical work,\nwe will find it rather easy to make Simon What do we do first to design the very simple mechanical brain,\nSimon SIMON’S FLESH AND NERVES—\nREPRESENTING INFORMATION\nThe first thing we have to decide about Simon is how information\nwill be represented: as we put it into Simon, as it is moved around\ninside of Simon, and as it comes out of Simon We need to decide\nwhat physical equipment we shall use to make Simon’s flesh and\nnerves Since we are taking the simplest convenient solution to each\nproblem, let us decide to use: punched paper tape for putting\n\n\ninformation in, relays (see Chapter 2) and wires for storing and\ntransferring information, and lights for putting information out Fig 1 Simon, the very simple mechanical brain For the equipment inside Simon, we could choose either electronic\ntubes or relays We choose relays, although they are slower, because it\nis easier to explain circuits using relays We can look at a relay circuit\nlaid out on paper and tell how it works, just by seeing whether or not\ncurrent will flow Examples will be given below When we look at a\ncircuit using electronic tubes laid out on paper, we still need to know\na good deal in order to calculate just how it will work How will Simon perceive a number or other information by means\nof punched tape, or relays, or lights With punched paper tape\nhaving, for example, 2 spaces where holes may be, Simon can be told\n4 numbers—00, 01, 10, 11 Here the binary digit 1 means a hole\npunched; the binary digit 0 means no hole punched With 2 relays\ntogether in a register, Simon can remember any one of the 4 numbers\n00, 01, 10, and 11 Here the binary digit 1 means the relay picked up\nor energized or closed; 0 means the relay not picked up or not\nenergized or open With 2 lights, Simon can give as an answer any\none of the 4 numbers 00, 01, 10, 11 In this case the binary digit 1\nmeans the light glowing; 0 means the light off (See Fig 1 )\nWe can say that the two lights by which Simon puts out the\nanswer are his eyes and say that he tells his answer by winking We can\nsay also that the two mechanisms for reading punched paper tape are\nSimon’s ears One tape, called the input tape, takes in numbers or\noperations The other tape takes in instructions and is called the\nprogram tape",
    "The other tape takes in instructions and is called the\nprogram tape SIMON’S MENTALITY—POSSIBLE RANGE\nOF INFORMATION\nWe can say that Simon has a mentality of 4 We mean not age 4 but\njust the simple fact that Simon knows only 4 numbers and can do only\n4 operations with them But Simon can keep on doing these\noperations in all sorts of routines as long as Simon has instructions We decide that Simon will know just 4 numbers, 0, 1, 2, 3, in order to\n\n\nkeep our model mechanical brain very simple Then, for any register,\nwe need only 2 relays; for any answer, we need only 2 lights Any calculating machine has a mentality, consisting of the whole\ncollection of different ideas that the machine can ever actually express\nin one way or another For example, a 10-place desk calculating\nmachine can handle numbers up to 10 decimal digits without\nadditional capacity It cannot handle bigger numbers Fig 2 Four directions What are the 4 operations with numbers which Simon can carry out Let us consider some simple operations that we can perform with just\n4 numbers Suppose that they stood for 4 directions in the order east,\nnorth, west, south (see Fig 2) Or suppose that they stood for a turn\ncounterclockwise through some right angles as follows:\n0: Turn through  0°, or no right angles 1: Turn through  90°, or  1 right angle 2: Turn through 180°, or  2 right angles 3: Turn through 270°, or  3 right angles Then we could have the operations of addition and negation,\ndefined as follows:\nAddition\n  Negation\nc = a + b  \nc = -a\n \nb: \n   \n 0 \n 1   2   3       \na: \n \n \n \n \n    a c\n0 \n \n0\n1\n2\n3   0 0\n1 \n \n1\n2\n3\n0   1 3\n2 \n \n2\n3\n0\n1   2 2\n3 \n \n3\n0\n1\n2   3 1\nFor example, the first table says, “1 plus 3 equals 0 ” This means that,\n\n\nif we turn 1 right angle and then turn in the same direction 3 more\nright angles, we face in exactly the same way as we did at the start This statement is clearly true For another example, the second table\nsays, “2 is the negative of 2 ” This means that, if we turn to the left 2\nright angles, we face in exactly the same way as if we turn to the right\n2 right angles, and this statement also is, of course, true With only these two operations in Simon, we should probably find\nhim a little too dull to tell us much Let us, therefore, put into Simon\ntwo more operations Let us choose two operations involving both\nnumbers and logic: in particular, (1) finding which of two numbers is\ngreater and (2) selecting In this way we shall make Simon a little\ncleverer It is easy to teach Simon how to find which of two numbers is the\ngreater when all the numbers that Simon has to know are 0, 1, 2, 3 We put all possible cases of two numbers a and b into a table:\n \nb:       0   1   2   3 \na:   \n \n0   \n \n1   \n \n2   \n \n3   \n \nThen we tell Simon that we shall mark with 1 the cases where a is\ngreater than b and mark with 0 the cases where a is not greater than\nb:\nGreater Than\n \nb: \n     0   1   2   3 \na: \n \n \n \n \n \n0 \n \n0\n0\n0\n0\n\n\n1 \n \n1\n0\n0\n0\n2 \n \n1\n1\n0\n0\n3 \n \n1\n1\n1\n0\nFor example, “2 is greater than 3” is false, so we put 0 in the table on\nthe 2 line in the 3 column We see that, for the 16 possible cases, a is\ngreater than b in 6 cases and a is not greater than b in 10 cases There is a neat way of saying what we have just said, using the\nlanguage of mathematical logic (see Chapter 9 and Supplement 2) Suppose that we consider the statement “a is greater than b” where a\nand b may be any of the numbers 0, 1, 2, 3 We can say that the truth\nvalue p of a statement P is 1 if the statement is true and that it is 0 if\nthe statement is false:\np = 1 if P is true, 0 if P is false\nThe truth value of a statement P is conveniently denoted as T(P) (see\nSupplement 2):\np = T(P)\nNow we can say that the table for the operation greater than shows the\ntruth value of the statement “a is greater than b”:\np = T(a > b)\nLet us turn now to the operation selection By selecting we mean\nchoosing one number a if some statement P is true and choosing\nanother number b if that statement is not true As before, let p be the\ntruth value of that statement P, and let it be equal to 1 if P is true and\nto 0 if P is false Then the operation of selection is fully expressed in\nthe following table and logical formula (see Supplement 2):\nSelection\nc = a·p + b·(1 - p)\n \np: \n     0   0   0   0 \n 1   1   1   1 \nb: \n     0   1   2   3 \n 0   1   2   3 \n\n\na: \n \n \n0 \n \n0\n1\n2\n3\n0\n0\n0\n0\n1 \n \n0\n1\n2\n3\n1\n1\n1\n1\n2 \n \n0\n1\n2\n3\n2\n2\n2\n2\n3 \n \n0\n1\n2\n3\n3\n3\n3\n3\nFor example, suppose that a is 2 and b is 3 and the statement P is the\nstatement “2 is greater than 0 ” Since this statement is true, p is 1, and\na·p + b·(1 - p) = 2(1) + 3(0) = 2\nThis result is the same as selecting 2 if 2 is greater than 0 and\nselecting 3 if 2 is not greater than 0 Thus we have four operations for Simon that do not overstrain his\nmentality; that is, they do not require him to go to any numbers other\nthan 0, 1, 2, and 3 These four operations are: addition, negation,\ngreater than, selection We label these operations also with the\nnumbers 00 to 11 as follows: addition, 00; negation, 01; greater than,\n10; selection, 11 SIMON’S MEMORY—\nSTORING INFORMATION\nThe memory of a mechanical brain consists of physical equipment\nin which information can be stored Usually, each section of the\nphysical equipment which can store one piece of information is called\na register Each register in Simon will consist of 2 relays Each register\nwill hold any of 00, 01, 10, 11 The information stored in a register\n00, 01, 10, 11 may express a number or may express an operation",
    "The information stored in a register\n00, 01, 10, 11 may express a number or may express an operation S1-2\nRelay energized\nS1-1\nRelay not energized\n\n\nFig 3 Register S1 storing 10 How many registers will we need to put into Simon to store\ninformation We shall need one register to read the input tape and to\nstore the number or operation recorded on it We shall call this\nregister the input register I We shall need another register to store the\nnumber or operation that Simon says is the answer and to give it to\nthe output lights We shall call this register the output register O We\nshall need 5 registers for the part of Simon which does the computing,\nwhich we shall call the computer: we shall need 3 to store numbers put\ninto the computer (C1, C2, C3), 1 to store the operation governing the\ncomputer (C4), and 1 to store the result (C5) Suppose that we decide\nto have 8 registers for storing information, so as to provide some\nflexibility for doing problems We shall call these registers storage\nregisters and name them S1, S2, S3, ··· S8 Then Simon will have 15\nregisters: a memory that at one time can hold 15 pieces of\ninformation How will one of these registers hold information For example,\nhow will register S1 hold the number 2 (see Fig 3) The number 2 in\nmachine language is 10 Register S1 consists of two relays, S1-2 and\nS1-1 10 stored in register S1 means that relay S1-2 will be energized\nand that relay S1-1 will not be energized",
    "10 stored in register S1 means that relay S1-2 will be energized\nand that relay S1-1 will not be energized THE CONTROL OF SIMON\nSo far we have said nothing about the control of Simon Is he\ndocile Is he stubborn We know what his capacity is, but we do not\nknow how to tell him to do anything How do we connect our desires\nto his behavior How do we tell him a problem How do we get him\nto solve it and tell us the answer How do we arrange control over the\nsequence of his operations For example, how do we get Simon to add\n1 and 2 and tell us the answer 3 On the outside of Simon, we have said, there are two ears: little\nmechanisms for reading punched paper tape Also there are two eyes\nthat can wink: light bulbs that by shining or not shining can put out\ninformation (see Fig 1) One of the ears—let us call it the left ear—\ntakes in information about a particular problem: numbers and\noperations Here the problem tape or input tape is listened to Each line\non the input tape contains space for 2 punched holes So, the\n\n\ninformation on the input tape may be 00, 01, 10, or 11—either a\nnumber or an operation The other ear—let us call it the right ear—\ntakes in information about the sequence of operations, the program or\nroutine to be followed Here the program tape or routine tape or control\ntape is listened to Each line on the program tape contains space for 4\npunched holes We tell Simon by instructions on the program tape\nwhat he is to do with the information that we give him on the input\ntape The information on the program tape, therefore, may be 0000,\n0001, 0010, ···, 1111, or any number from 0 to 15 expressed in binary\nnotation (see Supplement 2) How is this accomplished In the first place, Simon is a machine,\nand he behaves during time He does different things from time to\ntime His behavior is organized in cycles He repeats a cycle of\nbehavior every second or so In each cycle of Simon, he listens to or\nreads the input tape once and he listens to or reads the program tape\ntwice Every complete instruction that goes on the program tape tells\nSimon a register from which information is to be sent and a register in\nwhich information is to be received The first time that he reads the\nprogram tape he gets the name of the register that is to receive certain\ninformation, the receiving register The second time he reads the\nprogram tape he gets the name of the register from which information\nis to be sent, the sending register He finishes each cycle of behavior by\ntransferring information from the sending register to the receiving\nregister For example, suppose that we want to get an answer out of\nSimon’s computer into Simon’s output lights We put down the\ninstruction\nSend information from C5 into O\nor, more briefly,\nC5 → O\nBut he does not understand this language We must translate into\nmachine language, in this case punched holes in the program tape Naturally, the punched holes in the program tape must be able to\nspecify any sending register and any receiving register There are 15\nregisters, and so we give them punched hole codes as follows:\nRegister  Code    Register    Code \n\n\nI \n0001\nC1\n1010\nS1\n0010\nC2\n1011\nS2\n0011\nC3\n1100\nS3\n0100\nC4\n1101\nS4\n0101\nC5\n1110\nS5\n0110\nO\n1111\nS6\n0111\n \nS7\n1000\n \nS8\n1001\n \nTo translate the direction of transfer of information, which we showed\nas an arrow, we put on the program tape the code for the receiving\nregister first—in this case, output, O, 1111—and the code for the\nsending register second—in this case, C5, 1110 The instruction\nbecomes 1111, 1110 The first time in any cycle that Simon listens\nwith his right ear, he knows that what he hears is the name of the\nreceiving register; and the second time that he listens, he knows that\nwhat he hears is the name of the sending register One reason for this\nsequence is that any person or machine has to be prepared beforehand\nto absorb or take in any information Now how do we tell Simon to add 1 and 2 On the input tape, we\nput:\nAdd 00\n1\n01\n2\n10\nOn the program tape, we need to put:\nI  →  C4\nI  →  C1\nI  →  C2\nC5 → O      \nwhich becomes:\n\n\n1101, 0001;\n1010, 0001;\n1011, 0001;\n1111, 1110  \nTHE USEFULNESS OF SIMON\nThus we can see that Simon can do such a problem as:\nAdd 0 and 3 Add 2 and the negative of 1 Find which result is greater Select 3 if this result equals 2;\notherwise select 2 To work out the coding for this and like problems would be a good\nexercise Simon, in fact, is a rather clever little mechanical brain, even\nif he has only a mentality of 4 It may seem that a simple model of a mechanical brain like Simon\nis of no great practical use On the contrary, Simon has the same use\nin instruction as a set of simple chemical experiments has: to\nstimulate thinking and understanding and to produce training and\nskill A training course on mechanical brains could very well include\nthe construction of a simple model mechanical brain as an exercise In\nthis book, the properties of Simon may be a good introduction to the\nvarious types of more complicated mechanical brains described in\nlater chapters The rest of this chapter is devoted to such questions as:\nHow do transfers of information actually take\nplace in Simon How does the computer in Simon work so that\ncalculation actually occurs How could Simon actually be constructed",
    "How could Simon actually be constructed What follows should be skipped unless you are interested in these\nquestions and the burdensome details needed for answering them SIMON’S THINKING—\nTRANSFERRING INFORMATION\nThe first basic thinking operation for any mechanical brain is\ntransferring information automatically Let us see how this is done in\nSimon Fig 4 Scheme of Simon Let us first take a look at the scheme of Simon as a mechanical\nbrain (see Fig 4) We have 1 input, 8 storage, 5 computer, and 1\noutput registers, which are connected by means of transfer wires or a\ntransfer line along which numbers or operations can travel as\nelectrical impulses This transfer line is often called the bus, perhaps\nbecause it is always busy carrying something In Simon the bus will\nconsist of 2 wires, one for carrying the right-hand digit and one for\ncarrying the left-hand digit of any number 00, 01, 10, 11 Simon also\nhas a number of neat little devices that will do the following:\nWhen any number goes into a register, the coils of\nthe relays of the register will be connected\nwith the bus When any number goes out of a register, the\ncontacts of the relays of the register will be\nconnected with the bus For example, suppose that in register C5 the number 2 is stored In\nmachine language this is 10 That means the left-hand relay (C5-2) is\nenergized and the right-hand relay (C5-1) is not energized Suppose\nthat we want to transfer this number 2 into the output register O,\nwhich has been cleared What do we do Let us take a look at a circuit that will transfer the number (see\nFig 5) First we see two relays in this circuit They belong to the C5\nregister The C5-2 relay is energized since it holds 1; current is\nflowing through its coil, the iron core becomes a magnet, and the\ncontact above it is pulled down The C5-1 relay is not energized since\nit holds 0; its contact is not pulled down The next thing we see is two\nrectifiers The sign for these is a triangle These are some modern\nelectrical equipment that allow electrical current to flow in only one\n\n\ndirection In the diagram, the direction is shown by the pointing of\nthe triangle along the wire Rectifiers are needed to prevent undesired\ncircuits Next, we see the bus, consisting of two wires One carries the\nimpulses for left-hand or 2 relays, and the other carries impulses for\nthe right-hand or 1 relays Next, we see two relays, called the entrance\nrelays for the O register Current from Source 1 may flow to these\nrelays, energize them, and close their contacts When the first line of\nthe program tape is read, specifying the receiving register, the code\n1111 causes Source 1 to be energized This fact is shown\nschematically by the arrow running from the program tape code 1111\nto Source 1 Finally, we see the coils of the two relays for the Output\nor O register We thus see that we have a circuit from the contacts of\nthe C5 register through the bus to the coils of the O register",
    "We thus see that we have a circuit from the contacts of\nthe C5 register through the bus to the coils of the O register Fig 5 Transfer circuit We are now ready to transfer information when the second line of\nthe program tape is read This line holds 1110 and designates C5 as\nthe sending register and causes Source 2 to be energized This fact is\nshown schematically by the arrow running from the second line of the\nprogram tape to Source 2 When the second line is read, current flows:\n1 From Source 2 2 Through the contacts of the C5 register if\nclosed 3 Through the rectifiers 4 Through the bus 5 Through the entrance relay contacts of the O\nregister 6 Through the coils of the O register relays,\nenergizing such of them as match with the C5\nclosed contacts; and finally\n7 Into the ground Thus relay O-2 is energized; it receives current because contact C5-2 is\nclosed And relay O-1 is not energized; it receives no current since\ncontact C5-1 is open So we have actually transferred information\nfrom the C5 register to the O register The same process in principle applies to all transfers:\nThe pattern of electrical impulses, formed by the\npositioning of one register, is produced in the\npositioning of another register SIMON’S COMPUTING AND REASONING\nNow so far the computing registers in Simon are a mystery We\nhave said that C1, C2, and C3 take in numbers 00, 01, 10, 11, that C4\ntakes in an operation 00, 01, 10, 11, and that C5 holds the result What process does Simon use so that he has the correct result in\nregister C5 Let us take the simplest computing operation first and see what\nsort of a circuit using relays will give us the result The simplest\ncomputing operation is negation In negation, a number 00, 01, 10, 11\ngoes into the C1 register, and the operation 01 meaning negation goes\ninto the C4 register, and the correct result must be in the C5 register So, first, we note the fact that the C4-2 relay must not be energized,\nsince it contains 0, and that the C4-1 relay must be energized, since it\ncontains 1 Now the table for negation, with c = -a, is:\na\nc\n 0   0 \n1\n3\n2\n2\n3\n1\nNegation in machine language will be:\na\nc\n 00   00 \n01\n11\n10\n10\n11\n01\n\n\nNow if a is in the C1 register and if c is in the C5 register, then\nnegation will be:\nC1 C5\n 00   00 \n01\n11\n10\n10\n11\n01\nBut each of these registers C1, C5 will be made up of two relays, the\nleft-hand or 2 relay and the right-hand or 1 relay So, in terms of these\nrelays, negation will be:\n C1-2   C1-1   C5-2   C5-1 \n0\n0\n0\n0\n0\n1\n1\n1\n1\n0\n1\n0\n1\n1\n0\n1\nNow, on examining the table, we see that the C5-1 relay is energized\nif and only if the C1-1 relay is energized So, in order to energize the\nC5-1 relay, all we have to do is transfer the information from C1-1 to\nC5-1 This we can do by the circuit shown in Fig 6 (In this and later\ndiagrams, we have taken one more step in streamlining the drawing of\nrelay contacts: the contacts are drawn, but the coils that energize\nthem are represented only by their names )\nFig 6 Negation—\nright-hand digit Fig 7 Negation—\nleft-hand digit Taking another look at the table, we see also that the C5-2 relay\nmust be energized if and only if:\nC1-2\nHOLDS:\n  AND  \nC1-1\nHOLDS:\n0\n \n1\n1\n \n0\nA circuit that will do this is the one shown in Fig 7 In Fig",
    "In Fig 8 is a\ncircuit that will do all the desired things together: give the right\ninformation to the C5 relay coils if and only if the C4 relays hold 01 8 is a\ncircuit that will do all the desired things together: give the right\ninformation to the C5 relay coils if and only if the C4 relays hold 01 Fig 8 Negation circuit Let us check this circuit First, if there is any operation other than\n01 stored in the C4 relays, then no current will be able to get through\nthe C4 contacts shown and into the C5 relay coils, and the result is\nblank Second, if we have the operation 01 stored in the C4 relays,\nthen the C4-2 contacts will not be energized—a condition which\npasses current—and the C4-1 contacts will be energized—another\ncondition which passes current—and:\nIf the number in C1 is:\nthen C1-1: and C1-2:\nand the C5 relays energized ar\n0\ndoes not close\ndoes not close\nneither\n1\ncloses\ndoes not close\nC5-2, C5-1\n2\ndoes not close\ncloses\nC5-2 only\n3\ncloses\ncloses\nC5-1 only\nThus we have shown that this circuit is correct We see that this circuit uses more than one set of contacts for\nseveral relays (C1-2, C4-1, C4-2); relays are regularly made with 4, 6,\nor 12 sets of contacts arranged side by side, all controlled by the same\npickup coil These are called 4-, 6-, or 12-pole relays Fig 9 Addition circuit Fig 10 Greater-than circuit Circuits for addition, greater than, and selection can also be\ndetermined rather easily (see Figs 9, 10, 11) (Note: By means of the\nalgebra of logic, referred to in Chapter 9 and Supplement 2, the\nconditions for many relay circuits, as well as the circuit itself, may be\nexpressed algebraically, and the two expressions may be checked by a\nmathematical process ) For example, let us check that the addition\ncircuit in Fig 9 will enable us to add 1 and 2 and obtain 3 We take a\ncolored pencil and draw closed the contacts for C1-1 (since C1 holds\n01) and for C2-2 (since C2 holds 10) Then, when we trace through\nthe circuit, remembering that addition is stored as 00 in the C4 relays,\nwe find that both the C5 relays are energized Hence C5 holds 11,\nwhich is 3 Thus Simon can add 1 and 2 and make 3 Fig 11 Selection Circuit PUTTING SIMON TOGETHER\nIn order to put Simon together and make him work, not very much\nis needed On the outside of Simon we shall need two small\nmechanisms for reading punched paper tape Inside Simon, there will\nbe about 50 relays and perhaps 100 feet of wire for connecting them In addition to the 15 registers (I, S1 to S8, C1 to C5, and O), we shall\nneed a register of 4 relays, which we shall call the program register This register will store the successive instructions read off the\nprogram tape We can call the 4 relays of this register P8, P4, P2, P1 For example, if the P8 and P2 relays are energized, the register holds\n1010, and this is the program instruction that calls for the 8th plus\n2nd, or 10th, register, which is C1 For connecting receiving registers to the bus, we shall need a relay\nwith 2 poles, one for the 2-line and one for the 1-line, for each\nregister that can receive a number from the bus For example, for\nentering the output register, we actually need only one 2-pole relay\ninstead of the two 1-pole relays drawn for simplicity in Fig 5 There\nwill be 13 2-pole relays for this purpose, since only 13 registers\nreceive numbers from the bus; registers I and C5 do not receive\n\n\nnumbers from the bus We call these 13 relays the entrance relays or E\nrelays, since E is the initial letter of the word entrance Fig 12 Select-Receiving-Register circuit The circuit for selecting and energizing the E relays is shown in\nFig 12",
    "12 We call this circuit the Select-Receiving-Register circuit For\nexample, suppose that the P8 and P2 relays are energized Then this\ncircuit energizes the E10 relay The E10 relay closes the contacts\nbetween the C1 relay coils and the bus; and so it connects the C1\nregister to receive the next number that is sent into the bus This kind\nof circuit expresses a classification and is sometimes called a pyramid\ncircuit since it spreads out like a pyramid A similar pyramid circuit is\nused to select the sending register We shall need a relay for moving the input tape a step at a time We shall call this relay the MI relay, for moving input tape We also\nneed a relay for moving the program tape a step at a time We shall\ncall this relay the MP relay for moving program tape Here then is\napproximately the total number of relays required:\nRelays\nName\nNumber\nI, S, C, O\nInput, Storage, Computer, Output\n30\nP\nProgram\n4\nE\nEntrance\n13\nMI\nMove Input Tape\n1\nMP\nMove Program Tape\n1\n \nTotal\n49\nA few more relays may be needed to provide more contacts or poles For example, a single P1 relay will probably not have enough poles to\nmeet all the need for its contacts For example, a single P1 relay will probably not have enough poles to\nmeet all the need for its contacts Fig 13 Latch relay Each cycle of the machine will be divided into 5 equal time\nintervals or times 1 to 5 The timing of the machine will be about as\n\n\nfollows:\nTime Action\n1\nMove program tape Move input tape if read out of in last cycle 2\nRead program tape, determining the receiving register Read through the computing circuit setting up the C5 r\n3\nMove program tape Energize the E relay belonging to the receiving register\n4\nRead program tape again, determining the sending regi\n5\nTransfer information by reading through the\n \nSelect-Sending-Register circuit and the\n \nSelect-Receiving-Register circuit In order that information may remain in storage until wanted,\nregister relays should hold their information until just before the next\ninformation is received This can be accomplished by keeping current\nin their coils or in other ways There is a type of relay called a latch\nrelay, which is made with two coils and a latch This type of relay has\nthe property of staying or latching in either position until the opposite\ncoil is impulsed (see Fig",
    "This type of relay has\nthe property of staying or latching in either position until the opposite\ncoil is impulsed (see Fig 13) 13) This type of relay would be especially\ngood for the registers of Simon If any reader sets to work to construct Simon, and if questions\narise, the author will be glad to try to answer them Chapter 4\nCOUNTING HOLES:\nPUNCH-CARD CALCULATING MACHINES\nWhen we think of counting, we usually think of saying softly to\nourselves “one, two, three, four, ··· ” This is a good way to find the\ntotal of a small group of objects But when we have a large group of\nobjects or a great many groups of objects to be counted, a much faster\nway of counting is needed A very fast way of sorting and counting is\npunch-card calculating machinery This is machinery which handles\ninformation expressed as holes in cards Punch-card machines can:\nSort, count, file, select, and copy information,\nMake comparisons, and choose according to instructio\nAdd, subtract, multiply, and divide,\nList information, and print totals For example, in a life insurance company, much routine handling of\ninformation about insurance policies is necessary:\nWriting information on newly issued policies Setting up policy-history cards Making out notices of premiums due Making registers of policies in force, lapsed, died,\netc , for purposes of valuation as required by\nlaw or good management Calculating \nand \ntabulating \npremium \nrates,\ndividend rates, reserve factors, etc Computing and tabulating expected and actual\ndeath rates; and much more All these operations can be done almost automatically by punch-card\nmachines ORIGIN AND DEVELOPMENT\nWhen a census of the people of a country is taken, a great quantity\nof sorting and counting is needed: by village, county, city, and state;\nby sex; by age; by occupation; etc In 1886, the census of the people\nof the United States which had been taken in 1880 was still being\nsorted and counted Among the men then studying census problems\nwas a statistician and inventor, Herman Hollerith He saw that\nexisting methods were so slow that the next census (1890) would not\nbe finished before the following census (1900) would have to be\nbegun He knew that cards with patterns of holes had been used in\nweaving patterns in cloth He realized that the presence or absence of\na property, for example employed or unemployed, could be\nrepresented by the presence or absence of a hole in a piece of paper An electrical device could detect the hole, he believed, since it would\nallow current to flow through, whereas the absence of the hole would\nstop the current He experimented with sorting and counting, using\npunched holes in cards, and with electrical devices to detect the holes\nand count them A definite meaning was given to each place in the\ncard where a hole might be punched Then electrical devices handled\nthe particular information that the punches represented These devices\neither counted or added, singly or in various combinations, as might\nbe desired More than 50 years of development of punch-card calculating\nmachinery have since then taken place Several large companies have\nmade quantities of punch-card machines A great degree of\ndevelopment has taken place in the punch-card machines of\nInternational Business Machines Corporation (IBM), and for this\nreason these machines will be the ones described in this chapter What is said here, however, may also in many ways apply to punch-\ncard machines made by other manufacturers—Remington-Rand,\nPowers, Control Instrument, etc GENERAL PRINCIPLES\nTo use punch-card machines, we first convert the original\ninformation into patterns of holes in cards Then we feed the cards\ninto the machines Electrical impulses read the pattern of holes and\nconvert them into a pattern of timed electrical currents Actually, the\n\n\nreading of a hole in a column of a punch card is done by a brush of\nseveral strands of copper wire pressed against a metal roller (Fig 1) The machine feeds the card (the bottom edge first, where the 9’s are\nprinted) with very careful timing over the roller; and, when the\npunched hole is between the brush and the roller, an electrical circuit\nbelonging to that column of the card is completed The machine\nresponds according to its general design and its wiring for the\nparticular problem: it punches new cards, or it prints new marks, or it\nputs information into new storage places Clerks, however, move the\ncards from one machine to another They wait on the machines, keep\nthe card feeds full, and empty the card hoppers as they fill up A\nhuman error of putting the wrong block of cards into a machine may\nfrom time to time cause a little trouble, especially in sorting Actually,\nin a year, billions of punch cards are handled precisely Fig 1 Reading of punch cards The \npunch \ncard \nis \na \nmasterpiece \nof \nengineering \nand\nstandardization Its exact thickness matches the knife-blade edges that\nfeed the cards into slots in the machines, and matches the channels\nwhereby these cards travel through the machines The standard card\nis 7⅜ inches long and 3¼ inches wide, and it has a standard thickness\nof 0 0065 inch and other standard properties with respect to stiffness,\nfinish, etc",
    "0065 inch and other standard properties with respect to stiffness,\nfinish, etc Fig 2 Scheme of standard punch card (Note: Positions 11 and 12 are not usually marked by printed numbers or\nletters )\nThe standard IBM punch card of today has 80 columns and 12\npositions for punching in each column (Fig 2) A single punched hole\nin each of the positions known as 0 to 9 stands for each of the digits 0\nto 9 respectively The remaining 2 single punch positions available in\nany column are usually called the 11 position and 12 position (though\nsometimes called the numerical X position and Y position) These two\npositions do not behave arithmetically as 11 and 12 Actually, in the\nspace between one card and the next card as they are fed through the\nmachines, more positions occur For example, there may be 4 more: a\n10 position preceding the 9, and a 13, a 14, and a 15 position\n\n\nfollowing the 12 The 16 positions in total correspond to a full turn,\n360°, of the roller under the brush, and to a complete cycle in the\nmachine; and a single position corresponds to ¹/₁₆ of 360°, or 22½° In\nsome machines, the total number of positions may be 20 A pair of\npunches stands for each of the letters of the alphabet, according to the\nscheme shown A\n12-1\nJ\n11-1   Unused\n0-1\nB\n12-2\nK\n11-2\nS\n0-2\nC\n12-3\nL\n11-3\nT\n0-3\nD\n12-4\nM\n11-4\nU\n0-4\nE\n12-5\nN\n11-5\nV\n0-5\nF\n12-6\nO\n11-6\nW\n0-6\nG\n12-7\nP\n11-7\nX\n0-7\nH\n12-8\nQ\n11-8\nY\n0-8\nI\n12-9\nR\n11-9\nZ\n0-9\nFor example, the word MASON is shown punched in Fig 3 Fig 3 Alphabetic punching Fig 4 Single-panel plugboard To increase the versatility of the machines and provide them with\ninstructions, many of them have plugboards (Fig",
    "To increase the versatility of the machines and provide them with\ninstructions, many of them have plugboards (Fig 4) These are\nstandard interchangeable boards filled with prongs on one side and\nholes or terminals called hubs on the other side The side with the\nprongs connects to the ends of electrical circuits in the punch-card\nmachine, which are brought together in one place for the purpose On\nthe other side of the board, using plugwires, we can connect the hubs\nto each other in different ways to produce different results The single-\npanel plugboard is 10 inches long and 5¾ inches wide It contains 660\nhubs in front and 660 corresponding prongs in the back A double-\npanel plugboard or a triple-panel plugboard applies to some\n\n\nmachines In less time than it takes to describe it, we can take one\nwired-up plugboard out of a machine and put in a new wired-up\nplugboard and thus change completely the instructions under which\nthe machine operates Many of the machines have a number of\ndifferent switches that we must also change, when going from one\nkind of problem to another The numbers that are stored or sorted in punch-card machines may\nbe of any size up to 80 digits, one in each column of the punch card In doing arithmetic (adding, subtracting, multiplying, and dividing),\nhowever, the largest number of digits is usually 10 Beyond 10 digits,\nwe can work out tricks in many cases TYPES OF PUNCH-CARD MACHINES\nThe chief IBM punch-card machines are: the key punch, the verifier,\nthe sorter, the interpreter, the reproducer, the collator, the multiplying\npunch, the calculating punch, and the tabulator Of these 9 machines,\nthe last 6 have plugboards and can do many different operations as a\nresult There is a flow of punch cards through each of these machines The machines differ from each other in the number and relation of the\npaths of flow, or card channels, and in the number and relation of the\nmomentary stopping places, or card stations, at which cards are read,\npunched, or otherwise acted on We can get a good idea of what a\nmachine is from a picture of these card channels Key Punch\nWe use a key punch (Fig 5) to punch original information into\nblank cards In the key punch there is one card channel; it has one\nentrance, one station, and one exit At the card station, there are 12\npunching dies, one for each position in the card column, and each card\ncolumn is presented one by one for punching The numeric keyboard\n(Fig 6) for the key punch has 14 keys:\nOne key for each of the punches 0 to 9, 11, and\n12,\nA space key, which allows a column of the punch\ncard to go by with no punch in it,\n\n\nA release key, which ejects the card and feeds\nanother card Fig 5 Key punch Fig 6 Keyboard of key punch Of course, in using a key punch, we must punch the same kind of\ninformation in the same group of columns For example, if these cards\nare to contain employees’ social security numbers, we must punch\nthat number always in the same card columns, numbered, say, 15 to\n23, or 70 to 78, etc Verifier\nThe verifier is really the same machine as the key punch, but it has\ndull punching dies moving gently instead of sharp ones moving with\nforce It turns on a red light and stops when there is no punched hole\nin the right spot to match with a pressed key Sorter\nThe sorter is a machine for sorting cards, one column at a time\n(Fig 7) The sorter has a card channel that forks; it has one entrance,\none station, and 13 exits Each exit corresponds to: one of the 12\npunch positions 0 to 9, 11, and 12; or reject, which applies when the\ncolumn is nowhere punched It has one card station where a brush\nreads a single column of the card We can turn a handle and move the\nbrush to any column Fig 7 Sorter Interpreter\nThe interpreter takes in a card, reads its punches, prints on the\ncard the marks indicated by the punches, and stacks the card We call\n\n\nthis process interpreting the card, since it translates the punched holes\ninto printed marks The interpreter (Fig 8) has one card channel, with\none entrance, 2 card stations, and one exit What the machine does at\nthe second card station depends on what the machine reads at the first\ncard station and on what we have told the machine by switches and\nplugboard wiring to do Fig 8 Interpreter Reproducer\nThe reproducer or reproducing punch can:\nReproduce, or copy the punches in one group of\ncards into another group of cards (in the same\nor different columns) Compare, or make sure that the punches in two\ngroups of cards agree (and shine a red light if\nthey do not) Gang punch, or copy the punches in a master card\ninto a group of detail cards Summary punch, or copy totals or summaries\nobtained in the tabulator into blank cards in\nthe reproducer Fig 9 Reproducer The reproducer (Fig 9) has 2 independent card channels, the cards\nnot mingling in any way, called the reading channel and the punching\nchannel We can run the machine with only the punching channel\nworking; in fact, IBM equips some models only with the punching\nchannel, particularly for “summary punch” operation The machine is\ntimed so that, when any card is at the middle station in either\nchannel, then the next preceding card is at the latest station, and the\nnext following card is at the earliest station At 5 stations, the\nmachine reads a card At the middle station of the punching channel,\nthe machine punches a card Using a many-wire cable, we can connect\n\n\nthe tabulator to the reproducer and so cause the tabulator to give\ninformation electrically to the reproducer This connection makes\npossible the “summary punch” operation Here is an instance with\npunch-card machines where, in order to transfer information from one\nmachine to another, we are not required to move cards physically\nfrom one machine to another Collator\nThe collator is a machine that arranges or collates cards It is\nparticularly useful in selecting, matching, and merging cards The\ncollator (Fig 10) has 2 card channels which join and then fork into 4\nchannels ending in pockets called Hoppers 1, 2, 3, and 4 The 2 card\nfeeds are called the Primary Feed and the Secondary Feed Cards from\nthe Primary Feed may fall only into the first and second hoppers Cards from the Secondary Feed may fall only into the second, third,\nand fourth hoppers The collator has 3 stations at which cards may be\nread No 1—Selected primaries\nNo 2—Merged cards and unselected primaries\nNo 3—Separate secondaries not selected\nNo 4—Selected secondaries\nFig 10 Collator IBM can supply additional wiring called the collator counting device With this we can make the collator count cards as well as compare\nthem For example, we could put 12 blank cards from the Secondary\nFeed behind each punched-card from the Primary Feed in order to\nprepare for some other operation Calculating Punch\nThe calculating punch was introduced in 1946",
    "Calculating Punch\nThe calculating punch was introduced in 1946 It is a versatile\nmachine of considerable capacity It adds, subtracts, multiplies, and\ndivides It also has a control over a sequence of operations, in some\ncases up to half a dozen steps This machine (Fig 11) has one card channel with 4 stations called,\n\n\nrespectively, control brushes, reading brushes, punch feed, and punching\ndies At station 1, there are 20 brushes; we can set these by hand to\nread any 20 of the 80 card columns At station 2 there are 80 regular\nreading brushes At station 3 the card waits for a part of a second\nwhile the machine calculates, and, when that is done, the card is fed\ninto station 4, where it is punched or verified The multiplying punch\nis an earlier model of the calculating punch, without the capacity for\ndivision The multiplying punch\nis an earlier model of the calculating punch, without the capacity for\ndivision Fig 11 Calculating punch Calculating punch Tabulator\nThe tabulator can select and list information from cards Also, it\ncan total information from groups of cards in counters of the tabulator\nand can print the totals Fig 12 Tabulator The tabulator (Fig 12) has one card channel with two stations\nwhere cards may be read, called the Upper Brushes and Lower Brushes When the Lower Brush station is reading one card, the Upper Brush\nstation is reading the next card The tabulator also has another\nchannel, which is for endless paper (and sometimes separate sheets or\ncards) This channel has one station; here printing takes place Unlike\nthe typewriter, the tabulator prints a whole row at a time It can print\nup to 88 numerals or letters across the sheet in one stroke The cards\nflowing through the card channel and the paper flowing through the\npaper channel do not have to move in step; in fact, we need many\ndifferent time relations between them, and the number of rows\nprinted on the paper may have almost any relation to the number of\npunch cards flowing through the card channel At the station where paper is printed, we can put on the machine a\nmechanism called the automatic carriage This is like a typewriter\ncarriage, which holds the paper for a typewriter, but we can control\nthe movement of paper through the automatic carriage by plugboard\nwiring, switch settings, and holes in punch cards Thus we can\narrange for headings, spacing, and feeding of new sheets to be\n\n\ncontrolled by the information and the instructions, with a great deal\nof versatility HANDLING INFORMATION\nWe have now described briefly the chief available punch-card\nmachines as of the middle of 1948 The next question is: How do we\nactually get something done by means of punch cards Let us go back\nto the census example, even though it may not be a very typical\nexample, and see what would be done if we wished to compile a\ncensus by punch cards The first thing we do is plan which columns of the punch card will\ncontain what information about the people being counted For\nexample, the following might be part of the plan:\nInformation\nNo of Possibilities   Columns\nState\n60 \n1-2\nCounty\n1,000 \n3-5\nTownship\n10,000 \n6-9\nCity or village\n10,000 \n10-13\nSex\n2 \n14\nAge last birthday\n100 \n15-16\nOccupation\n100,000 \n17-21 Under the heading state, we know that there are 48 states, the\nDistrict of Columbia, and several territories and possessions—all told,\nperhaps 60 possibilities So, 2 punch-card columns are enough: they\nwill allow 100 different sets of punches from 00 to 99 to be put in\nthem We then assign the code 00 to Maine, 01 to New Hampshire, 02\nto Vermont, etc , or we might assign the code 00 to Alabama, 01 to\nArizona, 02 to Arkansas, etc —whichever would be more useful Under the other headings, we do the same thing: count the\npossibilities; assign codes In this case, it will be reasonable to use\nnumeric codes 0 to 9 in each column in all places because we shall\nhave millions of cards to deal with and numeric codes can be sorted\n\n\nfaster than alphabetic codes Alphabetic codes require 2 punched\nholes in each column, and sorting any column takes 2 operations The punch cards are printed with the chosen headings We set up\nthe codes in charts and give them to clerks Using key punches and\nverifiers, they punch up the cards and check them They work from\nthe original information collected by the census-taker in the field Since the original information will come in geographically, probably\nonly one geographic code at a time will be needed, and it will be\nsimple to keep track of As to occupation, however, it may be useful to\nassign other clerks full-time to examining the original information and\nspecifying the right code for the occupation Then the clerks who do\nthe punching will have only copying to do The great bulk of the work with the census will be sorting,\ncounting, and totaling The original punch cards will be summarized\ninto larger and larger groups For example, the cards for all males age\n23 last birthday living in the state of Massachusetts are sorted\ntogether This group of cards may be put into a tabulator wired to a\nsummary punch When the tabulator has counted the last card of this\ngroup, the summary punch punches one card, showing the total\nnumber in this group Some time later a card like this will be ready\nfor every state Then the whole group of state cards may be fed into\nthe tabulator wired to the reproducer acting as summary punch When\ntotaled, the number of males age 23 last birthday in the United States\nwill be punched into a single card After more compiling, a card like\nthis will be ready for all males in the United States at each age Then\nthis group of cards may be fed into the tabulator wired to the\nsummary punch Each card may be listed by the tabulator on the\npaper flowing through it, showing the age and the number of males\nliving at that age At the end of the listing, the tabulator will print the\ntotal number of all males in the list, and the summary punch will\npunch a card containing this total ARITHMETICAL OPERATIONS\nPunch-card machines can perform the arithmetical operations of\ncounting, adding, subtracting, multiplying, dividing, and rounding off Counting\n\n\nCounting can be done by the sorter, the tabulator, and the collator The tabulator can print the total count The tabulator and summary\npunch wired together can put the total count automatically into\nanother punch card The sorter shows the count in dials Adding and Subtracting\nAdding and subtracting can be done by the tabulator, the\ncalculating punch, and the multiplying punch In the calculating and\nmultiplying punches, the sum or difference is usually punched into the\nsame card from which the numbers were first obtained The tabulator,\nhowever, obtains the result first in a counter; from the counter, it can\nbe printed on paper or punched into a blank card with the aid of the\nsummary punch Numbers are handled as groups of decimal digits, and the\nmachines mirror the properties of digits in the decimal system Negative numbers are usually handled as complements (see\nSupplement 2) For example, if we have in the tabulator a counter\nwith a capacity of six digits, the number-000013 is stored in the\ncounter as the complement 999987 We cannot store in the counter\nthe number +999987, since we cannot distinguish it from-000013 In\nother words, if a counter is to be used for both positive and negative\nnumbers, its capacity is actually one digit less, since in the last\ndecimal place on the left 0 will mean positive and 9 will mean\nnegative Multiplying and Dividing\nMultiplying is done in the calculating and multiplying punches In\nboth cases, the multiplication table is built into the circuits of the\nmachine, and the system of left-hand components and right-hand\ncomponents is used (see Supplement 2) Dividing is done in the calculating punch and is carried out in that\nmachine much as in ordinary arithmetic By means of an estimating\ncircuit the calculating punch guesses what multiple of the divisor will\ngo into the dividend Then it determines that multiple and tries it Rounding Off\n\n\nRounding off may be done in 3 punch-card machines, the\ncalculating and multiplying punches, and the tabulator For example,\nsuppose we have the numbers 49 1476, 68 5327, and we wish to\nround them off to 2 decimal places The results will be 49 15 and\n68 53 For the first number, we raise the 0076, turning 1476 into 15, since 0076 is more than 005 For the second number, we drop\nthe 0027 since it is less than 005 Each of these punch-card machines provides what is called a 5\nimpulse in each machine cycle When the number is to be rounded off,\nthe 5 impulse is plugged into the first decimal place that is to be\ndropped, and it is there added If the figure in the decimal place to be\ndropped is 0 to 4, the added 5 makes no difference in the last decimal\nplace that is to be kept But, if the figure in the decimal place to be\ndropped is 5 to 9, then the added 5 makes a carry into the last\ndecimal place that is to be kept, increasing it by 1, and this is just\nwhat is wanted for rounding off LOGICAL OPERATIONS\nPunch-card machines do many operations of reasoning or logic\nthat do not involve addition, subtraction, multiplication, or division Just as we can write equations for arithmetical operations, so we can\nwrite equations for these logical operations using mathematical logic\n(see Chapter 9 and Supplement 2) If any reader, however, is not\ninterested in these logical equations, he should skip each paragraph\nthat begins with “in the language of logic,” or a similar phrase Translating\nReading and writing are operations perhaps not strictly of\nreasoning but of translating from one language to another Basically\nthese operations take in a mark in one language and give out a mark\nwith the same meaning in another language For example, the\ninterpreter takes in punched holes and gives out printed marks, but\nthe holes and the marks have the same meaning The major part of sorting is done by a punch-card sorting machine\nand can be considered an operation of translating In sorting a card,\nthe machine takes in a mark in the form of a punched hole on a punch\ncard and specifies a place bearing the same mark where the card is\n\n\nput The remaining part of sorting is done by human beings This part\nconsists of picking up blocks of cards from the pockets of the sorter\nand putting the blocks together in the right sequence",
    "This part\nconsists of picking up blocks of cards from the pockets of the sorter\nand putting the blocks together in the right sequence Comparing\nFig 13 Comparer The first operation of reasoning done by punch-card machines is\ncomparing For an example of comparing in the operation of the\ntabulator, let us take instructing the machine when to pick up a total\nand print it As an illustration, suppose that we are making a table by\nstate, county, and township of the number of persons counted in a\ncensus Suppose that for each township we have one punch card\ntelling the total number of persons If all the cards are in sequence,\nthen, whenever the county changes, we want a minor total, and,\nwhenever the state changes, we want a major total What does the\nmachine do The tabulator has a mechanism that we shall call a comparer (Fig The tabulator has a mechanism that we shall call a comparer (Fig 13) A comparer has 2 inputs that may be called Previous and Current\nand one output that may be called Unequal The comparer has the\nproperty of giving out an impulse if and only if there is a difference\nbetween the 2 inputs In the language of the algebra of logic (see Supplement 2 and\nChapter 9), let the pieces of information coming into the comparer be\na and b, and let the information coming out of the comparer be p Then the equation of the comparer is:\np = T(a ≠ b)\nwhere “T (···)” is “the truth value of ···” and “···” is a statement, and\nwhere the truth value is 1 if true and 0 if false In wiring the tabulator so that it can tell when to total, we use the\ncomparer We feed into it the county from the current card and the\ncounty from the previous card Out of the comparer we get an impulse\nif and only if these two pieces of information are different This is just\nwhat happens when the county changes The impulse from the\ncomparer is then used in further wiring of the tabulator: it makes the\n\n\ncounter that is busy totaling the number of persons in the county print\nits total and then clear In the same way, another comparer, which\nwatches state instead of county, takes care of major totals when the\nstate changes Selecting\nThe next operation of reasoning which punch-card machines can\ndo is selecting The tabulator, collator, interpreter, reproducer, and\ncalculating punch all may contain mechanisms that can select\ninformation These mechanisms are called selectors For example, suppose that we are using the tabulator to make a\ntable showing for each city the number of males and the number of\nfemales In the table we shall have three columns: first, city; second,\nmales; third, females Suppose that each punch card in columns 30 to\n36 shows the total of males or females in a city Suppose that, if and\nonly if the card is for females, it has an X punch (or 11 punch) in\ncolumn 79 What do we want to have happen",
    "What do we want to have happen We want the number\nin columns 30 to 36 to go into the second column of the table if there\nis no X in column 79, and we want it to go into the third column of\nthe table if there is an X in column 79 This is just another way of\nsaying that we want the number to go into the males column if it is a\nnumber of males, and into the females column if it is a number of\nfemales We make this happen by using a selector A selector (Fig 14) is a mechanism with 2 inputs and 2 outputs The 2 inputs are called X Pickup and Common The 2 outputs are\ncalled X and No X The X Pickup, as its name implies, watches for X’s The Common takes in information What comes out of X is what goes\ninto Common if and only if an X punch is picked up; otherwise\nnothing comes out What comes out of No X is what goes into\nCommon if and only if an X punch is not picked up; otherwise nothing\ncomes out From the point of view of ordering punch-card equipment,\nwe should note that there are two types of selectors: X selectors or X\ndistributors, which have a selecting capacity of one column—that is,\none decimal digit—and class selectors, which ordinarily have a\nselecting capacity of 10 columns or 10 decimal digits But we shall\ndisregard this difference here, as we have disregarded most other\nquestions of capacity in multiplication, division, etc Fig 14 Selector In the language of logic (see Chapter 9 and Supplement 2), if p, a,\nb, c are the information in X Pickup, Common, X, and No X,\nrespectively, then the equations for a selector are:\nb = a·p\nc = a·(1 - p)\nReturning now to the table we wish to make, we connect columns\n30 to 36 of the punch card to Common We connect column 79 of the\npunch card to the X Pickup We connect the output No X to the males\ncolumn of the table We connect the output X to the females column\nof the table In this way we make the number in the punch card\nappear in either one of two places in the table according to whether\nthe number counts males or females We might mention several more properties of selectors A selector\ncan be used in the reverse way, with X Pickup, X, and No X as inputs\nand Common as output (Fig 15) What will come out of Common is\n(1) what goes into input No X if there is no X punch in the column to\nwhich input X Pickup is wired, and (2) what goes into input X if there\nis an X punch in the column to which input X Pickup is wired In this case the logical equation for the selector is:\na = bp + c(1 - p)\nAlso, selectors can be used one after another, so that selecting based\non 2 or 3 X punches can be made",
    "In this case the logical equation for the selector is:\na = bp + c(1 - p)\nAlso, selectors can be used one after another, so that selecting based\non 2 or 3 X punches can be made Fig 15 Selector In the language of logic, if p, q, r are the truth values of “there is\nan X punch in column i, j, k,” respectively, then by means of selectors\nwe can get such a function as:\nc = apq + b(1 - q)(1 - r)\nAlso, a selector may often be energized not only by an X punch but\nalso by a punch 0, 1, 2, ···, 9 and 12 In this case, the selector is\n\n\nequipped with an additional input that can respond to any digit This\ninput is called the Digit Pickup Digit Selector\nSomething like an ordinary selector is another mechanism called a\ndigit selector (Fig 16) This has one input, Common, and 12 outputs, 0,\n1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12 This mechanism is often included in the\ntabulator and may be included in other punch-card machines For\nexample, suppose that we want to do something if and only if column\n62 of a punch card contains a 3 or a 4 or a 9 Then we connect a\nbrush that reads column 62 of the punch card to the Common input of\nthe digit selector And we connect out from the digit selector jointly\nfrom outputs 3, 4, and 9 Fig 16 Digit selector In the language of logic, if a is the digit going into Common, and if\np is the impulse coming out of the digit selector, then the equation of\nthe mechanism in this case is:\np = T(a = 3, 4, 9)\nSequencer\nA fourth operation of reasoning done by punch-card machines is\nfinding that one number is greater than, or equal to, or less than\nanother This operation is done in the collator and may be called\nsequencing For example, suppose that we have a file of punch cards\nfor cities, showing in columns 41 to 48 the number of people Suppose\nthat we wish to pick out the cards for cities over 125,000 in\npopulation Now the collator has a mechanism that has 2 inputs and 3\noutputs (Fig 17) We may call this mechanism a sequencer, since it\ncan tell the sequence of two numbers What goes into the Primary\ninput is a number: let us call it a What goes into Secondary is another\nnumber: let us call it b An impulse comes out of Low Primary if a is\nless than b An impulse comes out of Equal if a equals b An impulse\ncomes out of Low Secondary if a is greater than b",
    "An impulse\ncomes out of Low Secondary if a is greater than b Fig 17 Sequencer In the language of logic, if p, q, r are the three indications in Low\nPrimary, Equal, and Low Secondary, then:\np = T(a < b)\nq = T(a = b)\nr = T(a > b)\nReturning to our example, we punch up a card with 125,000 in\ncolumns 43 to 48, and we put this card into the Secondary Feed We\ntake the punch cards for cities and put them into the Primary Feed In\nthe plugboard, we connect the hubs of the Secondary Brushes (that\nread the card in the Secondary Feed), columns 43 to 48, to the\nSecondary input of the Sequencer We connect the hubs of the\nPrimary Brushes (that read the card in the Primary Feed), columns 41\nto 48, to the Primary input of the Sequencer Then we connect the\nLow Primary output of the Sequencer to a device that causes the city\ncard being examined to fall into pocket 1 We connect Equal output\nand Low Secondary output to a device that causes the city card being\nexamined to fall into pocket 2 Then, when the card for any city\ncomes along, the machine compares the number of people in the city\nwith 125,000 If the number is greater than 125,000, the card will fall\ninto pocket 1; otherwise the card will fall into pocket 2 At the end of\nthe run, we shall find in pocket 1 all the cards we want NEW DEVELOPMENTS\nWe may expect to see over the next few years major developments\nin punch-card machinery It would seem likely that types of punch-\ncard machines like the following might be constructed:\nA \npunch-card \nmachine \nthat \nperforms \nany\narithmetical or logical operation at high speed\nand may perform a dozen such operations in\nsequence during the time that a punch card\npasses through the machine A punch-card machine that uses loops of punched\npaper tape, which express either a sequence of\nvalues in a table that the machine can consult\n\n\nor a sequence of instructions that govern the\noperations of the machine Punch-card machinery that uses a larger card than\nthe 80-column card A punch-card machine that may have a fairly\nlarge amount of internal memory, perhaps 30\nor 40 registers where numbers or words may\nbe stored and referred to SPEED\nThe speed of various operations with present IBM punch-card\nmachines is about as shown in the table Machine\n  Operation\nTime in Seconds\nKey punch\nPunch 80 columns\nAbout 20 to 40\nVerifier\nCheck 80 columns\nAbout 20 to 40\nSorter\nSort 1 card on 1 column\n 0 15\nInterpreter\nPrint 1 line\n0 8\nReproducer\nReproduce a card, all 80 columns\n0 6\nCollator\nMerge 2 cards\n 0 25\nMultiplying punchMultiply by 8 digits\n5 6\nCalculating punchAdd\n0 3\nCalculating punchMultiply by 8 digits\n3 6\nCalculating punchDivide, obtaining 8 quotient digits\n9 0\nTabulator\nPrint 1 line, numbers only\n0 4\nTabulator\nPrint 1 line, letters included\n 0 75\nTabulator\nAdd numbers from 1 card\n0 4\nCOST\nPunch-card machines may be either rented or purchased from\n\n\nsome manufacturers but only rented from others If we take the cost\nof a clerk as $120 to $150 a month, the monthly rent of most punch-\ncard machines ranges from ⅒ of the cost of a clerk for the simplest\ntype of machine, such as a key punch, to 3 times the cost of a clerk for\na complicated and versatile type of machine, such as a tabulator with\nmany attachments The rental basis is naturally convenient for many\nkinds of jobs RELIABILITY\nThe reliability of work with punch cards and punch-card machines\nis often much better than 99 per cent: in 10,000 operations, failures\nshould be less than 2 or 3 This is, of course, much better than with\nclerical operations There are a number of causes for machine or card failures Sometimes cards may be warped and may not feed into the machines\nproperly Or, the air in the room may be very dry, and static\nelectricity may make the cards stick together Or, the air may be too\nhumid; the cards may swell slightly and may jam in the machine A\npunch may get slightly out of true alignment, and punches in the\ncards may be slightly off A relay may get dust on its contact points\nand, from time to time, fail to perform in the right way Considerable\nengineering effort has been put into remedying these and other\ntroubles, with much success To make sure that we have correct results from human beings\nworking with punch-card machines, we may verify each process Information that is punched on the key punch may be verified on the\nverifier",
    "Information that is punched on the key punch may be verified on the\nverifier Multiplications done with multiplicand a and multiplier b\nmay be repeated and compared with multiplications done with\nmultiplicand b and multiplier a Cards that are sorted on the sorter\nmay be put through the collator to make sure that their sequence is\ncorrect It is often good to plan every operation so that we have a\nproof that the result is right It is standard practice to have the machines inspected regularly in\norder to keep them operating properly On the average, for every 50\nto 75 machines, there will be one full-time service man maintaining\nthem and taking care of calls for repairs Of course, as with any\nmachinery, some service calls will be a result of the human element;\n\n\nfor example, a problem may have been set up wrongly on a machine GENERAL USEFULNESS\nPunch-card calculations are much faster and more accurate than\nhand calculations With punch cards, work is organized so that all\ncases are handled at the same time in the same way This process is\nvery different from handling each case separately from start to finish As soon as the number of cases to be handled is more than a hundred\nand each item of information is to be used five or more times, punch\ncards are likely to be advantageous, provided other factors are\nfavorable Vast quantities of information have been handled very\nsuccessfully by punch-card machines Over 30 scientific and\nengineering laboratories in the United States are doing computation\nby punch cards Over a billion punch cards, in fact, are used annually\nin this country",
    "Over a billion punch cards, in fact, are used annually\nin this country Chapter 5\nMEASURING:\nMASSACHUSETTS INSTITUTE OF TECHNOLOGY’S\nDIFFERENTIAL ANALYZER NO 2\nIn the previous chapter we talked about machines that move\ninformation expressed as holes in cards In this chapter we shall talk\nabout machines that move information expressed as measurements ANALOGUE MACHINES\nA simple example of a device that uses a measurement to handle\ninformation is a doorpost Here the height of a child may be marked\nfrom year to year as he grows (Fig 1) Or, suppose that we have a\nglobe of the world and wish to find the shortest path between Chicago\nand Moscow We may lay a piece of string on the globe, pull it tight\nbetween those points, and then measure the string on a scale to see\nabout what distance it shows (Fig We may lay a piece of string on the globe, pull it tight\nbetween those points, and then measure the string on a scale to see\nabout what distance it shows (Fig 2) 2) Machines that handle information as measurements of physical\nquantities are called analogue machines, because the measurement is\nanalogous to, or like, the information A common example of analogue\nmachine is the slide rule With this we calculate by noting the\npositions of ruled lines on strips that slide by each other These strips\nare made of fine wood, or of plastic, or of steel, in such fashion that\nthe ruled lines will hold true positions and not warp If we space the\nrulings so that 1, 2, 3, 4, 5, 6 ··· are equally spaced, then the slide rule\nis useful for addition (Fig 3) But if we space the rulings so that\npowers (for example, powers of two—1, 2, 4, 8, 16, 32 ···) (Fig 4) are\nequally spaced, we can do multiplication The spacings are then\naccording to the logarithms of numbers (see Supplement 2) Multiplication is more troublesome than addition, and so more slide\nrules are made for multiplication than for addition",
    "Multiplication is more troublesome than addition, and so more slide\nrules are made for multiplication than for addition Fig 1 Measurement by doorpost Fig 2 Measurement by string Fig 3 Slide Rule for adding Slide Rule for adding Fig 4 Slide Rule for multiplying During World War II, the aiming and firing of guns against hostile\nplanes was done by machine After sighting a plane, these machines\nautomatically calculated how to direct fire against it They were much\nbetter and faster than any man These fire-control instruments were\nanalogue machines with steel and electrical parts built to fine\ntolerances With care we can get accuracy of 1 part in 10,000 with\nanalogue machines, but greater accuracy is very hard to get PHYSICAL QUANTITIES\nSuppose that we wish to make an analogue machine We need to\nrepresent information by a measurement of something What should\nwe select What physical thing to be measured should we choose to\nput into the machine Different amounts of this physical quantity will\nmatch with different amounts of the measurement being expressed In\nthe case of the doorpost, the string, and the slide rule, the physical\nquantity is distance In many fire-control instruments, the physical\nquantity is the amount of turning of a shaft (Fig 5) 5) Many other\nphysical quantities have from time to time been used in analogue\nmachines, such as electrical measurements The speedometer of an\nautomobile tells distance traveled and speed It is an analogue\nmachine It uses the amount of turning of a wheel, and some electrical\nproperties It handles information by means of measurements The\n\n\nbasic physical quantity that it measures is the amount of turning of a\nshaft Fig 5 Measurement by amount of turning of a shaft DIFFERENTIAL ANALYZER\nThe biggest and cleverest mechanical brain of the analogue type\nwhich has yet been built is the differential analyzer finished in 1942 at\nMassachusetts Institute of Technology in Cambridge, Mass The\nfundamental physical quantity used in this machine is the amount of\nturning of a shaft The name analyzer means an apparatus or machine\nfor analyzing or solving problems It happens that the word “analyzer”\nhas been used rather more often in connection with analogue\nmachines, and so in many cases the word “analyzer” carries the\nmeaning “analogue” as well The word “differential” in the phrase\n“differential analyzer” refers to the main purpose of the machine: it is\nspecially adapted for solving problems involving differential equations Now what is a differential equation DIFFERENTIAL EQUATIONS\nIn order to explain what a differential equation is, we need to use\ncertain ideas These ideas are: equation; formula; function; rate of\nchange; interval; derivative; and integral In the next few paragraphs, we\nshall introduce these ideas briefly, with some explanation and\nexamples It is entirely possible for anyone to understand these ideas\nrather easily, by collecting true statements about them; no one should\nfeel that because these ideas may be new they cannot be understood\nreadily PHYSICAL PROBLEMS\nIn physics, chemistry, mechanics, and other sciences there are\nmany problems in which the behavior of distance, of time, of speed,\nheat, volume, electrical current, weight, acceleration, pressure, and\nmany other physical quantities are related to each other Examples of\nsuch problems are:\n\n\nFig 6 Paths of a shot from a gun, trajectories What are the various angles to which a gun should\nbe raised in order that it may shoot various distances (See Fig 6 ) (The paths of a shot from a gun are called\ntrajectories )\nIf a plane flies in a direction always at the same\nangle from the north, how much farther will it travel\nthan if it flew along the shortest path (See Fig 7 ) (A\npath always at the same angle from the north is called a\nloxodrome, and a shortest path on a globe is called a\ngreat circle )\nHow should an engine be designed so that it will\nhave the least vibration when it moves fast In physical problems like these, the answer is not a single number\nbut a formula What we want to do in any one of these problems is\nfind a formula so that any one of the quantities may be calculated,\ngiven the behavior of the others For example, here is a familiar\nproblem in which the answer is a formula and not a number:\nFig 7 Paths of a flight Fig 8 Room formulas How are the floor area of a room, its length, and its width related\nto each other",
    "How are the floor area of a room, its length, and its width related\nto each other (See Fig 8 )\nThe answer is told in any one of three equations:\n(floor area) equals (length) times (width)\n(length) equals (floor area) divided by (width)\n\n\n(width) equals (floor area) divided by (length)\nThe first equation shows that the floor area depends on the length\nof the room and also on the width of the room So we say floor area is\na function of length and width This particular function happens to be\nproduct, the result of multiplication In other words, floor area is equal\nto the product of length and width Now there is another kind of function called a differential function\nor derivative A differential function or derivative is an instantaneous rate\nof change An instantaneous rate of change is the result of two steps:\n(1) finding a rate of change over an interval and then (2) letting the\ninterval become smaller and smaller indefinitely For example,\nsuppose that we have the problem:\nHow are speed, distance, and time related to each\nother One of the answers is:\n(speed) equals the instantaneous rate of\nchange of (distance) with respect to (time)\nOr we can say, and it is just the same thing in other words:\n(speed) equals the derivative of (distance) with\nrespect to (time)\nNow we can tell what a differential equation is It is simply an\nequation in which a derivative occurs, such as the last example Perhaps the commonest kind of equation in physical problems is the\ndifferential equation SOLVING PHYSICAL PROBLEMS\nNow we were able to change the equation about floor area into\nother forms, if we wanted to find length or width instead of floor area When we did this, we ran into the inverse or opposite of\nmultiplication: division In the same way, we can change the equation about speed into\nother forms, if we want to find distance or time instead of speed If we\ndo this, we run into a new idea, the inverse or opposite of the\nderivative, called integral The two new equations are:\n(distance) equals the integral of (speed) with\n\n\nrespect to (time)\n(time) equals the integral of [one divided by\n(speed)] with respect to (distance)\nThese equations may also be called differential equations An integral is the result of a process called integrating To integrate\nspeed and get distance is the result of three steps: (1) breaking up an\ninterval of time into a large number of small bits, (2) adding up all the\nsmall distances that we get by taking each bit of time and multiplying\nby the speed which applied in that bit of time, and (3) letting the bits\nof time get smaller and smaller, and letting the number of them get\nlarger and larger, indefinitely In other words,\n(total distance) equals the sum of all the small\n(distances), each equal to: a bit of (time) multiplied\nby the (speed) applying to that bit\nThis is another way of saying as before,\n(distance) equals the integral of (speed) with\nrespect to (time)\nTo solve a differential equation, we almost always need to integrate\none or more quantities ORIGIN AND DEVELOPMENT OF THE\nDIFFERENTIAL ANALYZER\nFor at least two centuries, solving differential equations to answer\nphysical problems has been a main job for mathematicians Mathematics is supposed to be logical, and perhaps you would think\nthis would be easy But mathematicians have been unable to solve a\ngreat many differential equations; only here and there, as if by\naccident, could they solve one So they often wished for better\nmethods in order to make the job easier A British mathematician and physicist, William Thomson (Lord\nKelvin), in 1879 suggested solving differential equations by a\nmachine He went further: he described mechanisms for integrating\nand other mathematical processes, and how these mechanisms could\nbe connected together in a machine No such machine was then built;\n\n\nengineering in those years was not equal to it In 1923, a machine of\nthis type for solving the differential equations of trajectories was\nproposed by L",
    "In 1923, a machine of\nthis type for solving the differential equations of trajectories was\nproposed by L Wainwright Wainwright In 1925, at Massachusetts Institute of Technology, the problem of\na machine to solve differential equations was again being studied by\nDr In 1925, at Massachusetts Institute of Technology, the problem of\na machine to solve differential equations was again being studied by\nDr Vannevar Bush and his associates Dr Bush experimented with\nmechanisms that would integrate, add, multiply, etc , and methods of\nconnecting them together in a machine A major part of the success of\nthe machine depended on a device whereby a very small turning force\nwould do a rather large amount of work He developed a way in\nwhich the small turning force, about as small as a puff of breath,\ncould be used to tighten a string around a drum already turning with\na considerable force, and thus clutch the drum, bring in that force,\nand do the work that needed to be done You may have watched a\nship being loaded, seen a man coil a rope around a winch, and\nwatched him swing a heavy load into the air by a slight pull on the\nrope (Fig 9) 9) If so, you have seen this same principle at work The\nturning force (or torque) that pulls on the rope is greatly increased (or\namplified) by such a mechanism, and so we call it a torque amplifier Fig 9 Increasing turning force;\nwinch, or torque amplifier",
    "Increasing turning force;\nwinch, or torque amplifier By 1930, Dr Bush and his group had finished the first differential\nanalyzer It was entirely mechanical, having no electrical parts except\nthe motors It was so successful that a number of engineering schools\nand manufacturing businesses have since then built other machines of\nthe Bush type Each time, some improvements were made in accuracy\nand capacity for solving problems But, if you changed from one\nproblem to another on this type of machine, you had to do a lot of\nwork with screwdrivers and wrenches You had to undo old\nmechanical connections between shafts and set up new ones Accordingly, in 1935, the men at MIT started designing a second\ndifferential analyzer In this one you could make all the connections\nelectrically MIT finished its second differential analyzer in 1942, but the fact\nwas not published during World War II, for the machine was put to\nwork on important military problems In fact, a rumor spread and was\n\n\nnever denied that the machine was a white elephant and would not\nwork The machine was officially announced in October 1945 It was\nthe most advanced and efficient differential analyzer ever built It was\nthe most advanced and efficient differential analyzer ever built We\nshall talk chiefly about it for the rest of this chapter A good technical\ndescription of this machine is in a paper, “A New Type of Differential\nAnalyzer,” by Vannevar Bush and Samuel H Caldwell, published in\nthe Journal of the Franklin Institute for October 1945 GENERAL ORGANIZATION OF\nMIT DIFFERENTIAL ANALYZER NO 2\nA differential analyzer is basically made up of shafts that turn When we set up the machine to solve a differential equation, we\nassign one shaft in the machine to each quantity referred to in the\nequation It is the job of that shaft to keep track of that quantity The\ntotal amount of turning of that shaft at any time while the problem is\nrunning measures the size of that quantity at that time If the quantity\ndecreases, the shaft turns in the opposite direction For example, if we\nhave speed, time, and distance in a differential equation, we label one\nshaft “speed,” another shaft “time,” and another shaft “distance ” If\nwe wish, we may assign 10 turns of the “time” shaft to mean “one\nsecond,” 2 turns of the “distance” shaft to mean “one foot,” and 4\nturns of the “speed” shaft to mean “one foot per second ” These are\ncalled scale factors We could, however, use any other convenient units\nthat we wished",
    "We could, however, use any other convenient units\nthat we wished By just looking at a shaft or a wheel, we can tell what part of a full\nturn it has made—a half, or a quarter, or some other part—but we\ncannot tell by looking how many full turns it has made In the\nmachine, therefore, there are mechanisms that record not only full\nturns but also tenths of turns These are called counters We can\nconnect a counter to any shaft When we want to know some quantity\nthat a shaft and counter are keeping track of, we read the counting\nmechanism The second differential analyzer, which MIT finished in 1942,\nwent a step further than any previous one In this machine, a varying\nnumber can be expressed either (1) mechanically as the amount of\nturning of a shaft, or (2) electrically as the amount of two voltages in a\npair of wires The MIT men did this by means of a mechanism called\nan angle-indicator Angle indicators have essentially three parts: a transmitter, a\nreceiver, and switches The transmitter (Fig 10) can sense the exact\namount that a shaft has turned and give out a voltage in each of two\nwires which tells exactly how much the shaft has turned (Fig 11) The\nreceiving device (Fig 12), which has a motor, can take in the voltages\nin the two wires and drive a second shaft, making it turn in step with\nthe first shaft By means of the switchboard (Fig 13), the two wires\nfrom the transmitter of any angle-indicator can lead anywhere in the\nmachine and be connected to the receiver of any other angle\nindicator Fig 10",
    "10 Scheme of angle-indicator transmitter Fig 11 Indication of angle Fig 12 12 Scheme of angle-indicator receiver In a differential analyzer, we can connect the shafts together in\nmany different ways For example, suppose that we want one shaft b\nto turn twice as much as another shaft a For this to happen we must\nhave a mechanism that will connect shaft a to shaft b and make shaft\nb turn twice as much as shaft a We can draw the scheme of this\nmechanism in Fig 14: a box, standing for any kind of simple or\ncomplicated mechanism; a line going into it, standing for input of the\nquantity a; a line going out of it, standing for output of the quantity b;\nand a statement saying that b equals 2a Fig 13 Switchboard One mechanism that will make shaft b turn twice as much as shaft\na is a pair of gears such that: (1) they mesh together and (2) the gear\non shaft a has twice as many teeth as the gear on shaft b (Fig 15) 15) On\n\n\nthe mechanical differential analyzer that MIT finished in 1930, a pair\nof gears was the mechanism actually used for doubling To make one\nshaft turn twice as much as another by this device, we would: go over\nto the machine with a screwdriver; pick out from a box two gears, one\nwith twice as many teeth as the other; slide them onto the shafts that\nare to be connected; make the gears mesh together; and screw them\ntight on their shafts",
    "To make one\nshaft turn twice as much as another by this device, we would: go over\nto the machine with a screwdriver; pick out from a box two gears, one\nwith twice as many teeth as the other; slide them onto the shafts that\nare to be connected; make the gears mesh together; and screw them\ntight on their shafts Fig 14 14 Scheme of a doubling\nmechanism Fig 15 15 Example of a doubling\nmechanism On the MIT differential analyzer No On the MIT differential analyzer No 2, however, we are better off A much more convenient device for doubling is used We make use of:\na gearbox in whichthere are two shafts that may be geared so that one\nturns twice as much as the other, and two angle-indicator transmitters\nand receivers Looking at the drawing (Fig 16), we can see that: shaft\na drives shaft c to turn in step, shaft c drives shaft d to turn twice as\nmuch, and shaft d drives shaft b to turn in step Here we can\naccomplish doubling by closing the pairs of switches that connect to\nthe gearbox shafts Angle indicators: T, transmitters, and R, receivers\nFig Angle indicators: T, transmitters, and R, receivers\nFig 16 16 Another example of a doubling mechanism Above, we have talked about a mechanism with gears that would\nmultiply the amount of turning by the constant ratio 2 But, of course,\nin a calculation, any ratio, say 7 65, 3 142, ···, might be needed, not\nonly 2 In order to handle various constant ratios, gearboxes of two\n\n\nkinds are in differential analyzer No",
    "In order to handle various constant ratios, gearboxes of two\n\n\nkinds are in differential analyzer No 2 The first kind is a one-digit\ngearbox It can be set to give any of 10 ratios, 0 1, 0 2, 0 3, ···, 1 0 The\nsecond kind is a four-digit gearbox It can be set to give any one of\nmore than 11 thousand ratios, 0 0000, 0 0001, 0 0002, ···, 1 1109,\n1 1110 We can thus multiply by constant ratios Adders\nWe come now to a new mechanism, whose purpose is to add or\nsubtract the amount of turning of two shafts It is called an adder The\nscheme of it is shown in Fig 17: an input shaft with amount of\nturning a, another input shaft with amount of turning b, and an\noutput shaft with amount of turning a + b The adder essentially is\nanother kind of gearbox, called a differential gear assembly This name\nis confusing: the word “differential” here has nothing to do with the\nword “differential” in “differential analyzer ” This mechanism is very\nclosely related to the “differential” in the rear axle of a motor car,\nwhich distributes a driving thrust from the motor to the two rear\nwheels of the car Fig 17 17 Scheme of an adder mechanism Fig 18 18 Example of an adding mechanism\n(differential gear assembly) A type of differential gear assembly that will add is shown in Fig 18 This is a set of 5 gears A to E The 2 gears A and B are input gears The amount of their turning is a and b, respectively They both mesh\nwith a third gear, C, free to turn, but the axis of C is fastened to the\ninside rim of a fourth, larger gear, D Thus D is driven, and the\namount of its turning is (a + b)/2 This gear meshes with a gear E\nwith half the number of teeth, and so the amount of turning of E is a\n+ b We can subtract the turning of one shaft from the turning of\nanother simply by turning one of the input shafts in the opposite\ndirection Integrators\nAnother mechanism in a differential analyzer, and the one that\nmakes it worth while to build the machine, is called an integrator This\nmechanism carries out the process of integrating, of adding up a very\nlarge number of small changing quantities Figure 19 shows what an\nintegrator is It has three chief parts: a disc, a little wheel, and a screw The round disc turns horizontally on its vertical shaft The wheel rests\non the disc and turns vertically on its horizontal shaft The screw goes\nthrough the support of the disc; when the screw turns, it changes the\ndistance between the edge of the wheel and the center of the disc Fig 19",
    "19 Mechanism of integrator Now let us watch this mechanism move If the disc turns a little\nbit, the wheel pressing on it must turn a little bit If the screw turns a\nsmall amount, the distance between the edge of the wheel and the\ncenter of the disc changes The amount that the wheel turns is\ndoubled if its distance from the center of the disc is doubled, and\nhalved if that distance is halved So we see that:\n(the total amount that the wheel turns) equals the\nsum of all the small (amounts of turning),\neach equal to: a bit of (disc turning)\nmultiplied by the (distance from the center of\nthe disc to the edge of the wheel) applying to\nthat bit\nIf we look back at our discussion of integrating (p 72), we see that\nthe capital words here are just the same as those used there 72), we see that\nthe capital words here are just the same as those used there Thus we\nhave a mechanism that expresses integration:\n(the total amount that the wheel turns) equals the\nintegral of (the distance from the center of the\ndisc to the wheel) with respect to (the amount\nthat the disc turns)\n\n\nThe scheme of this mechanism is shown in Fig 20 20 For example, suppose that the screw measures the speed at which\na car travels and that the disc measures time The wheel,\nconsequently, will measure distance traveled by the car The\nmechanism integrates speed with respect to time and gives\ndistance Fig 20 Scheme of integrator This mechanism is the device that Lord Kelvin talked about in\n1879 and that Dr Bush made practical in 1925 The mechanical\ndifficulty is to make the friction between the disc and the wheel turn\nthe wheel with enough force to do other work In the second\ndifferential analyzer, the angle indicator set on the shaft of the wheel\nsolves the problem very neatly",
    "In the second\ndifferential analyzer, the angle indicator set on the shaft of the wheel\nsolves the problem very neatly Fig 21 Graph of air resistance coefficient Function Tables\nThe behavior of some physical quantities can be described only by\na series of numbers or a graphic curve For example, the resistance or\ndrag of the air against a passing object is related to the speed of the\nobject in a rather complicated way Part of the relation is called the\ndrag coefficient or resistance coefficient; a rough graph of this is shown\nin Fig Part of the relation is called the\ndrag coefficient or resistance coefficient; a rough graph of this is shown\nin Fig 21 21 This graph shows several interesting facts: (1) when the\nobject is still, there is no air resistance; (2) as it travels faster and\nfaster, air resistance rapidly increases; (3) when the object travels\nwith the speed of sound, resistance is very great and increases\nenormously; (4) but, when the object starts traveling with a speed\nabout 20 per cent faster than sound, the drag coefficient begins to\ndecrease This drawing or graph shows in part how air resistance\ndepends on speed of object; in other words, it shows the drag\ncoefficient as a function of speed (see Supplement 2) Fig 22 Pointer following graph Now we need a way of putting any function we wish into a\ndifferential analyzer To do this, we use a mechanism called a function\ntable We draw a careful graph of the function according to the scale\nwe wish to use, and we set the graph on the outside of a large drum\n(Fig 22)",
    "22) For example, we can put the resistance coefficient graph on\nthe drum; the speed (or independent variable) goes around the drum,\nand the resistance coefficient (or dependent variable) goes along the\ndrum The machine slowly turns the drum, as may be called for by the\nproblem A girl sits at the function table and watches, turning a\nhandwheel that keeps the sighting circle of a pointer right over the\ngraph The turning of the handwheel puts the graphed function into\nthe machine Instead of employing a person, we can make one side of\nthe graph black, leaving the other side white, and put in a phototube\n(an electronic tube sensitive to amount of light) that will steer from\npure black or pure white to half and half (see Fig Instead of employing a person, we can make one side of\nthe graph black, leaving the other side white, and put in a phototube\n(an electronic tube sensitive to amount of light) that will steer from\npure black or pure white to half and half (see Fig 23) We do not need many function tables to put in information,\nbecause we can often use integrators in neat combinations to avoid\nthem We do not need many function tables to put in information,\nbecause we can often use integrators in neat combinations to avoid\nthem We shall say more about this possibility later We can also use a function table to put out information and to\ndraw a graph To do so, we disconnect the handwheel; we connect the\nshaft of the handwheel to the shaft that records the function we are\ninterested in; we take out the pointer and put in a pen; and we put a\nblank sheet of graph paper around the drum Fig 23 Phototube following graph We have now described the main parts of the second MIT\ndifferential analyzer They are the parts that handle numbers We can\nnow tell the capacity of the differential analyzer by telling the number\nof main parts that it holds:\nShafts\n  About 130\nOne-digit gearboxes\n12\nFour-digit gearboxes\n16\nAdders\nAbout  16\nIntegrators\n18\n\n\nFunction tables\n3\nOn a simpler level, we can say that the machine holds these physical\nparts:\nMiles of wire\nAbout  200\nRelays\nAbout  3000\nMotors\nAbout  150\nElectronic tubes   About  2000\nINSTRUCTING THE MIT\nDIFFERENTIAL ANALYZER NO 2\nBesides the function tables for putting information into the\nmachine, there are three mechanisms that read punched paper tape The three tapes are called the A tape, the B tape, and the C tape From\nthese tapes the machine is set up to solve a problem Suppose that we have decided how the machine is to solve a\nproblem Suppose that we know the number of integrators, adders,\ngearboxes, etc , that must be used, and know how their inputs and\noutputs are to be connected To carry out the solution, we now have\nto put the instructions and numbers into the machine The A tape contains instructions for connecting shafts in the\nmachine Each instruction connects a certain output of one type of\nmechanism (adder, etc ) to a certain input of another type of\nmechanism When the machine reads an instruction on this tape, it\nconnects electrically the transmitting angle-indicator of an output\nshaft to the receiving angle-indicator of another input shaft Now the connecting part of the differential analyzer behaves as if\nit were very intelligent: it assigns an adder or an integrator or a\ngearbox, etc , to a new problem only if that mechanism is not busy For example, if a problem tape calls for adder 3 (in the list belonging\nto the problem), the machine will assign the first adder that is not\nbusy, perhaps adder 14 (in the machine), to do the work Each time\nthat adder 3 (in the problem list) is called for in the A tape, the\nmachine remembers that adder 14 was chosen and assigns it over\nagain This ability, of course, is very useful The B tape contains the ratios at which the gearboxes are to be set For example, suppose that we want gearbox 4 (in the problem list) to\nchange its input by the ratio of 0",
    "For example, suppose that we want gearbox 4 (in the problem list) to\nchange its input by the ratio of 0 2573 2573 The machine, after reading the\nA tape, has assigned gearbox 11 (in the machine list) Then, when the\nmachine reads the B tape, it sets the ratio in gearbox 11 to 0 Then, when the\nmachine reads the B tape, it sets the ratio in gearbox 11 to 0 2573 The answer to a differential equation is different for different\nstarting conditions For example, when we know speed and time and\nwish to find distance traveled and where we have arrived, we must\nknow the point at which we started We therefore need to arrange the\nmachine so that we can put in different starting conditions (or\ndifferent initial conditions, as the mathematician calls them) The C tape puts the initial conditions into the machine For\nexample, reading the C tape for the problem, the machine finds that\n3000 should, at the start of the problem, stand in counter 4 The\nmachine then reads the number at which counter 4 actually stands,\nsay 6728 3 It subtracts the two numbers and remembers the\ndifference, -3728 3 And whenever the machine reads that counter\nlater, finding, say, 9468 4 in it, first the 3728 3 is subtracted, and then\nthe answer 5740 1 is printed ANSWERS\nInformation may come out of the machine in either one of two\nways: in printed numbers or in a graph In fact, the same quantity\nmay come out of the machine in both ways at the same time To\nobtain a graph, we change a function table from input to output, put a\npen on it, and have it draw the graph The machine has 3 electric typewriters The machine will take\nnumerical information out of the counters at high speed even while\nthey are turning, and it will put the information into relays Then it\nwill read from the relays into the typewriter keys one by one while\nthey type from left to right across the page",
    "Then it\nwill read from the relays into the typewriter keys one by one while\nthey type from left to right across the page HOW THE DIFFERENTIAL ANALYZER CALCULATES\nUp to this point in this chapter, the author has tried to tell the\nstory of the differential analyzer in plain words But for reading this\nsection, a little knowledge of calculus is necessary (See also\n\n\nSupplement 2 ) If you wish, skip this section, and go on to the next\none ) If you wish, skip this section, and go on to the next\none We have described how varying quantities, or variables, are\noperated on in the machine in one way or another: adding,\nsubtracting, multiplying by a constant, referring to a table, and\nintegrating What do we do if we wish to multiply 2 variables\ntogether A neat trick is to use the formula:\nxy = ∫ x dy + ∫ y dx\nTo multiply in this way requires 2 integrators and 1 adder The\nconnections that are made between them are as follows:\nShaft x\nTo Integrator 1, Screw\nShaft x\nTo Integrator 2, Disc\nShaft y\nTo Integrator 1, Disc\nShaft y\nTo Integrator 2, Screw\nIntegrator 1, Wheel\nTo Adder 1, Input 1\nIntegrator 2, Wheel   To Adder 1, Input 2\nAdder 1, Output\nTo Shaft expressing xy\nA product of 2 variables under the integral sign can be obtained a little\nmore easily, because of the curious powers of the differential\nanalyzer Thus, if it is desired to obtain ∫ xy dt, we can use the\nformula:\nxy dt = x d  y dt\nand this operation does not require an adder The connections are as\nfollows:\nShaft t\nTo Integrator 1, Disc\nShaft y\nTo Integrator 1, Screw\nIntegrator 1, Wheel\nTo Integrator 2, Disc\nShaft x\nTo Integrator 2, Screw\nIntegrator 2, Wheel   To Shaft expressing ∫xy dt\n\n\nIn order to get the quotient of 2 variables, x/y, we can use some\nmore tricks First, the reciprocal 1/y can be obtained by using the two\nsimultaneous equations:\n \n 1   dy = log y,\ny\n -   1   d(log y) = y\ny\nThe connections are as follows:\nShaft y\nTo Integrator 1, Disc and to Integrator 2, Wheel\nShaft log y To Integrator 1, Wheel and to Integrator 2, Disc\nShaft 1/y To Integrator 1, Screw, and negatively to Integrat\nIn order to get x/y, we can then multiply x by 1/y We see that this\nsetup gives us log y for nothing, that is, without needing more\nintegrators or other equipment Clearly, other tricks like this will give\nsin x, cos x, eˣ, x², and other functions that satisfy simple differential\nequations An integral of a reciprocal can be obtained even more directly Suppose that\ny =  1   dt\nx\nThen\nDₜ y =   1   , Dy t = x,\nx\n t =   x dy\nThe connections therefore are:\n\n\nShaft t   To Integrator, Wheel\nShaft x\nTo Integrator, Screw\nShaft y\nTo Integrator, Disc\nThe light wheel then drives the heavy disc Clearly only the angle-\nindicator device makes this possible at all Naturally, the closer the\nwheel gets to the center of the disc, that is, x approaching zero, the\ngreater the strain on the mechanism, and the more likely the result is\nto be off Mathematically, of course, the limit of 1/x as x approaches\nzero equals infinity, and this gives trouble in the machine There is no standard mathematical method for solving any\ndifferential equation But the machine provides a standard direct\nmethod for solving all differential equations with only one\nindependent variable First: assign a shaft for each term that appears\nin the equation For example, the highest derivative that appears and\nthe independent variable are both assigned shafts The integral of the\nhighest derivative is easily obtained, and the integral of that integral,\netc Second: connect the shafts so that all the mathematical relations\nare expressed Both explicit and implicit equations may be expressed Third: for any shaft there must be just one drive, or source of torque A\nshaft may, however, drive more than one other shaft Fourth: choose\nscale factors so that the limits of the machine are not exceeded yet at\nthe same time are well used For example, the most that an integrator\nor a function table can move is 1 or 2 feet Also, the number of full\nturns made by a shaft in representing its variable should be large,\noften between 1000 and 10,000 Of course, as with all these large machines, anyone would need\nsome months of actual practice before he could put on a problem and\nget an answer efficiently AN APPRAISAL OF THE MACHINE\nThe second MIT differential analyzer is probably the best machine\never built for solving most differential equations It regularly has an\naccuracy of 1 part in 10,000 This is enough for most engineering\nproblems If greater accuracy is needed, the second differential\nanalyzer cannot provide it Once in a while the machine can reach an\naccuracy of 1 part in 50,000; but, to balance this, it is sometimes less\n\n\naccurate than 1 part in 10,000 The MIT differential analyzer No 2 can find answers to problems\nvery quickly The time for setting up a problem to be run on the\nmachine ranges from 5 to 15 minutes The time for preparing the\ntapes that set up the problem is, of course, longer; but the punch for\npreparing the tape is a separate machine and does not delay the\ndifferential analyzer The time for the machine to produce a single\nsolution to a problem ranges usually from 3 minutes to a half-hour It\nis easy to put on a problem, run a few solutions, take the problem off,\nstudy the results, change a few numbers, and then put the problem\nback on again This virtue is a great help in a search in a new field While the study is going on, time is not wasted, for the machine can\nbe busy with a different problem Running a problem a second time is a good check on the reliability\nof an answer For, when the problem is run the second time, we can\narrange that the machine will route the problem to other mechanisms The machine has a control panel Here the operator watching the\nmachine can tell what units are doing what parts of what problems If\na unit gives trouble or needs to be inspected, the clerk can throw a\n“busy” switch Then the machine cannot choose that unit for work to\nbe done The machine contains many protecting signals and alarms It\nis idle for repairs less than 5 per cent of the time It is not easy to determine the total cost of the machine, for it was\npartially financed by several large gifts Also, much of the labor was\ndone by graduate students in return for the instruction that they\ngained The actual out-of-pocket cost was about $125,000 If the\nmachine were to be built by industry, the cost would likely be more\nthan 4 times as much A simple differential analyzer, however, can be\ncheap Small scale differential analyzers have been built for less than\n$1000; their accuracy has been about 1 part in 100 There are many things that this machine cannot do; it was not\nbuilt to do them (1) It cannot choose methods of solution (2) It\ncannot perform steps in solving a problem that depend on results as\nthey are found (3) It cannot solve differential equations containing\ntwo or more independent variables Such equations are called partial\ndifferential equations; they appear in connection with the flow of heat\nor air or electricity in 2 or 3 dimensions, and elsewhere",
    "Such equations are called partial\ndifferential equations; they appear in connection with the flow of heat\nor air or electricity in 2 or 3 dimensions, and elsewhere (4) It cannot\nsolve problems requiring 6 or more digits of accuracy (5) The\n\n\nmachine, while running, can store numbers only for an instant, since\nit operates on the principle of smoothly changing quantities; however,\nwhen the machine stops, the number last held by each device is\npermanently stored None of these comments, however, are criticisms of the machine Instead they show avenues of development for future machines As\nwas said before, for solving most differential equations, this machine\nhas no equal to date The range of problems which any differential\nanalyzer can do depends mostly on the number of its integrators The\nsecond differential analyzer has 18 and provides for expansion to 30 The machine is constructed, also, so that it can be operated in 3\nindependent sections, each working to solve a different problem The\ndifferential analyzer can operate unattended After it has been set up\nand the first few results examined, it can be left alone to grind out\nlarge blocks of answers An interesting example of the experimental use of a differential\nanalyzer in a commercial business is the following: In Great Britain, R E Beard of the Pearl Assurance Company built a differential analyzer\nwith 6 integrators He applied this machine to compute to 3 figures\ncertain insurance values known as continuous annuities and continuous\ncontingent insurances He has described the machine and the\napplication he made in a paper published in the Journal of the Institute\nof Actuaries, Vol",
    "He has described the machine and the\napplication he made in a paper published in the Journal of the Institute\nof Actuaries, Vol 71, 1942, pp 193-227 Chapter 6\nACCURACY TO 23 DIGITS:\nHARVARD’S IBM AUTOMATIC\nSEQUENCE-CONTROLLED CALCULATOR\nOne of the first giant brains to be finished was the machine in the\nComputation Laboratory at Harvard University called the IBM\nAutomatic Sequence-Controlled Calculator This great mechanical brain\nstarted work in April 1944 and has been running 24 hours a day\nalmost all the time ever since It has produced quantities of\ninformation for the United States Navy Although many problems that\nhave been placed on it have been classified by the Navy as\nconfidential, the machine itself is fully public The way it was working\non Sept 1, 1945, has been thoroughly described in a 540-page book\npublished in 1946, Volume I of the Annals of the Harvard\nComputation Laboratory, entitled Manual of Operation of the Automatic\nSequence-Controlled Calculator Since then the machine has been\nimproved in many ways This machine does thousands of calculating steps, one after\nanother, according to a scheme fixed ahead of time This property is\nwhat gives the machine its name: automatic, since the individual\noperations are automatic, once the punched tape fixing the chain of\noperations has been put on the machine, and sequence-controlled, since\ncontrol over the sequence of its operations has been built into the\nmachine ORIGIN AND DEVELOPMENT\nMore than a hundred years ago, an English mathematician and\nactuary, Charles Babbage (1792-1871), designed a machine—or engine\nas he called it—that would carry out the sequences of mathematical\noperations In the 1830’s he received a government grant to build an\nanalytical engine whereby long chains of calculations could be\nperformed But he was unsuccessful, because the refined physical\n\n\ndevices necessary for quantities of digital calculation were not yet\ndeveloped Only in the 1930’s did these physical devices become\nsufficiently versatile and reliable for a calculator of hundreds of\nthousands of parts to be successful The Automatic Sequence-Controlled Calculator at Harvard was\nlargely the concept of Professor Howard H Aiken of Harvard It was\nbuilt through a partnership of efforts, ideas, and engineering between\nhim and the International Business Machines Corporation, in the years\n1937 to 1944 The calculator was a gift from IBM to Harvard\nUniversity Some very useful additional control units, named the\nSubsidiary \nSequence \nMechanism, \nwere \nbuilt \nat \nthe \nHarvard\nComputation Laboratory in 1947 and joined to the machine",
    "Some very useful additional control units, named the\nSubsidiary \nSequence \nMechanism, \nwere \nbuilt \nat \nthe \nHarvard\nComputation Laboratory in 1947 and joined to the machine Fig 1 Scheme of Harvard IBM Automatic\nSequence-Controlled Calculator GENERAL ORGANIZATION\nThe machine (see Fig 1) is about 50 feet long, 8 feet high, and\nabout 2 feet wide It consists of 22 panels; 17 of them are set in a\nstraight line, and the last 5 are at the rear of the machine In the\nscheme of the machine shown in Fig 1, the details you would see in a\nphotograph have been left out Instead you see the sections of the\nmachine that are important because of what they do: input, memory,\ncontrol, and output Why do we not see a section labeled “computer” Because in this mechanical brain the computing part of the machine is\nclosely joined to the memory: every storage register can add and\nsubtract We shall soon discuss these sections of the machine more\nfully PHYSICAL DEVICES\nNow in order for any brain to work, physical devices must be used For example, in the human body, a nerve is the physical device that\ncarries information from one part of the body to another In the\nHarvard machine, an insulated wire is the physical device that carries\ninformation from one part of the machine to another One side of\nevery panel in the Harvard machine is heavily laden with a great\n\n\nnetwork of wires Between the panels, you can see in many places\ncables as thick as your arm and containing hundreds of wires More\nthan 500 miles of wire are used The physical devices in the Harvard machine are numerous, as we\nwould expect It is perhaps not surprising that this machine has more\nthan 760,000 parts But, curiously enough, there are only 7 main\nkinds of physical devices in the major part of the machine They are:\nwire, two-position switches, two-position relays (see Chapter 2), ten-\nposition switches, ten-position relays, buttons, and cam contacts (see\nbelow) These are the devices that handle information in the form of\nelectrical impulses They can be combined by electrical circuits in a\ngreat variety of ways There are, of course, other kinds of physical\ndevices that are important, but they are not numerous, and they have\nrather simple duties Looking at the machine, you can see three\nexamples easily Physical devices of the first kind convert punched\nholes into electrical impulses: 2 card feeds, 4 tape feeds Those of the\nsecond kind convert electrical impulses into punched holes: 1 card\npunch, 1 tape punch Those of the third kind convert electrical\nimpulses into printed characters: 2 electric typewriters We can think of\na fourth kind of physical device that would be a help, but, at present\nwriting, it does not yet exist: a device that converts printed characters\ninto electrical impulses The Harvard machine, of course, is complicated But it is\ncomplicated because of the variety of ways in which relatively simple\ndevices have been connected together to make a machine that thinks Switches\nA two-position switch (see Fig 2) turned by hand connects a wire to\neither one of 2 others These 2 positions may stand for “yes” and “no,”\n0 and 1, etc There are many two-position switches in the machine A\nten-position switch or dial switch (see Fig 3) turned by hand connects\nthe wire running into the center of the switch with a wire at any one\nof ten positions 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 around the edge There are\nover 1400 dial switches in the machine How does turning the pointer\non the top of the dial make connection between the center wire and\nthe edge wire Under the face of the dial is the part that works, a\nshort rod of metal fastened to the pointer (shown with dashes in Fig 3) When the pointer turns, this rod also turns, making the desired\n\n\nconnection Fig 2 Two-position switch Fig 3 Dial switch Relays\nTwo-position relays—more often called just relays (see Chapter 2)—\ndo the automatic routing of the electrical impulses that cause\ncomputing to take place Each relay may take 2 positions, open or\nclosed, and these positions may stand for 0 and 1 There are more\nthan 3000 relays in the Harvard machine A magnet pulling one way and a spring pulling the other way are\nsufficient in an ordinary relay to give 2 positions, “on” and “off,”\n“yes” and “no,” 0 and 1 But how do we make a relay that can hold\nany one of 10 positions Figure 4 shows one scheme for a ten-position\nrelay The arm can take any one of 10 positions, connecting the\ncontact Common to any one of the contacts O, 1, 2, 3, 4, 5, 6, 7, 8, and\n9 so that current can flow The gear turns all the time When an\nimpulse comes in on the Pickup line, the clutch connects the arm to the\ngear When an impulse comes in on the Drop-out line, the clutch\ndisconnects the arm from the gear For example, suppose that the ten-\nposition relay is stopped at contact 2, as shown Suppose that we now\npick up the relay, hold it just long enough to turn 3 steps, and then\ndrop it out The relay will now rest at contact 5 Fig 4 Scheme of a ten-position relay,\nor counter position Fig 5 Scheme of a\ncounter wheel In the Harvard machine, the ten-position relays, much like the\nscheme shown, do the same work as counter wheels (Fig 5) in an\nordinary desk calculating machine, and so they are often spoken of as\ncounter positions in the Harvard machine They are very useful in the\nmachine not only because they express the 10 decimal digits 0, 1, 2,\n3, 4, 5, 6, 7, 8, 9 but also because adding and subtracting numbers is\naccomplished by turning them through the proper number of steps In\nfact, an additional impulse is provided when the counter position\nturns from 9 to 0, for purposes of carry A group of 24 counter\npositions makes up each storage counter—or storage register—in the\nmachine There are 2200 of these counter positions Each is connected\nto a continuously running gear on a small shaft (Fig 6) All these\nshafts are connected by other gears and shafts to a main drive shaft,\nand they are driven by a 5-horsepower motor at the back of the\nmachine When a counter position is supposed to step, a clutch\nconnects the drive to the running gear, and the counter position steps When the counter position is supposed to stay unchanged, the clutch\nis disconnected and the driving gear runs free In fact, when you first\napproach the Harvard machine, about the first thing you are aware of\nis the running of these gears and the intermittent whirring and\nclicking of the counter positions as they step The machine gives a fine\nimpression of being busy Fig 6 Scheme of counter 16 Timing Contacts\nA button (see Fig 7) is a device for closing an electric circuit when\nand only when you push it A simple example is the button for ringing\na bell: you push the button, a circuit is closed, and something\nhappens When you let go, the circuit is opened The Harvard machine\nhas a button for starting, a button for stopping, and many others Fig 7 Button Fig 8 Cam, with 5 lobes and contact A cam contact (see Fig 8) is an automatic device for closing an\nelectric circuit for just a short interval of time When the lobes on the\ncam strike the contact, it closes and current flows When the lobes\nhave gone by, the spring pushes open the contact, and no current\nflows Just as a two-position relay is the automatic equivalent of a\ntwo-position switch, and a ten-position relay is the automatic\nequivalent of a ten-position switch, so a cam contact is the automatic\nequivalent of a button All the cams in the machine have 20 pockets where small round\nmetal lobes may or may not be inserted Each cam makes a full turn\nonce in ³/₁₀ of a second and is in time with all the others Thus we can\ntime all the electrical circuits in the machine in units of ³/₂₀₀ of a\nsecond NUMBERS\nNumbers in the machine regularly consist of 23 decimal digits The\n24th numerical position at the left in any register contains only 0 for a\npositive number and only 9 for a negative number Nines complements\n(see \nSupplement \n2) \nare \nused \nfor \nnegative \nnumbers For\nexample,-00284 is represented as 999715, supposing that we had 5-\ndigit numbers instead of 23-digit numbers The sum of two nines\ncomplements is automatically corrected so that it is still a correct\nnines complement The device that accomplishes this is called end-\naround-carry (see Supplement 2)",
    "The device that accomplishes this is called end-\naround-carry (see Supplement 2) The decimal point is fixed for each\nproblem; in other words, in any problem, the decimal point is\nconsistently kept in one place, usually between the 15th and 16th\ndecimal columns from the right HOW INFORMATION GOES\nINTO THE MACHINE\nNumerical information may go into the machine in any one of 3\nways: (1) by regular IBM punch cards, using standard IBM card feeds\n(panel 16); (2) by hand-set dial switches (panels 1, 2); and (3) by long\nloops of punched tape placed on the value tape feeds (panels 12 to\n\n\n14) Three sets of 24 columns each punched on a regular IBM punch\ncard can be used to send 3 numbers and their signs into the machine\nin one machine cycle This is the fastest way for giving numbers to the\nmachine, but the most limited; for the cards must be referred to in\norder and can be referred to automatically only once Also, there is\nthe risk that they may be out of order A card may be passed through\nthe machine without reading; this saves some sorting in preparing\ncards for the machine Machines for preparing the cards are regular\nIBM key punches, and machines for sorting them after preparation are\nregular IBM card sorters In panels 1 and 2 there are 60 registers by which unchanging\nnumbers like 1, or 3 14159265···, or 7 65 may be put into the\nmachine These are called the constant registers Each constant register\nconsists of 24 dial switches and contains 23 digits and a sign, 0 if\npositive and 9 if negative Whenever the mathematician says a certain\nconstant is needed for a problem, the operator of the machine walks\nover to these panels, and, while the machine is turned off, sets the\ndial switches for the number, one by one, by hand If we need 40\nconstants of 10 digits each for a problem, then the operator sets 400\ndial switches by hand and makes certain that the remaining 14\nswitches in each of the 40 constant registers used are either at 0 or 9,\ndepending on the sign of the number Only then can he return to start\nthe machine Fig 9 Value tape code The third means by which numerical information can be put into\nthe machine is the value tape feeds, in panels 12, 13, and 14 Here the\nmachine can consult tables of numbers The numbers are punched on\npaper tape 24 holes wide, made of punch-card stock Tapes for the\nvalue tape feeds may be prepared by hand or by the machine itself\nusing punch cards or machine calculation The tapes use equally\nspaced arguments (see Supplement 2) The tape punch changes the\ndecimal digits in its keyboard into the following punching code (see\nFig 9):\n 0  0000  \n 5 \n1100\n1 1000 6 1010\n\n\n2 0010 7 1001\n3 0010 8 0110\n4 0001 9 0101\nHere the 1 denotes a punched hole and 0 no punched hole, and the 4\ncolumns from left to right of the code correspond to 4 rows of the\npaper tape from bottom to top To make sure the value tape is correct,\nthe machine itself can read the value tape and check it\nmathematically or compare it with punch-card values HOW INFORMATION COMES\nOUT OF THE MACHINE\nInformation comes out of the machine in any one of three ways:\n(1) by punching on IBM cards with a regular IBM card punch that is\nbuilt into the machine (panel 17), (2) by typing on paper sheets with\nelectric typewriters (panels 16 and 17), and (3) by punching paper\ntape 24 holes wide of the same kind as is fed into the machine Usually, one of the electric typewriters is used to print a result for\na visual check and to print it before the machine makes a specified\ncheck of the value Then, about 10 seconds later, after the result has\nbeen checked as specified in the machine, the checked result is\nprinted by the second typewriter In the second typewriter, a special\none-use carbon ribbon of paper is used to produce copy for\npublication by a photographic process The card punch writes a number more rapidly than an electric\ntypewriter This extra speed is sometimes very useful However, the\npunch’s chief purpose is to record intermediate results on punch\ncards Then, if there is a machine failure, and if the problem has been\nwell organized, the problem may be run over from these intermediate\nresults, instead of requiring a return to the original starting\ninformation The tape punch used for preparing tape by hand can also\nbe operated by cable from the machine HOW INFORMATION IS HANDLED\nIN THE MACHINE\nThe machine is a mechanical brain So, between taking in\n\n\ninformation and putting out information, the machine does some\n“thinking ” It does this thinking according to instructions The\ninstructions go into the machine as: (1) the setting of switches, or (2)\nthe pressing of buttons, or (3) the wiring of plugboards, or (4) feeding\nin tape punched with holes The instructions are remembered in the\nmachine in these 4 ways, and we can call these sets of devices the\ncontrol of the machine To illustrate: One of the buttons pressed for every problem is the\nStart Key: when you press it, the machine starts to work on the\nproblem One of the switches with which you give instructions is a\nswitch that turns electric typewriter 1 on or off One of the plugboards\ncontains some hubs by which you can tell the machine how many\nfigures to choose in the quotient when dividing, for clearly you do not\nneed a quotient of 23 figures every time the machine divides You can\nhave 5 choices in any one problem; you can specify them by plugging,\nand you can call for any one of 5 choices of quotient size from time to\ntime during the problem In many cases, when we wish the machine\nto do the same thing for all of a single problem and do it whenever\nthe occasion arises, we can put the instruction into the wiring of a\nplugboard We use plugboard wiring, for example, in fixing the\ndecimal point in multiplication, so that the product will read out\nproperly, and in guiding the operation of the typewriters, so that\nprinting will take place in the columns where we want it Sequence of Steps\nThe most important part of the control of the machine is the\nsequence-tape feed and its sequence-control tape These tell the machine\na great part of what operations are to be performed Fig 10 Sequence-control tape code At the end of the room where the machine is, there is the special\ntape punch mentioned above It holds a big spool of card stock that is\nthin, flexible, smooth, and tough With one keyboard we may prepare\nvalue tape With another keyboard we prepare the sequence-control\ntape The tape (see Fig 10) contains places for 24 round punched\nholes in each row Some and only some of these holes are punched Each row of punched holes is equivalent to an instruction to the\n\n\nmachine and is called a line of coding or coding line In general, the\ninstruction has the form:\nTake a number out of Register A;\nput the number into Register B;\nand perform operation C The first group of 8 holes at the left is called the A field or the out-\nfield Here we tell the machine where a number is to be taken from The middle group of 8 holes is called the B field or the in-field Here\nwe tell the machine where a number is to be put The last group of 8\nholes is called the C field or the miscellaneous field Here we tell the\nmachine part or all of the operation that is to be performed To illustrate (see Fig 10), we have holes 3, 2, 1 punched in the A\nfield, holes 3, 2 punched in the B field, and hole 7 punched in the C\nfield Now 321 is the code—or machine language, or machine call\nnumber—for storage counter 7; 32 is the code for storage counter 6;\nand 7 in the C field is the code (in this case, and generally) for “Add,\nand read the next line of coding ” So, if we punch out this line of\ncoding and put the tape on the machine, we tell the machine to read\nthe number in counter 7, add it into counter 6, and proceed to the\nnext line of coding and read that The holes in each group of 8 holes from left to right are numbered:\n8, 7, 6, 5, 4, 3, 2, 1 The code 631, for example, means that holes 6, 3,\n1 are punched and that no holes are punched at 8, 7, 5, 4, 2 Since it\nis more natural, the code is read from left to right, or 631, instead of\nfrom right to left in the sequence 136 The devices in the machine have in-codes, used in the in-field, and\nout-codes, used in the out-field For each of the 72 regular storage\ncounters, the in-code and the out-code are the same The first 8\nstorage counters have the codes 1, 2, 21, 3, 31, 32, 321, 4, 41; the last\n2 storage counters, the 71st and the 72nd, have the codes 7321, 74 The constant registers—often called constant switches, or just\nswitches—naturally have only out-codes, since numbers can be entered\ninto the constant registers only by setting dial switches by hand The\nfirst 8 constant registers have the out-codes 741, 742, 7421, 743,\n7431, 7432, 74321, 75, and the 59th and 60th constant registers have\nthe out-codes 821, 83 Transferring, Adding, and Clearing\nEach storage counter has the property that any number transferred\ninto it is added into it For example, the instruction\nTake the number in switch 741;\ntransfer it into storage register 321\nis coded:\n741, 321, 7\nThe 7 in the third column is an instruction to the sequence-tape feed\nto turn up to the next coding line and read it If any number is already\nstored in register 321, the content of 741 will be added to it, and the\ntotal will then be stored in 321 Resetting or clearing a regular storage register is accomplished by\na coding that is a departure from the usual scheme of “out” and “in ”\nThe instruction\nClear register 321;\nread the next coding line\nis coded:\n321, 321, 7\nSimilarly, you can clear any other regular storage register if you\nrepeat its code in the out-and in-fields However, a few of the storage\nregisters in the machine have special reset codes, and these may occur\nin any of the three fields A, B, C As the result of a recent modification of the machine, you can\neasily double the number in any storage register For example, the\ninstruction\nDouble the number in register 321;\nread the next coding line\nis coded:\n321, 321, 743\n\n\nSubtracting\nIf the number in switch 741 is to be subtracted from the number in\nstorage counter 321, the instruction is changed into:\nTake the negative of the number in switch 741;\ntransfer it into storage register 321;\nread the next line of coding\nThe coding line becomes:\n741, 321, 732\nBy putting 32 in the C field, we cause the number in switch 741 to be\nsubtracted from whatever number is in register 321 We have 2 more choices in adding and subtracting The value of\nthe number without regard to sign—in other words, its absolute value\n(see Supplement 2)—may be added or subtracted The instruction\nAdd the absolute value of\nis expressed by a C field code 2, and the instruction\nAdd the negative of the absolute value of\nis expressed by a C field code 1 Multiplying\nWhen we wish to multiply one number by another and get a\nproduct, we have 3 numbers We tell the machine about each of these\nnumbers on a separate line of coding Multiplication is signaled by\nsending a number into the multiplicand counter The multiplicand\ncounter has an in-code 761 If the multiplicand is in 321, the\ninstruction is:\nTake the number in 321;\nenter it as multiplicand;\nread the next coding line\nThe coding is:\n\n\n321, 761, 7\nOn the third following coding line, the multiplier is sent into the\nmultiplier counter If the multiplier is in switch 741, the instruction is:\nTake the number in 741;\nenter it as multiplier;\nread the next coding line\nThe coding is:\n741, ——, 7\nWe do not punch anything in the middle field: the machine is\n“educated” and “knows” that it has started a multiplication and needs\na multiplier, and it expects this multiplier in the third coding line To\nhave no code for the multiplier counter is, of course, a departure from\nthe general rule, but it saves some punching and permits the use of\nthis space for certain other codes, thus saving some operating time We need not confuse the 761 in-code for the multiplicand counter\nwith the 761 out-code, which happens to be the out-code of the 25th\nconstant register, because neither can occur in the other’s field We\nmay, of course, use other registers besides 321 and 741 for supplying\nthe multiplicand and multiplier To get the product and put it into any storage counter D, we use\ntwo lines of coding one right after the other:\n——  ——  6421\n8761    D    ——\nThe product counter has the out-code 8761 When the product is\ndesired, it is called for, transferred into counter D, and the\nmultiplication unit is automatically cleared It takes time, however,\nfor the machine to perform a multiplication That is the reason for the\npreceding coding line and the 6421 in the C field While the\nmultiplication is going on, we can instruct the machine to do other\nthings that we want done We can insert or interpose coding lines in\nbetween the multiplier line and the product line For example, if we\nhave a multiplier of 10 digits, we can insert 8 coding lines and maybe\nmore The 6421 code essentially tells the machine to finish both the\nmultiplication and the interposed instructions, and, as soon as the\n\n\nlater one of these two tasks is finished, to transfer out the product to\ncounter D Up to the middle of 1946, the wiring of the machine was a little\ndifferent and less convenient When the product was obtained by the\nmultiplication unit, it had to be accepted and transferred at once into\none of the 72 storage registers Dividing\nDivision is called for by first sending the divisor into the divisor\ncounter, and this has a code 76 in the B field If the divisor is in\ncounter 321, the instruction may be:\nTake the number in 321;\nenter it as divisor;\nread the next coding line\nThe coding will then be:\n321, 76, 7\nThree coding lines later, the dividend is called for, and the coding, if\nthe dividend is in switch 7431, is:\n7431, ——, 7\nWe can send the quotient, when ready, into any desired counter Q by\nthe following two lines of coding:\n——  ——  642\n876      Q   ——\nIn the same way as with multiplication, we can insert a number of\ncoding lines in between the dividend line and the first quotient line Both multiplication and division are carried out in the same unit of\nthe machine, the multiply-divide unit The machine first constructs a\ntable of the multiples of the multiplicand or divisor: 1 times, 2 times,\n3 times, ···, 9 times In multiplication this table is then used by\nselecting multiples according to the digits of the multiplier one after\nanother In division the table is used by comparing multiples of the\ndivisor against the dividend and successive remainders, finding which\n\n\nwill go and which will not Since the numbers in the machine are\nnormally of 15 to 23 digits, any particular multiple will be used, on\nthe average, several times, and so this process is relatively efficient Actually the multiplicand and the divisor go into the same counter Division, however, has the code 76 and multiplication the code 761,\nand so the difference is essentially an operation code not in the third\nor C field Consulting a Table\nWhen we desire the machine to consult a table of values (i e , a\nfunction—see Supplement 2), we punch the table with its arguments\nand function values on a tape, and we put the tape on a value tape\nfeed mechanism The instruction to the machine may be:\nTake the number in register A;\nfind the value of the function for this number,\nand enter it in register B The coding is:\n——\n——\n73\nA\n7654\n61\n——\n——\n762\n——\n——\n543\n——\n——\n75431\n841\n7654\n——\nA\n763\n6421\n8762\nB\n73\n——\n8763\n7\nWithout explaining this coding line by line, we can say that this is\nwhat happens:\nThe machine reads the argument in register A The\nmachine reads the argument in the table at\nwhich the value tape feed is resting It subtracts them, and thereby determines how far\naway the desired argument is The machine then turns the tape that required\ndistance It checks that the new argument is the wanted\nargument It reads the value of the function entered at that\npoint on the function tape Selecting\nThere is a storage counter in the machine that is called the\nselection counter The selection counter is counter 70 and has the code\n732 It has all the properties of an ordinary storage counter and, in\naddition, one extra property: depending on the sign of the number\nstored in the selection counter, it is possible to select whether some\nother number shall be treated positively or negatively In other words,\naddition of a number anywhere in the machine may take place either\npositively or negatively, if the number stored in the selection counter\nis positive or negative, respectively For example, suppose that x is the number in the selection counter Suppose that y is the number in some other counter A Suppose that z\nis the number in counter B Suppose that we use the coding:\nA, B, 7432\nWhat we get in B, because of the 7432 in the third or C field, is z plus\ny if x is positive or zero, and z minus y if x is negative In the language\nof the algebra of logic (see Chapter 9 and Supplement 2), where T( )\nis “the truth value of ,” the number in b equals:\nz + y·T(x ≥ 0) - y·T(x < 0)\n(The nines complement of 0, namely 999···9 to 24 digits, is treated by\nthe machine as negative )\nWhy do we need an operation like this in a mechanical brain Among other reasons, what we want to do with a number, in\nmathematics, often depends on its sign It may happen that a table is,\nfor negative arguments, the negative of what it is for positive\n\n\narguments; in other words, F(-x) =-F(x) This is true, for instance, for\na table of cubes {F(x) = x³} or for a table of trigonometric tangents (see\nSupplement 2) If so, we certainly do not want to take the time and\ntrouble to list the whole table We put down only half the table and\nthen, if x is negative, use the negative of the value in the table In\norder to apply such a time-saving rule when using the machine, we\nneed the selection counter or its equivalent Checking\nThere is another special counter in the machine that is called the\ncheck counter It also has all the properties of an ordinary storage\ncounter and, in addition, one extra property: If the sign of the number\nstored in the check counter on a certain coding line is negative, then\non the next coding line the machine may be stopped In other words,\nsuppose that the check counter stores a certain tolerance t Suppose,\nunder the instructions we give the machine, that it calculates a\npositive number x that ought to be less than this tolerance Suppose\nthat something may go wrong and that x actually may be greater than\nt Then we put a check into our instructions We tell the machine:\nWhen you have found x, subtract it from t If the result is positive, go ahead If the result is negative or zero, stop Here is the coding Suppose that the tolerance t is in switch 751 Suppose that the number x to be checked is in counter 4321 Then the\ninstructions and coding are:\nClear the check counter\n—\n—\n7\nPut in the tolerance, from switch 751\n751\n74\n7\nSubtract the absolute value of the number to be checked  \n4321\n74\n71\nStop, O Mechanical Brain, if your result be negative —\n—\n64\nAn operation like this is very useful in a mechanical brain It\nenables the calculation to be interrupted if something has gone wrong Of course, other operations of checking besides this one are used—for\nexample, inspecting for reasonableness the results printed on\ntypewriter 1 Other Operations\nThere are other operations in the machine There are two pairs of\nstorage registers that can be coupled together so that we can handle\nproblems requiring numbers of 46 digits instead of 23 Registers 64\nand 65 can be coupled, and registers 68 and 69 can be coupled There\nis another storage counter, No 71, that has an extra property We can\nread out the number it holds times 1, or times 10¹², or times 10⁻¹², as\nmay be called for As a result of this counter, we can do problems\nrequiring 144 registers storing numbers of 11 digits each, instead of\n72 registers storing 23 digits each Bigger statistical problems can be\nhandled, for example There are some minor sequences of operations, or subroutines, that\ncan be called for by a single code The subroutine may be a whole set\nof additions, subtractions, multiplications, divisions, and choices,\nhaving a single purpose: to compute some number by a process of\nrapid approximation (see Supplement 2) There are built-in subroutines\nfor some special mathematical functions: the logarithm of a number to\nthe base 10, the exponential of a number to the base 10, and the sine of\na number (See Supplement 2 )\nThere are also 10 changeable subroutines, each of 22 coding lines,\nwhich can be called in, when wanted, by the main sequence-control\ntape or by each other These subroutines constitute the Subsidiary\nSequence Mechanism, and are extremely useful They have A, B, and\nC fields just like the main sequence-control, but they are given\ninformation by plugging with short lengths of wire instead of by\nfeeding punched paper tape RAPID APPROXIMATION FOR A LOGARITHM\nUp to this point in this chapter the author has tried to tell the facts\nabout the Harvard machine in plain words But for reading this\nsection, a little knowledge of calculus is necessary (See also\nSupplement 2 ) If you wish, skip this section and go on to the next\none",
    ") If you wish, skip this section and go on to the next\none What is the process that the machine uses to compute any desired\nlogarithm to 23 digits Suppose that we take for an example the\nprocess by which the machine computes log10 49 3724 We choose a\n\n\n6-digit number for simplicity; the machine would handle a 23-digit\nnumber in the same way The process uses 2 fundamental equations\ninvolving the logarithm: the sum relation\nlog (a·b·c···) = log a + log b + log c···\nand the series relation\nlogₑ(1 + h) = h -  h² + h³ - h⁴  + ···, │h│ < 1\n2\n3 4\nThe error in this series is less than the first neglected term Now, the\nmachine stores the base 10 logarithms (to 23 decimal places) of the\nfollowing 36 numbers:\n1 1 1 1 01 1 001\n2 1 2 1 02 1 002 9 1 9 1 09 1 009\nFirst, the number 49 3724 is examined in a counter called the\nLogarithm-In-Out counter, and the position of the decimal point is\ndetermined, giving the characteristic of the logarithm The number\n49 3724 has the characteristic 1 Next, 4 successive divisions are\nperformed, in which the 4 divisors are (1) the first digit of the\nnumber, (2) the first 2 digits of the quotient, (3) the first 3 digits of\nthe next quotient, and (4) the first 4 digits of the subsequent quotient;\nthus,\n4 93724  = 1 23431\n4\n1 23431  = 1 02860\n1 2\n1 02860  = 1 00843\n1 02\n1 00843  = 1 00043\n1 008\n\n\nFor simplicity we have kept only 6 digits, although the machine, of\ncourse, would keep 23 It is interesting to note that the machine is\nable to sense digits and thus determine the 4 divisors; this is an\narithmetical and numerical process and one that cannot be done in\nordinary algebra We now have:\nlog₁₀ 49 3724 = 1 + log₁₀ 4 + log₁₀ 1 2 + log₁₀ 1 02\n+ log₁₀ 1 008 + log₁₀ 1 00043\nTo compute log₁₀ 1 00043 to 21 decimals we use\nlog₁₀e ·\nh - h²  +  h³  -  h⁴  +  h⁵  -  h⁶\n2\n3 4 5\n6\nwith h = 0 00043",
    "00043 Only 6 terms of the series relation are needed For,\nthe error is less than h⁷/7, which is less than 10⁻²¹/7, since h < ¹/₁₀₀₀ The machine uses the series relation in the form\nlog₁₀ (1 + h) = {([{(c₆h + c₅) h + c₄}h + c₃]h + c₂)h + c₁}h\nwhere\nc₁ = M, c₂ = -M/2, c₃ = M/3, ···,\nand M = log₁₀_e= 0 434294··· The 6 values of the c’s are also stored in the machine When any\nlogarithm is to be computed, the sum of the characteristic, of the 4\nlogarithms of the successive divisors, and of the first 6 terms of the\nseries relation gives the logarithm When any\nlogarithm is to be computed, the sum of the characteristic, of the 4\nlogarithms of the successive divisors, and of the first 6 terms of the\nseries relation gives the logarithm The maximum time required is 90\nseconds AN APPRAISAL OF THE CALCULATOR\nThe IBM Automatic Sequence-Controlled Calculator at Harvard is a\nlandmark in the development of machines that think Its capacity for\nmany problems for which it is suited is far beyond the capacity of a\nhundred human computers Speed\nThe time required in the machine for adding, subtracting,\n\n\ntransferring, or clearing numbers is ³/₁₀ of a second This is the time\nof one machine cycle or of reading one coding line Multiplication\ntakes at the most 6 seconds, and an average of 4 seconds Division\ntakes at the most 16 seconds, and an average of 11 seconds Each,\nhowever, requires only 3 lines of coding, or ⁹/₁₀ of a second’s\nattention from the sequence mechanism; interposed operations fill the\nrest of the time To calculate a logarithm, an exponential, or a sine to\nthe full number of digits obtainable by means of the automatic\nsubroutine takes at the most 90, 66, and 60 seconds, respectively To\nget three 24-digit numbers from feeding a punch card takes ⅓ second To punch a number takes from ½ second up to 3 seconds To print a\nnumber takes from 1½ seconds up to 7 seconds Cost and Value\nThe cost of the machine was somewhere near 3 or 4 hundred\nthousand dollars, if we leave out some of the cost of research and\ndevelopment, which would have been done whether or not this\nparticular machine had ever been built A staff of 10 men, consisting\nof 4 mathematicians, 4 operators, and 2 maintenance men, are needed\nto keep the machine running 24 hours a day This might represent, if\ncapitalized, another 1 or 2 hundred thousand dollars If a capital\nvalue of $500,000 is taken as equivalent to $50,000 a year, then the\ncost of the machine in operation 24 hours a day is in the\nneighborhood of $150 a day or $6 an hour The value of the machine, however, is very much greater If 100\nhuman beings with desk calculators were set to work 8 hours a day at\n$1 50 an hour, the cost would be $1200 a day, or 8 times as much Yet it is very doubtful that the work they could produce would equal\nthat turned out by the machine, either in quality or quantity, when\nthe machine is well suited to the problem Reliability\nBy reliability we mean the extent to which the results produced by\nthe machine can be relied on to be right The machine contains no\nbuilt-in device for making its operations reliable So, if we wish to\ncheck a multiplication, for example, we can do the multiplication a\nsecond time, interchanging the multiplier and the multiplicand But if,\n\n\nsay, digit 16 of the product were not transferring correctly, we would\nget the same wrong result both ways and we would not have a\nsufficient check Thus, when we set up a problem for the machine to\ndo, one of the big tasks we have is checking We have to work out\nways of making sure that the result, when we get it, is right and ways\nof instructing the machine to make the tests we want This is not a\nnew task Whenever you or I set out to solve a problem, we have to\nmake sure—usually by doing the problem twice, and preferably by\ndoing it a different way the second time—that our answer, when we\nget it, is correct One of the chief tasks for the mathematician, in\nmaking a sequence-control tape for the machine, is to put into it\nsufficient checks to make sure that the results are correct We can use a number of different kinds of partial checks: the check\ncounter; differences, and smoothness (see Supplement 2); watching the\nresults printed on typewriter 1; mathematical checks; comparison\nwith known specific values; etc In actual experience on the machine, human failures, such as\nfailure to state the problem exactly or failure to put it on the machine\ncorrectly, have given about as much trouble as mechanical failures The machine operates without mechanical failure about 90 to 95 per\ncent of the time The balance of the time the machine is idle while\nbeing serviced or repaired The machine is serviced by mechanics\ntrained and supervised at Harvard Often when we change the machine from one problem to another\nproblem, we find some kind of trouble Consequently, we need to\nwork out in detail the first part of any calculation placed on the\nmachine We then compare the results step by step with the results\nproduced by the machine Any mathematician working with the\nmachine needs considerable training in order to diagnose trouble\nquickly and guide the maintenance men to the place where repair or\nreplacement is needed Once you find the trouble, you can fix it\neasily Without disturbing the soldered connections, you can easily\npull out from its socket a relay that is misbehaving and plug in a new\nrelay With a screwdriver you can change a counter position—detach\nit from its socket and replace it by another one that is working\ncorrectly One “bug” that will long be remembered around the Laboratory\nwas a case involving a 5 that would incorrectly come in to a number\n\n\nevery now and then It did not happen often—only once in a while After a week of search the bug was finally located: the insulation on a\nwire that carried a 5 had worn through in one spot, and once in a\nwhile this wire would shake against a post that could carry current\nand took in the 5",
    "After a week of search the bug was finally located: the insulation on a\nwire that carried a 5 had worn through in one spot, and once in a\nwhile this wire would shake against a post that could carry current\nand took in the 5 Efficiency\nIn many respects, this machine is efficient and well-balanced Its\nreading and writing speed is close to its calculating speed We can\npunch or print a result on the average for every 10 additions or 1½\nmultiplications The memory of 72 numbers in the machine is\nextremely useful; a smaller memory is a serious limitation on the\nachievements of a computing machine The machine can do many\nkinds of arithmetic and logic It is well educated and can compute\nautomatically some rather complicated mathematical functions, like\nlogarithm or sine It has done difficult and important problems It has\ncomputed and tabulated (see Supplement 2) Bessel functions, definite\nintegrals, etc It can solve differential equations (see Chapter 5) and\nmany other problems in mathematics, physics, and engineering On the other hand, no calculator will ever again be built just like\nthis one, useful though it is Electronic computing is easily 100 times\nas fast as relay computing; nearly every future calculator will do its\ncomputing electronically Many other improvements will be made For\nexample, in this calculator, there are 72 addition-subtraction\nmechanisms, yet only one of these can be used at a time Also, the\nmachine has only one combined multiply-divide unit So we have to\norganize any computation with few multiplications, and with still\nfewer divisions, for they take longer still Until 1947, we had to organize any computation in this calculator\ninto one single fixed sequence of operations In other words, there was\nno way to move from one subroutine to another subroutine depending\non some indication that turned up in our computation Recently, the\nHarvard Computation Laboratory decided to remedy this condition\nand provided the Subsidiary Sequence Mechanism equivalent to 10\nsubroutines of 22 lines of coding each These are on relays and plug\nwires and may be called for by the sequence-control tape or by each\nother This provision has added greatly to the efficiency of the\ncalculator Whatever else can be said about the Harvard IBM Automatic\nSequence-Controlled Calculator, it must be said that this was the first\ngeneral-purpose mechanical brain using numbers in digit form and\nable to do arithmetic and logic in hundreds of thousands of steps one\nafter another And great credit must go to Professor Howard H Aiken\nof Harvard and the men of International Business Machines\nCorporation who made this great mechanical brain come into\nexistence Chapter 7\nSPEED—5000 ADDITIONS A SECOND:\nMOORE SCHOOL’S ENIAC\nELECTRONIC NUMERICAL INTEGRATOR AND\nCALCULATOR\nAnother of the giant brains that has begun to work is named\nENIAC This name comes from the initial letters of the full name,\nElectronic Numerical Integrator and Calculator Eniac was born in 1942\nat the Moore School of Electrical Engineering, of the University of\nPennsylvania, in Philadelphia Eniac’s father was the Ordnance\nDepartment of the U S Army, which provided the funds to feed and\nrear the prodigy In the short space of four years, Eniac grew to maturity, and in\nFebruary 1946 he began to earn his own living by electronic thinking Eniac promptly set several world’s records He was the first giant\nbrain to use electronic tubes for calculating He was the first one to\nreach the speed of 5000 additions a second He was the first piece of\nelectronic apparatus containing as many as 18,000 electronic tubes all\nfunctioning together successfully As soon as Eniac started thinking,\nhe promptly made relay calculators obsolete from the scientific point\nof view, for they have a top speed of perhaps 10 additions a second At the age of 5, he moved to Maryland at a cost of about $90,000,\nand his permanent home is now the Ballistic Research Laboratories at\nthe U S Army’s Proving Ground at Aberdeen, Md ORIGIN AND DEVELOPMENT\nIn the Department of Terrestrial Magnetism in the Carnegie\nInstitution of Washington, a great deal of information about the earth\nis studied Many kinds of physical observations are there gathered and\nanalyzed: electricity in the atmosphere, magnetism in the earth, and\nthe weather, for example In 1941, a physicist, Dr John W Mauchly,\nwas thinking about the great mass of numerical information they had\n\n\nto handle He became convinced that much swifter ways of handling\nthese numbers were needed He was certain electronic devices could\nbe used for computing at very high speeds, yet he found no one busy\napplying electronics in this field With hopes of finding some way of\ndeveloping electronic computing, he joined the staff of the Moore\nSchool of Electrical Engineering in the autumn of 1941 The Moore School in 1934 and 1935 had built a differential\nanalyzer; and, from that time on, the school had made a number of\nimprovements in it In 1941, with war imminent, the differential\nanalyzer was put hard at work calculating tables for the Army’s\nBallistic Research Laboratories These tables were mostly firing tables,\ntables of the paths along which projectiles travel when fired—\ntrajectories; obviously, you cannot fire a gun usefully, unless you know\nhow to aim it The amount of calculation of trajectories was so huge\nthat Dr Mauchly suggested that a machine using electronic tubes be\nconstructed to calculate them A good deal of discussion took place\nbetween men at the Moore School, men at the Ballistic Research\nLaboratories, and men from the Ordnance Department in Washington A contract for research into an electronic trajectory computer was\nconcluded with the Ordnance Department of the U S Army Mauchly\nand one of the young electronics engineers studying at Moore School,\nJ Presper Eckert, Jr , set to work on the design Gradually the design of a machine took form, and the crucial\nexperiments on equipment were completed In 1943, the design was\nsettled as a special-purpose machine to calculate trajectories Later on,\nthe group modified the plans here and there to enable the machine to\ncalculate a very wide class of problems A group of Moore School\nelectronics engineers and technicians during 1944 and 1945 built the\nmachine, using as much as possible standard radio tubes and parts Here, again, in spite of the successful progress of the electronic\nmachine, the rumor that it was a “white elephant” was allowed to\nspread in order to protect the work from prying enemy ears",
    "Here, again, in spite of the successful progress of the electronic\nmachine, the rumor that it was a “white elephant” was allowed to\nspread in order to protect the work from prying enemy ears GENERAL ORGANIZATION\nThe main part of Eniac consists of 42 panels, which are placed\nalong the sides of a square U Each of these panels is 9 feet high, 2\nfeet wide, and 1 foot thick They are of sheet steel, painted black, with\nswitches, lights, etc , mounted on them At the tops of all the panels\n\n\nare air ducts for drawing off the hot air around the tubes Large\nmotors and fans above the machine suck the heated air away through\nthe ducts There are also 5 pieces of equipment which can be rolled\nfrom place to place and are called portable, but there is no choice as to\nwhere they can be plugged in We shall call this equipment panels 43\nto 47 Panels\nNow what are these panels, and what do they do Each panel is an\nassembly of some equipment The names of the panels are shown in\nthe accompanying table The arrangement of Eniac at the Ballistic\nResearch Laboratories as shown in the table is slightly different from\nthe arrangement of Eniac at Moore School NAMES OF PANELS OF ENIAC\nPanel\nNo Name\n(and additional names in some cases)\n1\nInitiating Unit\n2\nCycling Unit\n3, 4\nMaster Programmer, panels 1, 2\n5\nAccumulator 1\n6\nAccumulator 2\n7\nAccumulator 3\n8\nAccumulator 4 (Quotient)\n9\nDivider-Square-Rooter\n10\nAccumulator 5 (Numerator I)\n11\nAccumulator 6 (Numerator II)\n12\nAccumulator 7 (Denominator—Square Root I)\n13\nAccumulator 8 (Denominator—Square Root II)\n14\nAccumulator 9 (Shift I)\n\n\n15\nAccumulator 10 (Shift II)\n16\nBlank panel for new unit (Converter)\n17\nAccumulator 11 (Multiplier)\n18\nAccumulator 12 (Multiplicand)\n19-21\nMultiplier, panels 1, 2, 3\n22\nAccumulator 13 (Left-Hand Partial Products I)\n23\nAccumulator 14 (Left-Hand Partial Products II)\n24\nAccumulator 15 (Right-Hand Products I)\n25\nAccumulator 16 (Right-Hand Products II)\n26\nBlank panel for new unit (100 Registers)\n27\nAccumulator 17\n28\nAccumulator 18\n29\nAccumulator 19\n30\nAccumulator 20\n31, 32\nFunction Table 1, panels 1, 2\n33, 34\nFunction Table 2, panels 1, 2\n35, 36\nFunction Table 3, panels 1, 2\n37-39\nConstant Transmitter, panels 1, 2, 3\n40-42\nPrinter, panels 1, 2, 3\n43-45\nPortable Function Tables A, B, and C\n46\nIBM Card Reader\n47\nIBM Summary Punch\nNote: The accumulators from which a number can\nbe sent to the printer are now accumulators 1,\n2, and 15 to 20 In reading over the table, we find a number of words that need\nexplaining Some of the explanation we can give in the summary of\nthe units of Eniac:\n\n\nSUMMARY OF UNITS OF ENIAC\nQuantity\nDevice\nSignificance\n20\nAccumulators\nStore, add, and subtract n\n1\nMultiplier\nMultiplies\n1\nDivider-Square-Rooter\nDivides, and obtains twice\n \n \n  of a number (see Suppl\n3\nFunction Tables\nPart of the memory, for re\n \n \n  tables of numbers\n1\nConstant Transmitter\nStores numbers from the c\n \n \n  from hand-set switches\n1\nPrinter\nPunches machine results i\n1\nCycling Unit\nControls the timing of the\n \n \n  of the machine\n1\nInitiating Unit\nHas controls for starting a\n \n \n  for clearing, etc 1\nMaster Programmer\nHolds the chief controls fo\n \n \n  the various parts of the\nAn accumulator is a storage counter It can hold a number; it can\nclear a number; it can transmit a number either positively or\nnegatively; and it can receive a number by adding the number in and\nthus holding the sum of what it held before and the number received Eniac when first built had only 20 accumulators, and so it could\nremember only 20 numbers at one time (except for constant numbers\nset in switches) This small memory was the most serious drawback of\nEniac; panel 26 was designed, therefore, to provide a great additional\nmemory capacity The divider-square-rooter, as its name tells, is a mechanism that can\ndivide and that can find twice the square root of a number Eniac is\none of the several giant brains that have had square root capacity\nbuilt into them, particularly since square root is needed for solving\n\n\ntrajectories Many panels of Eniac have double duty and some have triple duty For example, panel 24 is an accumulator, but it also (1) stores the\nright-hand partial products (see Supplement 2) of the multiplier and\n(2) was a register, when Eniac was at Moore School, from which\ninformation to be punched in the printer could be obtained Clearly, if\nwe have a multiplication to do, we cannot also use this accumulator\nfor storing a number that is to remain unchanged during the\nmultiplication Parts\nThe total number of parts in Eniac is near half a million, even if\nwe count electronic tubes as single parts There are over 18,800\nelectronic tubes in the machine It is interesting to note that only 10\nkinds of electronic tubes are used in the calculating circuits and only\nabout 60 kinds of resistors and 30 kinds of capacitors A resistor is a\ndevice that opposes the steady flow of electric current through it to a\ncertain extent (called resistance and measured in ohms) A capacitor is\na device that can store electrical energy up to a certain extent (called\ncapacitance and measured in farads) All these tubes and parts are\nstandard parts in radios All types are identified by the color labels\nestablished in standard radio manufacturing It is the combinations of\nthese parts, like the combinations of pieces in a chess game, that give\nrise to the marvelous powers of Eniac The combinations of parts at the first level are called plug-in units A plug-in unit is a standard box or tray or chassis made of sheet steel\ncontaining a standard assembly of tubes, wires, and other parts It can\nbe pushed in or pulled out of a standard socket with many\nconnections An example of a plug-in unit is a decade, or, more\nexactly, an accumulator decade This is just a counter wheel or decimal\nposition expressed in Eniac language: it can express successively all\nthe digits from 0 to 9 and then pass from 9 to 0, giving rise to a carry\nimpulse It is striking that a mechanical counter to hold 10 digits can\nbe made up of 10 little wheels, ¼ inch wide and an inch high But an\naccumulator in Eniac, to hold 10 digits, is a set of 10 decades each 2\ninches wide and 2½ feet high There are only about 20 kinds of plug-in units altogether Each\n\n\nplug-in unit is interchangeable with any other of the same kind So, if\na decade, for example, shows trouble, you can pull it out of its socket\nand plug in a spare decade instead Numbers\nNumbers in Eniac are of 10 decimal digits with a sign that may be\nplus or minus The decimal point is fixed However, when you are\nconnecting one accumulator with another, you can shift the decimal\npoint if you want to Also, 2 accumulators may be coupled together so\nas to handle numbers of 20 digits HOW INFORMATION GOES\nINTO THE MACHINE\nThere are three ways by which information—numbers or\ninstructions—can go into the Eniac Numbers can be put into the\nmachine by means of punch cards fed into the Card Reader, panel 46,\nor switches on the Constant Transmitter, panels 37 to 39 Numbers or\ninstructions can also go into the machine by means of the Function\nTables, panels 43 to 45 Here there are dial switches, which are set by\nhand Instructions can also go into the machine by setting the\nswitches, plugging the inputs and outputs, etc , of the wires or lines\nalong which numbers and instructions travel HOW INFORMATION COMES\nOUT OF THE MACHINE\nThere are two ways by which numerical information can come out\nof the machine Numbers can come out of the machine punched on\ncards by the Summary Punch, panel 47 They are then printed in\nanother room by means of a separate IBM tabulator Also, numbers\ncan be read out of the machine by means of the lights in the neon\nbulbs mounted on each accumulator You can read in the lights of a\npanel the number held by the accumulator, if the panel is not\ncomputing HOW INFORMATION IS MANIPULATED\nIN THE MACHINE\n\n\nEniac handles information rather differently from any other of the\nbig brains Instead of having only one bus or “railroad line” along\nwhich numbers can be sent, Eniac has more than 10 such lines They\nare called digit trays and labeled A, B, C, ··· Each contains 11 digit\ntrunk lines or digit trunks—10 to carry the digits of a number, and the\n11th to carry the sign Instead of having only one telegraph line along\nwhich instructions can be sent, Eniac has more than 100 such lines They are called program trunk lines or program trunks and labeled A1,\nA2, ···, A11, B1, B2, ···, B11, ···, etc They are assembled in groups of 11\nto a tray; the program trays, in fact, look just like the digit trays,\nexcept for their connectors and their purpose, which are different Below, we shall make clear how the program trays carry control\ninformation Now, actually, Eniac has many more trunk lines than we have just\nstated, for each of the lines we have mentioned can be divided into\nnumerous separate sections by the removal of plug connections How\nwe choose to do this depends on the needs of the problem, the space\nbetween the panels, the time when the line is used, etc Transferring Numbers, Adding,\nand Subtracting\nBasically, a number is represented in Eniac by an arrangement of\non and off electronic tube elements in pairs, called flip-flops There is\none flip-flop enclosed in a single tube (type 6SN7) for each value 0, 1,\n2, 3, 4, 5, 6, 7, 8, 9 for each of the 10 digits stored in an accumulator So we have at least 100 flip-flops for each accumulator, and thus at\nleast 100 electronic tubes are required to store 10 digits Actually, an\naccumulator needs 550 electronic tubes So we see that there is not\nvery much of a future in this type of arrangement The newer\nelectronic brains use different devices for storage of numbers In order to show what number is stored in an accumulator, there\nare 100 little neon bulbs mounted on the face of each accumulator\npanel Each bulb glows when the flip-flop that belongs to it is on For\nexample, suppose that the 4th decade in Accumulator 11 holds the\ndigit 7 Then the 7th flip-flop in that decade will be on, and all the\nothers will be off The 7th neon bulb for that decade will glow Now suppose that the number 7 is in the 4th decade in\n\n\nAccumulator 11 and is to be added into, say, the 4th decade in\nAccumulator 13 And suppose that it is to be subtracted from the 4th\ndecade in Accumulator 16 What do we do, and what will Eniac do First, we pick out 2 digit trays, say B and D Accumulator 11 has 2\noutputs, called the add output and the subtract output We plug B into\nthe add output and D into the subtract output Then we go over to\nAccumulators 13 and 16 They have 5 inputs, that is, 5 ways of being\nplugged to receive numbers from digit trunks These inputs are named\nwith Greek letters, α, β, γ, δ, ε We choose one input, say γ, for\nAccumulator 13, and we plug B into that input We choose one input,\nsay ε, for Accumulator 16, and we plug D into that input Now we have the “railroad” switching for numbers accomplished We have set up a channel whereby the number in Accumulator 11\nwill be routed positively into Accumulator 13 and negatively into\nAccumulator 16 Now let us suppose that, at some definite time fixed\nby the control, Accumulator 11 is stimulated to transmit and\nAccumulators 13 and 16 are conditioned to receive When this\nhappens, a group of 10 pulses comes along a direct trunk from the\ncycling unit, and a group of 9 pulses comes along another trunk We\ncan think of each pulse as a little surge of electricity lasting about 2\nmillionths of a second The ten-pulses, as the first group is called, are\n10 millionths of a second apart The nine-pulses, as the second group is\ncalled, are also 10 millionths of a second apart but are sandwiched\nbetween the ten-pulses When the 1st ten-pulse comes along, the 7th\nflip-flop in Accumulator 11 goes off, the 8th flip-flop goes on, the\nfollowing nine-pulse goes through and goes out on the subtract line to\nAccumulator 16 Then the 2nd ten-pulse comes along, the 8th flip-flop\ngoes off, the 9th flip-flop goes on, and the next nine-pulse goes out on\nthe subtract line to Accumulator 16 Now the decade sits at 9, and for\nthis reason the next ten-pulse changes an electronic switch (actually\nanother flip-flop) so that all later nine-pulses will go out on the add\nline This ten-pulse also turns off the 9th flip-flop and turns on the 0th\nflip-flop without causing any carry Now the 4th of the ten-pulses\ncomes along, turns the 0th flip-flop off, and turns the 1st flip-flop on,\nand the next nine-pulse goes out on the add line to Accumulator 13 The next 6 of the ten-pulses then come along and change Accumulator\n11 back to the digit 7 as before, and the next 6 of the nine-pulses go\nout to Accumulator 13 Thus Eniac has added 7 into Accumulator 13,\nhas added 2, the nines complement of 7 (see Supplement 2), into\n\n\nAccumulator 16, and has left Accumulator 11 holding the same\nnumber as before This is just the result that we wanted In this way, the nines complement of any digit in a decade is\ntransferred out along the subtract line, and the digit unchanged is\ntransmitted out along the add line As the pulses arrive at any other\naccumulator, they add into that accumulator Multiplying and Dividing\nEniac performs multiplication by a built-in table of the products in\nthe 10-by-10 multiplication table, using the method of left-hand\ncomponents and right-hand components (see Supplement 2) For\nexample, suppose that the 3rd digit of the multiplier is 7 and that the\n5th digit of the multiplicand is 6 Then, when Eniac attends to the 3rd\ndigit of the multiplier, the right-hand digit of the 42 = 6 × 7 is\ngathered in one accumulator, and the left-hand digit 4 is gathered in\nanother accumulator After Eniac has attended to all the digits of the\nmultiplier, then Eniac performs one more addition and transfers the\nsum of the left-hand digits into the right-hand digits accumulator Eniac does division in rather a novel way First, the divisor is\nsubtracted over and over until the result becomes negative or 0 Then\nthe machine shifts to the next column and adds the divisor until the\nresult becomes positive or 0 It continues this process, alternating\nfrom column to column For example, suppose that we divide 3 into\n84 in this way We have:\n____   _\n3 ) 84 ( 32\n-3\n+54\n -3\n+24\n -3  \n   -6\n  +3\n   -3\n  +3\n\n\n0\nAfter we subtract 3 the third time, the result becomes negative,-6; in\nthe next column, after we add 3 twice, the result becomes 0 The\nquotient is\n  _\n32, which is the same as 30 - 2, or 28;\nand 3 × 28 is 84 Thus the process checks Consulting a Table\nEniac has three Function Tables Here you can store numbers or\ninstructions for the machine to refer to Each Function Table has 104\narguments (see Supplement 2) For each argument, you can store 12\ndigits and 2 signs that may be plus or minus This capacity can be\ndevoted to one 12-digit number with a sign, or to two 6-digit numbers\neach with a sign, or to six 2-digit instructions The three Function\nTables are panels 43, 44, and 45 To put in the numbers or\ninstructions, you have to go over to these panels and set the numbers\nor instructions, digit by digit, turning dial switches by hand It is slow\nand hard to do this right, but once it is done, Eniac can refer to any\nnumber or instruction in any table in ¹/₁₀₀₀ of a second This is much\nfaster than the table reference time in any other of the giant brains\nbuilt up to 1948 Programming\nWe said above that Eniac has over 100 control lines or program\ntrunks along which instructions can be sent These instructions are\nexpressed as pulses called program pulses Now how do we make these\npulses do what we want them to do For example, how can we\ninstruct Accumulator 11 to add what it holds into Accumulator 13 On each unit of Eniac there are plug hubs or sockets (called\nprogram-pulse input terminals) to which a program trunk may be\nconnected A program pulse received here can make the unit act in\nsome desired way On each accumulator of Eniac, we find 12\nprogram-pulse input hubs Corresponding to each of these hubs, there\n\n\nis a nine-way switch, called a program-control switch The setting of\nthis switch determines what the accumulator will do when the\nprogram-pulse input hub belonging to the switch receives a program\npulse For instance, there are switch settings for: receive input on the\nα line, receive input on the β line, etc ; and transmit output on the\nadd line, etc There is even a switch setting that instructs the\naccumulator to do nothing, and this instruction may be both useful\nand important Now, in order that Accumulator 11 may transfer a number to\nAccumulator 13, we need: (1) a digit tray, say B, for the number to\ntravel along; (2) a program trunk line, say G3, to tell Accumulator 11\nwhen to send the number and Accumulator 13 when to receive it; and\n(3) certain plugging as follows:\n1 We plug from program trunk G3 into a\nprogram-pulse input hub, say No 5, of\nAccumulator 11;\n2 We plug from the same program trunk G3 into\na program-pulse input hub, say No 7, of\nAccumulator 13;\n3 We set program-control switch No 5 of\nAccumulator 11 to “add”;\n4 We set program-control switch No 7 of\nAccumulator 13 to some input, say γ 5 We plug from digit tray B into the add output of\nAccumulator 11 6 We plug from digit tray B into the γ input of\nAccumulator 13 Now, when the program pulse comes along line G3, it makes\nAccumulator 13 transmit additively along digit tray B into\nAccumulator 13",
    "Now, when the program pulse comes along line G3, it makes\nAccumulator 13 transmit additively along digit tray B into\nAccumulator 13 And that is the result that we wanted And that is the result that we wanted As each mechanism of Eniac finishes what it is instructed to do, it\nmay or may not put out a program pulse This pulse in turn may be\nplugged into any other program trunk line and may stimulate another\nmechanism to act Then, when this mechanism finishes, it too may or\nmay not put out a program pulse, and so on In general, there are two different ways to instruct Eniac to do a\n\n\nproblem One way is to set all the switches, plug all the connections,\netc , for the specific problem This is a long and hard task Very often,\neven with great care, it is done not quite correctly, and then the\nsettings must be carefully checked all over again A second method\n(called the von Neumann programming method) is to store all the\ninstructions for a problem in one or two function tables of Eniac and\nthen tell Eniac to read the function tables in sequence and to do what\nthey say The rest of the machine is then wired up in a standard\nfashion This method of instructing Eniac was proposed by Dr John\nvon Neumann of the Institute of Advanced Study at Princeton, N J J Eniac has been modified to the slight extent needed so that this\nmethod can be used when desired In this method, each instruction is\na selected one of 60 different standard instructions or orders—one of\nthem, for example, being “multiplication ” Each standard order is\nexpressed by 2 decimal digits The 60 standard orders are sufficient so\nthat Eniac can do any mathematical problem that does not overstrain\nits capacity Since each of the 3 Function Tables can hold 600 2-digit\ninstructions, the machine can hold a program of 1800 instructions\nunder the von Neumann programming method AN APPRAISAL OF ENIAC\nAS A COMPUTER\nAs a general-purpose calculating machine, Eniac suffers from\nunbalance That is to say, Eniac operates rapidly and successfully in\nsome respects, and slowly and troublesomely in other respects This is\naltogether to be expected, however, in a calculator as novel as Eniac\nand made to so large an extent out of standard radio parts It was\ncertainly better to finish a calculator like this one and then start on a\nnew one, as the Moore School of Electrical Engineering did, than to\nprolong design and construction indefinitely in order to make\nimprovements Speed\nEniac adds or subtracts very swiftly at the rate of 5000 a second Eniac multiplies at the rate of 360 to 500 a second Division, however,\nis slow, relatively; the rate is about 50 a second Reading numbers\nfrom punched cards, 12 a second for 10-digit numbers, is even slower As a result of these rates, you find, when you put a problem on Eniac,\nthat one division delays you as long as 100 additions or 8\nmultiplications Division might have been speeded somewhat by (1)\nrapidly convergent approximation (see Supplement 2) to the reciprocal of\nthe divisor and (2) multiplying by the dividend; this might have taken\n5 or 6 multiplication times instead of 8 Also, the use of a standard\nIBM punch-card feed and card punch slows the machine greatly One\nway to overcome this drawback might be to install one or two\nadditional sets of such equipment, which might increase input and\noutput speed Ease of Programming\nEniac has a very rapid and flexible automatic control over the\nprogramming of operations Eniac has more than 10 channels along\nwhich numbers can be transferred and more than 100 channels along\nwhich program-control pulses can be transferred There are many\nways for providing subroutines Eniac has the additional advantage\nthat there is no delay in giving the machine successive instructions: all\nthe instructions the machine may need at any time are ready at the\nstart of the problem, and indications occurring in the calculation can\nchange the routine completely All these advantages, however, are paid for rather heavily by the\nslow methods for changing programming You have to plug large\nnumbers of program trunk lines and digit trunk lines, or you have to\nset large numbers of switches, or both Also, when you wish to return\nto a previous problem, you must do all the plugging and switch\nsetting over again Many delays in the operation of the machine are\ndue to human errors in setting the machine for a new problem Here\nagain, we must remember that Eniac was originally designed as a\nspecial-purpose machine for solving trajectories To calculate a large\nfamily of trajectories very little changing of wires and switches would\nbe needed Memory\nThe most severe limitation on the usefulness of Eniac was, at the\noutset, the fact that it had only 20 registers for storing numbers There\nare large numbers of problems that cannot be simply handled with so\n\n\nsmall an internal memory Even the Harvard IBM calculator (see\nChapter 6) is often strained during a problem because of the number\nof intermediate results that must be stored for a time before\ncombining The Ballistic Research Laboratories, however, contracted\nfor extensions to Eniac to provide more memory and easier changing\nof instructions Reliability\nChecking results with Eniac is not easy There is no built-in\nguarantee that Eniac’s results are correct A large calculator can and\ndoes make both constant and intermittent errors Ways for checking\nwith Eniac are:\nMathematical, if and when available, and this will\nbe seldom Running the problem a second time, and this will,\nat most, prove consistency Deliberate testing of small parts of the problem,\nwhich is very useful and is standard practice\nbut leads only to a probability that the final\nresult is correct You can operate Eniac one addition at a time, and even one pulse at a\ntime, and see what the machine shows in its little neon bulbs This is a\nvery useful partial check Cost\nThe cost of Eniac is higher than that of some of the other large\nmechanical brains—over half a million dollars Because some of the\nwork was done at the Moore School by students, the cost was\nprobably less than it otherwise would have been The largest part of\nthe cost was the designing of the machine and the construction of the\npanels; the tubes were only a small portion of the cost The tubes used\nin the calculating circuits cost only 20 to 90 cents However, no later\nelectronic calculator need cost as much, for many improvements can\nnow be seen The power required for Eniac is about 150 kilowatts or about 200\n\n\nhorsepower, most of which is used for the heaters of the electronic\ntubes The largest number of electronic tubes mentioned for future\nelectronic calculators is about 3000, so we can see that they are likely\nto use less than a quarter of the power needed for Eniac Eniac will doubtless give a number of years of successful operation\nand be extremely useful for problems that employ its assets and are\nnot excluded by its limitations In fact, at the Ballistic Research\nLaboratories, for a typical week of actual work, Eniac has already\nproved to be equal to 500 human computers working 40 hours with\ndesk calculating machines, and it appears that soon two or three times\nas much work may be obtained from Eniac Chapter 8\nRELIABILITY—NO WRONG RESULTS:\nBELL LABORATORIES’\nGENERAL-PURPOSE RELAY CALCULATOR\nIn 1946, Bell Telephone Laboratories in New York finished two\ngeneral-purpose relay calculators—mechanical brains They were twins One was shipped in July 1946 to the National Advisory Committee for\nAeronautics at Langley Field, Virginia The other, after some months\nof trial operation, was shipped in February 1947 to the Ballistic\nResearch Laboratories at the U",
    "The other, after some months\nof trial operation, was shipped in February 1947 to the Ballistic\nResearch Laboratories at the U S Army’s Proving Ground, Aberdeen,\nMd Each machine is remarkably reliable and versatile It can do a wide\nvariety of calculations in a great many different ways Yet the\nmachine never takes a new step without a check that the old step was\ncorrectly performed There is, therefore, a chance of better than\n99 999,999,999 per cent that the machine will not let a wrong result\ncome out The automatic checking, of course, does not prevent (1)\nhuman mistakes—for example, instructing the machine incorrectly—\nor (2) mechanical failures, in which the machine stops dead in its\ntracks, letting no result at all come out ORIGIN AND DEVELOPMENT\nIn Bell Telephone Laboratories the telephone system of the country\nis continually studied Their research produced the common type of\ndial telephone system: a masterly machine for selecting information Now when a telephone engineer studies an electric circuit, he\noften finds it very convenient to use numbers in pairs: like 2, 5\nor-4,-1 Here the comma is a separation sign to keep the two numbers\nin the pair separate and in sequence Mathematicians call numbers of\nthis kind, for no very good reason, complex numbers; of course, they\nare far less complex than why the sun shines or why plants grow When Bell Laboratories test the design of new circuits, girl\n\n\ncomputers do arithmetic with complex numbers Addition and\nsubtraction are easy: each means two operations of addition or\nsubtraction of ordinary numbers For example, 2, 5, plus-4,-1 equals\n2-4, 5-1, which equals-2, 4 And 2, 5 minus-4,-1 is the same as 2, 5\nplus 4, 1; and this equals 2 + 4, 5 + 1, which equals 6, 6 Multiplication of two complex numbers, however, is more work If a,\nb and c, d are two complex numbers, then the formula for their\nproduct is (a × c)-(b × d), (a × d) + (b × c) To get the answer, we\nneed 4 multiplications, 1 subtraction, and 1 addition Division of two\ncomplex numbers requires even more work If a, b and c, d are two\ncomplex numbers, the formula for the quotient of a, b divided by c, d\nis:\n[(a × c) + (b × d)] ÷ [(c × c) + (d × d)],\n[(b × c) - (a × d)] ÷ [(c × c) + (d × d)]\nFor example,\n, -1) = [(2 × -4 = -8) + (5 × -1 = -5)] ÷ [(-4 × -4 = 16) + (-1 \n[(5 × -4 = -20) - (2 × -1 = -2)] ÷ [16 + 1] = -(¹³/₁₇), -(¹⁸/₁₇)\nThus, division of one complex number by another needs 6\nmultiplications, 2 additions, 1 subtraction, and 2 divisions of ordinary\nnumbers—and always in the same pattern or sequence The Complex Computer\nAbout 1939, an engineer at Bell Telephone Laboratories in New\nYork, Dr George R Stibitz, noticed the great volume of this pattern\narithmetic He began to wonder why telephone switching equipment\ncould not be used to do the multiplications and divisions\nautomatically He decided it could All that was necessary was that\nthe relays (see Chapter 2) used in regular telephone equipment should\nhave a way of remembering and calculating with numbers Regular\ntelephone equipment would take care of the proper sequence of\noperations Regular equipment known as teletypewriters would print\nthe numbers of the answer when it was obtained A teletypewriter\nconsists essentially of a typewriter that may be operated by electrical\nimpulses It has a keyboard that may produce electrical impulses in\nsets corresponding to letters; and it can receive or transmit over wires",
    "It has a keyboard that may produce electrical impulses in\nsets corresponding to letters; and it can receive or transmit over wires Dr Dr Stibitz coded the numbers: each decimal digit was matched up\nwith a group of four relays in sequence, and each of these relays could\nbe open or closed If 0 means open and 1 means closed, here is the\npattern or code that he used:\nDecimal\nDigit\n Relay Code \n0\n0011\n1\n0100\n2\n0101\n3\n0110\n4\n0111\n \n5\n1000\n6\n1001\n7\n1010\n8\n1011\n9\n1100\nWith regular telephone relays and regular telephone company\ntechniques, Dr Stibitz and Bell Telephone Laboratories designed and\nconstructed the machine It was called the Complex Computer and was\nbuilt just for multiplying and dividing complex numbers Six or eight\npanels of relays and wires were in one room Two floors away, some\nof the girl computers sat in another room, where one of the\nteletypewriters of the machine was located When they wished, they\ncould type into the machine’s teletypewriter the numbers to be\nmultiplied or divided In a few seconds back would come the answer In fact, there were two more computing rooms where teletypewriters\nof the machine were stationed To prevent conflicts between stations,\nthe machine had a circuit like the busy signal from a telephone In 1940, a demonstration of the Complex Computer took place: the\ncomputing panels remained in New York, but the teletypewriter input-\noutput station was set up at Dartmouth College in Hanover, N H Mathematicians gave problems to the machine in Dartmouth, it solved\nthem in New York, and it reported the answers in Dartmouth Special-Purpose Computers\nWith this as a beginning, Bell Laboratories developed another\nmachine for a wide variety of mathematical processes called\ninterpolating (see Supplement 2) Then, during World War II, Bell\nLaboratories made more special-purpose computing machines They\nwere used in military laboratories charged with testing the accuracy\nof instruments for controlling the fire of guns These computers took\nin a set of gun-aiming directions put out by the fire-control instrument\nin some test They also took in the set of observations that went into\nthe fire-control instrument on that test Then they computed the\ndifferences between the gun-aiming produced by the fire-control\ninstrument and the gun-aiming really required by the observations Using these differences, the fire-control instrument could be adjusted\nand corrected These special-purpose computers were also useful in\nchecking the design of new fire-control instruments and in checking\nchanges due to new types of guns or explosives Regularly, after each of these special-purpose computers was\nfinished, people began to put other problems on it It seemed to be\nfated that, as soon as you had made a machine for one purpose, you\nwanted to use it for something else Accordingly, in 1944, two\nagencies of the U S Government together made a contract with Bell\nTelephone Laboratories for two general-purpose relay computers These two machines were finished in 1946 and are twins ORGANIZATION OF THE\nGENERAL-PURPOSE COMPUTER\nWhen a man sits down at a desk to work on a computation, he has\nsix things on his desk to work with: a work sheet; a desk calculator, to\nadd, subtract, multiply, and divide; some rules to be followed; the\ntables of numbers he will need; the data for the problem; and an\nanswer sheet In his head, he has the capacity to make decisions and\nto do his work in a certain sequence of steps These seven subdivisions\nof calculation are all found in the Bell Laboratories’ general-purpose\nrelay computer The general-purpose computer is a computing system,\n\n\nin fact, more than it is a single machine The part of the system which\ndoes the actual calculating is called, in the following paragraphs, the\ncomputer, or else, since it is in two halves, Computer 1 and Computer 2 Physical Units\nThe computing system delivered to the Ballistic Research\nLaboratories fills a room about 30 by 40 feet and consists of the\nfollowing:\n2 computers: panels of relays, wiring, etc , which\nadd, subtract, multiply, divide, select, decide,\ncontrol, etc 4 problem positions: tables each holding 12\nmechanisms for feeding paper tape, which read\nnumbers and instructions punched on tape and\nconvert them into electrical impulses 2 hand perforators: keyboard devices for punching\ninstructions and numbers on paper tape 1 processor: a table holding mechanisms for\nfeeding 2 paper tapes and punching a third\npaper tape, used for checking numbers and\ninstructions punched on tape 2 recorders: each a table holding a teletypewriter,\na tape punch, and a tape feed, used for\nrecording answers and, if necessary, consulting\nthem again The 2 computers correspond to the work sheet, the desk calculator,\nand the man’s capacity to make decisions and to carry out a sequence\nof steps The 4 problem positions correspond to the problem data, the\nrules, and the tables of numbers The 2 recorders correspond to the\nanswer sheet The 2 hand perforators and the processor are auxiliary\nmachines: they translate the ordinary language of arithmetic into the\nmachine language of punched holes in paper tape This is the computing system as organized for the Ballistic\nResearch Laboratories at Aberdeen The one for the National Advisory\nCommittee for Aeronautics has only 3 problem positions The\ncomputer system may, in fact, be organized with 1 to 10 computers\n\n\nand with 1 to 20 problem positions The great bulk of this computing system, like the mechanical\nbrains described in previous chapters, is made up of large numbers of\nidentical parts of only a few kinds These are: standard telephone\nrelays; wire; and standard teletype transmitters, mechanisms that read\npunched paper tape and produce electrical impulses Numbers\nThe numbers that the Bell machine contains range from 0 1000000\nto \n0 9999999 \ntimes \na \npower \nof \n10 \nvarying \nfrom\n10,000,000,000,000,000,000 to 0 000,000,000,000,000,000,1, or, in\nother words, from 10¹⁹ to 10⁻¹⁹ The machine also contains zero and\ninfinity: zero arises when the number is smaller than 10⁻¹⁹, and\ninfinity arises when the number is equal to or greater than\n9,999,999,000,000,000,000 (See Supplement 2 )\nThe system used in the machine to represent numbers on relays is\ncalled biquinary—the bi-, because it is partly twofold like the hands,\nand the -quinary because it is partly fivefold like the fingers This\nsystem is used in the abacus (see Chapter 2 and Supplement 2) In the\nmachine, for each decimal digit, 7 relays are used These relays are\ncalled the 00 and 5 relays, and the 0, 1, 2, 3, and 4 relays If, as\nbefore, 0 indicates a relay that is not energized and 1 indicates a relay\nthat is energized, then each decimal digit is represented by the\npositioning of the 7 relays as follows:\nDecimal\nDigit\n \n Relays \n \n 00 \n 5 \n 0 1 2 3 4 \n0\n1\n0\n1 0 0 0 0\n1\n1\n0\n0 1 0 0 0\n2\n1\n0\n0 0 1 0 0\n3\n1\n0\n0 0 0 1 0\n4\n1\n0\n0 0 0 0 1\n \n\n\n5\n0\n1\n1 0 0 0 0\n6\n0\n1\n0 1 0 0 0\n7\n0\n1\n0 0 1 0 0\n8\n0\n1\n0 0 0 1 0\n9\n0\n1\n0 0 0 0 1\nThen, for any decimal digit, one and only one of the 00 and 5 relays is\nenergized, and one and only one of the 0, 1, 2, 3, and 4 relays is\nenergized If more or less than exactly one relay in each set is\nenergized, then the machine knows that it has made a mistake, and it\nstops dead in its tracks Thus any accidental failure of a relay is at\nonce caught, and the chance of two compensating failures occurring\nat the same time is extremely small HOW INFORMATION GOES\nINTO THE MACHINE\nIn order to put a problem into this machine—just as with the other\nmachines—first a mathematician who knows how the problem is to be\nsolved, and who knows how to organize it for the machine, lays out\nthe scheme of calculation Then, a girl goes to one of the hand\nperforators Sitting at the keyboard, she presses keys and punches out\nfeet or yards of paper tape expressing the instructions and numbers\nfor the calculation Each character punched—digit, letter, or sign—has\none or more of a maximum of 6 holes across the tape Another girl,\nusing the other hand perforator, also punches out the instructions and\nnumbers for the calculation If she wishes to erase a wrong character,\nshe can press an erase key that punches all 6 holes, and then the\nmachine will pass by this row as if it were not there Three kinds of tapes are produced for the machine:\nProblem \ntapes, \nwhich \ncontain \ninformation\nbelonging to the particular problem Table tapes, which contain tables of numbers to be\nreferred to from time to time Routine tapes, which contain the program, or\nroutine, or sequence of steps that the machine\n\n\nis to carry out In each of these tapes one character takes up ⅒ of an inch along the\ntape In the case of a table tape, however, an ordinary 1-digit number\nrequires 4 characters on the tape, and a 7-digit number requires 11\ncharacters on the tape On a table tape there will be on the average\nabout 1 inch of tape per number The Processor\nThe two paper tapes prepared on the perforator should agree But\nwhether or not they agree, a girl takes them over to the processor and\nputs them both in The processor has two tape feeds, and she puts one\ntape on each and starts the machine The processor compares them\nrow by row, making sure that they agree, and punches a new tape row\nby row If the two input tapes disagree, the processor stops You can\nlook to see which tape is right, and then you can put the correct\npunch into the new tape with a keyboard mounted on the processor As the processor compares the two input tapes, it also converts any\nnumber written in the usual way into machine language For example,\nthe processor will automatically translate 23,188 into + 231 8800 ×\n10⁺⁵ The processor also puts in certain safeguards If you want it to,\nthe processor will also make a printed record of a tape Also, when a\ntape becomes worn from use in the machine, you can put it into the\nprocessor and make a fresh copy The Problem Positions\nNext, the girl takes the punched tape made by the processor over\nto a problem position that is idle Two of the problem positions are\nalways busy guiding the two computers The other two problem\npositions stand by, ready to be loaded with problems A problem position looks like a large covered-over table Under the\ncovers are 12 tape feeds, or tape transmitters All these transmitters\nlook exactly alike except for their labels and consist of regular\nteletype transmitters Six-hole paper tape can be fed into any\ntransmitter Six metal fingers sense the holes in the paper tape and\ngive out electrical impulses at proper times At the front of the\nproblem position is a small group of switches that provide complete\ncontrol over the problem while it is on the machine These are\n\n\nswitches for starting, disconnecting, momentary stop, etc One tape transmitter is the problem tape transmitter It takes in all\nthe data for the problem such as the starting numbers The first thing\nit does at the start of a problem is to check (by comparing tape\nnumbers) that the right tapes are in the right feeds Five transmitters are routine tape transmitters Each of these takes\nin the sequence of computing steps The routine tapes also contain\ninformation for referring to table tapes and instructions for printing\nand punching tape The machine can choose according to instructions\nbetween the five routine tapes and can choose between many\ndifferent sections on each tape Therefore, we can use a large number\nof different routines in a calculation, and this capacity makes the\nmachine versatile and powerful Six transmitters are table tape transmitters They read tables of\nnumbers when directed to A table tape can be as long as 100 feet and\nwill hold numbers at the rate of 1 inch per number, so that about\n1200 numbers of seven decimal digits can be stored on a table tape When we look up a number in a table, such as the following,\n \n2½\n3\n3½\n ··· \n1   1 02500   1 03000   1 03500   \n2  1 05063\n1 06090\n1 07123\n \n3  1 07689\n1 09273\n \n···\n4  1 10381\n···\n···\n \n5  1 13141\n···\n \n \n6  1 15969\n \n7 \n \n \n···\n \n8 \n \n···\n \n \n9 \n···\n \n10 \n \n··· \n···\n \nwe look along the top and down the side until we find the column and\n\n\nrow of the number we are looking for These are called the arguments\nof the tabular value that we are looking for (see Supplement 2) Now\nwhen we put this table on a tape to go into the Bell Laboratories\nmachine, we write it all on one line, one figure after another, and we\npunch it as follows:\n2-½  1-5    1 02500    1 05063    1 07689    1 10381   \n1 13141\n6-10    1 15969    ···      11-15    ···    ···      ···    3   1-5\n1 03000    1 06090    ···    ···    3½    1-5    1 03500 ···\nYou will notice that the column labels 2½, 3, 3½ have been put on\nthe tape, each in front of the group of numbers they apply to The row\nlabels 1 to 5, 6 to 10, ··· have also been put on the tape, each in front\nof the group of numbers they apply to The appropriate column and\nrow numbers, or arguments, must be put often on every table tape, so\nthat it is easy for the machine to tell what part of the table tape it is\nreading In the Bell Laboratories machine, we do not need to put equal\nblocks of arguments like 1-5, 6-10 ··· on the table tape Instead we can\nput individual arguments like 1, 2, 3, 4 ···, or, if we wish, we can use\nblocks of different sizes, like 1-3, 4-15, 16-30··· For some tables, such\nas income tax tables, it is very useful to have varying-sized blocks of\narguments The machine, when hunting for a certain value in the\ntable, makes a comparison at each block of arguments The machine needs about 6 seconds to search a foot of tape If we\nwant to set up a table economically, therefore, we need to consider\nthe average length of time needed for searching",
    "If we\nwant to set up a table economically, therefore, we need to consider\nthe average length of time needed for searching Fig 1 Scheme of a recorder HOW INFORMATION COMES\nOUT OF THE MACHINE\nAt either one of the two recorders (Fig 1), information comes out\nof the machine, either in the form of printed characters or as punched\ntape The recorder consists of a printer, a reperforator, and a tape\ntransmitter One recorder table belongs to each computer and records\n\n\nthe results it computes The printer is a regular teletypewriter\nconnected to the machine It translates information produced by the\nmachine as electrical impulses and prints the information in letters\nand digits on paper The reperforator is an automatic tape punch It\ntranslates information produced by the machine in the form of\nelectrical impulses and punches the information on paper tape Next\nto the tape punch is a tape transmitter After the tape comes through\nthe punch, it is fed into the transmitter Here the machine can hunt\nfor a previous result punched in the tape, read that result, and use it\nagain HOW INFORMATION IS MANIPULATED\nIN THE MACHINE\nThe main part of the computing system consists of 27 large frames\nloaded with relays and wiring, called the computer, or Computer 1 and\nComputer 2 In this “telephone central station,” all the “phone calls”\nfrom one number to another are attended to There are 8 types of\nthese frames in the computer:\nFrames\nNumber\nStoring register frames\n6\nPrinter frames\n2\nProblem frames\n2\nPosition frames\n2\nCalculator frames\n6\nControl frames\n2\nRoutine frames\n4\nBTL (Block-Trig-Log) frames\n2\nPermanent table frames\n1\n  Total\n27\nIn most but not quite all respects, the two halves, Computer 1 and\nComputer 2, can compute independently The storing register frames\nhold enough relays to store 30 numbers The registers for these\n\n\nnumbers are named A, B, C, D, ···, M, N, O in two groups of 15 each One group belongs to Computer 1 and the other to Computer 2 In\neach Computer, the calculator frames hold enough relays for storing\ntwo numbers (held in the X and Y registers) and for performing\naddition, subtraction, multiplication, division, and square root In\neach Computer, the problem frame stores the numbers that are read off\nthe problem tape and the table tapes, and the printer frame stores the\nnumbers that are read into the printer The printer frame also stores\nindications, for example, the signs of numbers, plus or minus, for\npurposes of combining them These frames also hold the relays that\ncontrol the printer, the problem tape, and the table tapes Jointly for\nboth Computers, the position frames connect a problem in some\nproblem position to a Computer that becomes idle For example, one\nproblem may finish in the middle of the night; the machine\nautomatically and unattended switches to another problem position\nand proceeds with the instructions there contained A backlog of\ncomputing on hand can be stored in two of the problem positions,\nwhile the other two control the two Computers In each Computer, the\nroutine frames hold the relays that make the Computer follow the\nroutine instructions Jointly for both Computers, the remaining frames\n—the control frames, the BTL frames, and the permanent table frames—\nhold the relays that control: the alarms and lights for indicating\nfailures; some circuits called the BTL controls; the tape processor; and\nthe mathematical tables that are permanently wired into the machine The permanent table frames hold the following mathematical\nfunctions (see Supplement 2): sine, cosine, antitangent, logarithm, and\nantilogarithm Storing\nNumbers can be stored in the machine in the 30 regular storing\nregisters of both Computers together They can also be stored, at the\ncost of tying up some machine capacity, in the other registers: the 4\ncalculator registers, the 2 problem registers, the 2 table registers, and\nthe 2 printer registers Numbers can also be punched out on tape, in\neither of the two printers, and later read again from the tape Labels\nidentifying the numbers can also be punched and read again from the\ntape Each register in the machine stores a number in the biquinary\n\n\nnotation, as explained above In programming the machine, after\nmentioning a register it is necessary—as a part of the scheme for\nchecking—to tell the machine specifically whether to hold the number\nin the register or to clear it Addition and Subtraction\nThe calculator frames can add two numbers together, if so\ninstructed in the routine tape Suppose that the two numbers are in\nthe registers B and D and that we wish to put the sum in register F Suppose that we wish to clear the D number but hold the B number\nafter using them The code on the routine tape is B H + D C = F H\nand C coming right after the names of the registers always designate\n“hold” and “clear,” respectively The calculator frames can, likewise, subtract a number The\nroutine instruction B H-D C = F means:\nTake the number in register B (hold it);\nsubtract the number in D (clear it);\nput the result in F\nMultiplication and Division\nThe calculator frames perform multiplication by storing the digits\nof the multiplier, adding the multiplicand over and over, and shifting,\nuntil the product is obtained However, if the multiplier is 1989, for\nexample, the calculator treats it as 2000-11 This short-cut applies to\ndigits 6, 7, 8, 9 and cuts the time required for multiplying The\nroutine instruction is B H × D C = F The calculator performs division by repeated subtraction The\nroutine instruction is B H ÷ D C = F The operation signs +,-, ×, ÷\nactually appear on the keyboard of the perforator and on the printed\ntape produced by the printer Discrimination\nDiscrimination is the term used in the Bell Laboratories computer\nfor what we have previously called selection, or comparison, or\n\n\nsequencing The discriminator is a part of the calculator that compares\nor selects or decides—“discriminates ” The discriminator can decide\nwhether a number is zero or not zero In the language of the algebra of\nlogic (see Chapter 9 and Supplement 2), if a is a number, the\ndiscriminator can find T(a = 0) The discriminator can also decide\nwhether a number is positive or negative In the language of logic, it\ncan find T(a > 0) or T(a < 0) The actions that a discriminator can\ncause to be taken are:\nStop the machine Stop the problem, and proceed to another problem Stop the routine going on, and proceed with a new routine Permit printing, or prevent printing; etc In this way the discriminator can:\nDistinguish between right and wrong results Tell that a certain result is impossible Recognize a certain result to be the answer Control the number of repetitions of a formula Change from one formula to another formula Check a number against a tolerance; etc PROBLEMS\nAmong the problems that have been placed on the machine\nsuccessfully are: solving the differential equation of a trajectory (see\nChapter 5) and solving 32 linear simultaneous equations in 32 unknowns\n(see Supplement 2) In the second case, the routine tapes were\ndesigned to apply equally well to 11 to 100 linear equations in 11 to\n100 unknowns However, the machine can do a very broad class of\nproblems, including, for example, computing a personal income tax This calculation with all its complexity of choices cannot be placed on\nany of the mechanical brains described in previous chapters The\nmachine can, of course, be used to calculate any tables that we may\nwish to refer to AN APPRAISAL OF THE CALCULATOR\n\n\nThe Bell Telephone Laboratories general-purpose relay computer is\nprobably the best mechanical brain made up to the end of 1947, in\nregard to the two important factors of reliability and versatility Reliability\nThe machine produces results that are practically 100 per cent\nreliable, for the machine checks each step before taking the next one The checking principle is that exactly a certain number of relays must\nbe energized For example, as we said before, for each decimal digit\nthere are 7 relays Exactly 2 of these relays must be energized—no\nmore, no less If this does not happen, the machine stops at once\nwithout losing any numbers Lights shine for many circuits in the\ncontrol panel, and, if you compare what they ought to show with\nwhat they do show, you can usually find at once the location of the\nmistake The trouble may be a speck of dirt between two contact\npoints on a relay, and, when it is brushed away, the machine can go\nright ahead from where it stopped",
    "The trouble may be a speck of dirt between two contact\npoints on a relay, and, when it is brushed away, the machine can go\nright ahead from where it stopped According to a statement by Franz\nL Alt, director of the computing laboratory at the Ballistic Research\nLaboratories, in December 1947, “the Bell machine had not given a\nsingle wrong result in eight months of operation, except when\noperators interfered with its normal running ”\nTo guard against the risk of putting tapes in the wrong\ntransmitters, the machine will check by the instructions contained in\nthe tapes that the right tapes are in the right places Time Required\nThe time required to do problems on this mechanical brain is\nperhaps longer than on the others The numbers are handled digit by\ndigit on the input tapes, and the typewriter in the recorder moves\nspace by space in order to get to the proper writing point These are\nslow procedures The speeds of numerical operation are: addition, ³/₁₀\nsecond; multiplication, 1 second on the average; division, 2 7 seconds\non the average; square root, 4 5 seconds on the average; logarithm,\nabout 15 seconds Staff\n\n\nIn order to operate the machine, the staff required is: one\nmaintenance man; one mathematical engineer; about six girls for\npunching tape, etc , depending on the number of problems to be\nhandled at the rate of about one problem per week per girl Unlike\nany of the other mechanical brains built by the end of 1947, this\nmachine will run unattended Maintenance\nThe relays in the machine will operate for years with no failure;\nthey have the experience of standard telephone techniques built into\nthem Under laboratory conditions this type of relay had by 1946\noperated successfully much more than 100 million times The tape\nfeeding and reading equipment in the machine may be maintained by\nperiodic inspection and service The total number of teletype\ntransmitters in the machine is 38 If one fails, it is easy to plug in a\nspare The total power required for the machine is about 28 horsepower Batteries are furnished so that, if the power supply should be\ninterrupted, the machine can still operate for as long as a half-hour Cost\nThe cost of production of this machine in the size of 4 problem\npositions and 2 computers has been roughly estimated as half a\nmillion dollars This cost includes material, manufacture, installation,\nand testing No development cost is included in this figure Instead,\nthe cost of development has been reckoned as squaring with patents\nand other contributions of the work to the telephone switching art It is unlikely that the general-purpose relay computer will be\nmanufactured generally The pressure of orders for telephones, the\nneed to catch up with the backlog of demand, and the development of\nelectronic computers—all indicate that the Bell system will hardly go\nfurther with this type of computer In an emergency, however, the\nBell system would probably construct such machines for the\ngovernment, if requested In the meantime, many principles first used\nin the general-purpose relay computer are likely to find applications\nin telephone system work In fact, a present major development being\npursued in the telephone sections of Bell Laboratories is the\n\n\napplication of the computer principles to the automatic computation\nof telephone bills Chapter 9\nREASONING:\nTHE KALIN-BURKHART\nLOGICAL-TRUTH CALCULATOR\nSo far we have talked about mechanical brains that are\nmathematicians They are fond of numbers; their main work is with\nnumbers; and the other kinds of thinking they do are secondary We\nnow come to a mechanical brain that is a logician It is fond of\nreasoning—logic; its main work is with what is logically true and\nwhat is logically false; and it does not handle numbers This\nmechanical brain was finished in June 1947 It is called the Kalin-\nBurkhart Logical-Truth Calculator As its name tells, it calculates logical\ntruth Now what do we mean by that TRUTH\nTo be true or false is a property of a statement Usually we say that\na statement is true when it expresses a fact For example, take the\nstatement “Salt dissolves in water ” We consider this statement to be\ntrue because it expresses a fact Actually, in this case we can roughly\nprove the fact ourselves We take a bowl, put some water in it, and\nput in a little salt After a while we look into the water and notice that\nno salt whatever is to be seen Of course, this statement, like many another, occurs in a context\nwhere certain things are understood One of the understandings here,\nfor example, is “a small amount of salt in a much larger amount of\nwater ” For if we put a whole bag full of salt in just a little water, not\nall the salt will dissolve Nearly every statement occurs in a context\nthat we must know if we are to decide whether the statement is true\nor false LOGICAL TRUTH\n\n\nLogical truth is different from ordinary truth With logical truth we\nappeal not to facts but to suppositions Usually we say that a\nstatement is logically true when it follows logically from certain\nsuppositions In other words, we play a game that has useful, even\nwonderful, results The game starts with “if” or “suppose” or “let us\nassume ” While the game lasts, any statement is logically true if it\nfollows logically from the suppositions For example, let us take five statements:\n1 “The earth is flat like a sheet of paper ”\n2 “The earth is round like a ball ”\n3 “John Doe travels as fast as he can, without turning\nto left or to right, for many days ”\n4 “John Doe will fall off the earth ”\n5 “John Doe will arrive back at his starting point ”\nLet us also take a certain context in which: We know what we mean\nby such words as “earth,” “flat,” “falling,” etc ; we have other\nstatements and understandings such as “if John Doe walks off the\nedge of a cliff, he will fall,” “a flat sheet of paper has an edge,” etc In\nthis context, if statements 1 and 3 are supposed, then statement 4 is\nlogically true On the other hand, if statements 2 and 3 are supposed,\nthen statement 5 is logically true Of course, for many centuries,\nnearly all men believed statement 1; and the importance of the years\n1492 to 1521 (Columbus to Magellan) is linked with the final proof\nthat statement 2 expresses a fact So, depending on the game, or the\ncontext, whichever we wish to call it, almost any statement can be\nlogically true What we become interested in, therefore, is the\nconnections between statements which make them follow logically LOGICAL PATTERNS\nPerhaps the most familiar example of “following logically” is a\npattern of words like the following:\n1 All igs are ows 2 All ows are umphs 3 Therefore, all igs are umphs If statements 1 and 2 are supposed, then statement 3 is logically true In other words, statement 3 logically follows from statements 1 and 2 This word pattern is logically true, no matter what substitutions we\nmake for igs, ows, and umphs For example, we can replace igs by\nmen, ows by animals, and umphs by mortals, and obtain:\n4 All men are animals 5 All animals are mortals 6",
    "6 Therefore, all men are mortals The invented words “igs,” “ows,” “umphs” mark places in the logical\npattern where we can insert any names we are interested in The\nwords “all,” “are,” “therefore” and the ending s mark the logical\npattern Of course, instead of using invented words like “igs,” “ows,”\n“umphs” we would usually put A’s, B’s, C’s This logical pattern is\ncalled a syllogism and is one of the most familiar But there are even\nsimpler logical patterns that are also familiar THE SIMPLEST LOGICAL PATTERNS\nMany simple logical patterns are so familiar that we often use\nthem without being conscious of doing so The simple logical patterns\nare marked by words like “and,” “or,” “else,” “not,” “if,” “then,”\n“only ” In the same way, simple arithmetical patterns are marked by\nwords like “plus,” “minus,” “times,” “divided by ”\nLet us see what some of these simple logical patterns are Suppose\nthat we take two statements about which we have no factual\ninformation that might interfere with logical supposing:\n1 John Doe is eligible for insurance John Doe is eligible for insurance 2 John Doe requires a medical examination In practice, we might be concerned with such statements when\nwriting the rules governing a plan of insurance for a group of\nemployees Here, we shall play a game:\n(1) We shall make up some new statements from\nstatements 1 and 2, using the words “and,”\n“or,” “else,” “not,” “if,” “then,” “only ”\n\n\n(2) We shall examine the logical patterns that we\ncan make (3) We shall see what we can find out about their\nlogical truth Suppose we make up the following statements:\n3",
    "Suppose we make up the following statements:\n3 John Doe is not eligible for insurance John Doe is not eligible for insurance 4 4 John Doe does not require a medical\nexamination John Doe does not require a medical\nexamination 5 5 John Doe is eligible for insurance and requires\na medical examination John Doe is eligible for insurance and requires\na medical examination 6 John Doe is eligible for insurance, and John\nDoe is eligible for insurance 7 7 John Doe is eligible for insurance, or John Doe\nrequires a medical examination John Doe is eligible for insurance, or John Doe\nrequires a medical examination 8 8 If John Doe is eligible for insurance, then he\nrequires a medical examination 9 John Doe requires a medical examination if and\nonly if he is eligible for insurance John Doe requires a medical examination if and\nonly if he is eligible for insurance 10 10 John Doe is eligible for insurance or else he\nrequires a medical examination John Doe is eligible for insurance or else he\nrequires a medical examination Now clearly it is troublesome to repeat quantities of words when we\nare interested only in the way that “and,” “or,” “else,” “not,” “if,”\n“then,” “only” occur So, let us use just 1 and 2 for the two original\nstatements, remembering that “1 and 2” means here “statement 1\nAND statement 2” and does not mean 1 plus 2 Then we have:\n3:\nnot-1\n4:\nnot-2\n5:\n1 and 2\n6:\n1 and 1\n7:\n1 or 2\n8:\nif 1, then 2\n\n\n9:\n1 if and only if 2\n10:\n1 or else 2\nHere then are some simple logical patterns that we can make CALCULATION OF LOGICAL TRUTH\nNow what can we find out about the logical truth of statements 3\nto 10 If we know something about the truth or falsity of statements 1\nand 2, what will logically follow about the truth or falsity of\nstatements 3 to 10 In other words, how can we calculate the logical\ntruth of statements 3 to 10, given the truth or falsity of statements 1\nand 2 For example, 3 is not-1; that is, statement 3 is the negative or the\ndenial of statement 1 It follows logically that, if 1 is true, 3 is false; if\n1 is false, 3 is true Suppose that we use T for logically true and F for\nlogically false Then we can show our calculation of the logical truth\nof statement 3 in Table 1 Table 1\n \nTable 2\n1   not-1 = 3\n2   not-2 = 4\n \n \n \n \nT   F\nT   F\nF   T\nF   T\nOur rule for calculation is: For T put F; for F put T Of course, exactly\nthe same rule applies to statements 2 and 4 (see Table 2) The T and F\nare called truth values Any meaningful statement can have truth\nvalues This type of table is called a truth table For any logical\npattern, we can make up a truth table Let us take another example, “and ” Statement 5 is the same as\nstatement 1 and statement 2 How can we calculate the logical truth\nof statement 5 We can make up the same sort of a table as before On\nthe left-hand side of this table, there will be 4 cases:\n1 Statement 1 true, statement 2 true 2 Statement 1 false, statement 2 true 3 Statement 1 true, statement 2 false 4 Statement 1 false, statement 2 false On the right-hand side of this table, we shall put down the truth value\nof statement 5 Statement 5 is true if both statements 1 and 2 are true;\nstatement 5 is false in the other cases We know this from our\ncommon everyday experience with the meaning of “and” between\nstatements So we can set up the truth table, and our rule for\ncalculation of logical truth, in the case of and, is shown on Table 3 Table 3\n  1     2     1 and 2 = 5\n \n \n \nT\nT \nT\nF\nT \nF\nT\nF \nF\nF\nF \nF\n“and” and the other words and phrases joining together the\noriginal two statements to make new statements are called connectives,\nor logical connectives The connectives that we have illustrated in\nstatements 7 to 10 are: or, if ··· then, if and only if, or else Table 4 shows the truth table that applies to statements 7, 8, 9,\nand 10 This truth table expresses the calculation of the logical truth\nor falsity of these statements Table 4\n \n \n1 or 2 if 1, then 2\n1 if and only if 2\n1 or else 2\n  1     2  \n= 7\n= 8\n= 9\n= 10\n \n \n \nT\nT\nT\nT\nT\nF\nF\nT\nT\nT\nF\nT\n\n\nT\nF\nT\nF\nF\nT\nF\nF\nF\nT\nT\nF\nThe “or” (as in statement 7) that is defined in the truth table is often\ncalled the inclusive “or” and means “and/or ” Statement 7, “1 or 2,”\nis considered to be the same as “1 or 2 or both ” There is another\n“or” in common use, often called the exclusive “or,” meaning “or\nelse” (as in statement 10) Statement 10, “1 or else 2,” is the same\nas “1 or 2 but not both” or “either 1 or 2 ” In ordinary English,\nthere is some confusion over these two “or’s ” Usually we rely on the\ncontext to tell which one is intended Of course, such reliance is not\nsafe Sometimes we rely on a necessary conflict between the two\nstatements connected by “or” which prevents the “both” case from\nbeing possible In Latin the two kinds of “or” were distinguished by\ndifferent words, vel meaning “and/or,” and aut meaning “or else ”\nThe “if ··· then” that is defined in the truth table agrees with our\nusual understanding that (1) when the “if clause” is true, the “then\nclause” must be true; and (2) when the “if clause” is false, the “then\nclause” may be either true or false The “if and only if” that is\ndefined in the truth table agrees with our usual understanding that (1)\nif either clause is true, the other is true; and (2) if either clause is\nfalse, the other is false In statement 6, there are only two possible cases, and the truth\ntable is shown in Table 5 Table 5\n  1     1 and 1 = 6\n \n \nT\nT \nF\nF \nWe know that 6 is true if and only if 1 is true In other words, the\nstatement “1 and 1 if and only if 1” is true, no matter what\nstatement 1 may refer to It is because of this fact that we never use a\nstatement in the form “1 and 1”: it can always be replaced by the\nplain statement “1 ”\n\n\nLOGICAL-TRUTH CALCULATION BY\nEXAMINING CASES AND REASONING\nNow you may say that this is all very well, but what good is it Almost anybody can use these connectives correctly and certainly has\nhad a great deal of practice using them Why do we need to go into\ntruth values and truth tables When we draft a contract or a set of rules, we often have to\nconsider several conditions that give rise to a number of cases We\nmust avoid:\n1 All conflicts, in which two statements that\ndisagree apply to the same case 2 All loopholes, in which there is a case not\ncovered by any statement If we have one statement or condition only, we have to consider 2\npossible cases: the condition satisfied or the statement true; the\ncondition not satisfied or the statement false If we have 2 conditions,\nwe have to consider 4 possible cases: true, true; false, true; true, false;\nfalse, false If we have 3 conditions, we have to consider 8 possible\ncases one after the other (see Table 6) Table 6\nCase\n1st\n Condition \n2nd\n Condition \n3rd\n Condition \n1\nT\nT\nT\n2\nF\nT\nT\n3\nT\nF\nT\n4\nF\nF\nT\n \n5\nT\nT\nF\n6\nF\nT\nF\n7\nT\nF\nF\n\n\n8\nF\nF\nF\nInstead of T’s and F’s, we would ordinarily use check-marks (✓) and\ncrosses (✕), which, of course, have the same meaning We may\nconsider and study each case individually In any event, we must\nmake sure that the proposed contract or set of rules covers all the\ncases without conflicts or loopholes The number of possible cases that we have to consider doubles\nwhenever one more condition is added Clearly, it soon becomes too\nmuch work to consider each case individually, and so we must turn to\na second method, thoughtful classifying and reasoning about classes\nof cases Now suppose that the number of conditions increases: 4 conditions\ngive rise to 16 possible cases; 5, 6, 7, 8, 9, 10, ··· conditions give rise to\n32, 64, 128, 256, 512, 1024, ··· cases respectively Because of the large\nnumber of cases, we soon begin to make mistakes while reasoning\nabout classes of cases We need a more efficient way of knowing\nwhether all cases are covered properly LOGICAL-TRUTH CALCULATION\nBY ALGEBRA\nOne of the more efficient ways of reasoning is often called the\nalgebra of logic This algebra is a part of a new science called\nmathematical logic Mathematical logic is a science that has the\nfollowing characteristics:\nIt studies chiefly nonnumerical reasoning It seeks accurate meanings and necessary consequences Its chief instruments are efficient symbols Mathematical logic studies especially the logical relations expressed in\nsuch words as “or,” “and,” “not,” “else,” “if,” “then,” “only,” “the,”\n“of,” “is,” “every,” “all,” “none,” “some,” “same,” “different,” etc The\nalgebra of logic studies especially only the first seven of these words The great thinkers of ancient Greece first studied the problems of\nlogical reasoning as these problems turned up in philosophy,\npsychology, and debate Aristotle originated what was called formal\n\n\nlogic This was devoted mainly to variations of the logical pattern\nshown above called the syllogism In the last 150 years, the fine\nsymbolic techniques developed by mathematicians were applied to\nthe problems of the calculation of logical truth, and the result was\nmathematical logic, much broader and much more powerful than\nformal logic A milestone in the development of mathematical logic\nwas The Laws of Thought, written by George Boole, a great English\nmathematician, and published in 1854 Boole introduced the branch\nof mathematical logic called the algebra of logic, also called Boolean\nalgebra In late years, all the branches of mathematical logic have\nbeen improved and made easier to use We can give a simple numerical example of Boolean algebra and\nhow it can calculate logical truth Suppose that we take the truth\nvalue of a statement as 1 if it is true and 0 if it is false Now we have\nnumbers 1 and 0 instead of letters T and F Since they are numbers,\nwe can add them, subtract them, and multiply them We can also\nmake up simple numerical formulas that will let us calculate logical\ntruth If P and Q are statements, and if p and q are their truth values,\nrespectively, we have Table 7 Table 7\nStatement\nTruth Value\nnot-P\n1 - p\nP and Q\npq\nP or Q\np + q - pq\nif P, then Q\n1 - p + pq\nP if and only if Q  1 - p - q + 2pq\nP or else Q\np + q - 2pq\nFor example, suppose that we have two statements P and Q:\nP: John Doe is eligible for insurance Q: John Doe requires a medical examination To test that the truth value of “P or Q” is p + q-pq, let us put down\nthe four cases, and calculate the result (see Table 8) Table 8\n  p     q  \n  p + q - pq\n \n \n \n1\n1\n  1 + 1 - 1 = 1\n0\n1\n  0 + 1 - 0 = 1\n1\n0\n  1 + 0 - 0 = 1\n0\n0\n  0 + 0 - 0 = 0\nNow we know that P or Q is true if and only if either one or both of P\nand Q are true, and thus we see that the calculation is correct The algebra of logic (see also Supplement 2) is a more efficient\nway of calculating logical truth But it is still a good deal of work to\nuse the algebra For example, if we have 10 conditions, we shall have\n10 letters like p, q to handle in calculations Thus we need a still more\nefficient way CALCULATION OF CIRCUITS BY\nTHE ALGEBRA OF LOGIC\nIn 1937 a research assistant at Massachusetts Institute of\nTechnology, Claude E Shannon, was studying for his degree of master\nof science He was enrolled in the Department of Electrical\nEngineering He was interested in automatic switching circuits and\nwondered why an algebra should not apply to them He wrote his\nthesis on the answer to this question and showed that:\n(1) There is an algebra that applies to switching circuits (2) It is the algebra of logic A paper, based on his thesis, was published in 1938 in the\nTransactions of the American Institute of Electrical Engineers with the\ntitle “A Symbolic Analysis of Relay and Switching Circuits",
    "A paper, based on his thesis, was published in 1938 in the\nTransactions of the American Institute of Electrical Engineers with the\ntitle “A Symbolic Analysis of Relay and Switching Circuits ”\nFig 1 Switches in series For a simple example of what Shannon found out, suppose that we\nhave two switches, 1, 2, in series (see Fig 1) When do we get current\nflowing from the source to the sink There are 4 possible cases and\nresults (see Table 9) Table 9\n Switch 1\n is closed \n  Switch 2  \n  is closed  \n Current \n  flows\nYes\nYes\nYes\nNo\nYes\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNow what does this table remind us of It is precisely the truth table\nfor “and ” It is just what we would have if we wrote down the truth\ntable of the statement “Switch 1 is closed and switch 2 is closed ”\nFig 2 Switches in parallel Fig 3 Switch open—current flowing Suppose that we have two switches 1, 2 in parallel (see Fig 2) When do we get current flowing from the source to the sink Answer:\nwhen either one or both of the switches are closed Therefore, this\ncircuit is an exact representation of the statement “Switch 1 is closed\nor switch 2 is closed ”\nSuppose that we have a switch that has two positions, and at any\ntime must be at one and only one of these two positions (see Fig 3) Suppose that current flows only when the switch is open There are\ntwo possible cases and results (see Table 10) Table 10\n\n\n Switch 1\n is closed \n Current \n  flows\nYes\nNo\nNo\nYes\nThis is like the truth table for “not”; and this circuit is an exact\nrepresentation of the statement “Switch 1 is not closed ” (Note: These\nexamples are in substantial agreement with Shannon’s paper, although\nShannon uses different conventions )\nWe see, therefore, that there is a very neat correspondence\nbetween the algebra of logic and automatic switching circuits Thus it\nhappens that:\n1 The algebra of logic can be used in the\ncalculation of some electrical circuits 2 Some electrical circuits can be used in the\ncalculations of the algebra of logic This fact is what led to the next step LOGICAL-TRUTH CALCULATION\nBY MACHINE\nIn 1946 two undergraduates at Harvard University, Theodore A Kalin and William Burkhart, were taking a course in mathematical\nlogic They noticed that there were a large number of truth tables to\nbe worked out To work them out took time and effort and yet was a\nrather tiresome automatic process not requiring much thinking They\nhad had some experience with electrical circuits Knowing of\nShannon’s work, they said to each other, “Why not build an electrical\nmachine to calculate truth tables ”\nThey took about two months to decide on the essential design of\nthe machine:\n1 The machine would have dial switches in which\nlogical connectives would be entered 2 It would have dial switches in which the\nnumbers of statements like 1, 2, 3 ··· would be\nentered 3",
    "3 It would scan the proper truth table line by line\nby sending electrical pulses through the dial\nswitches It would scan the proper truth table line by line\nby sending electrical pulses through the dial\nswitches 4 It would compute the truth or falsehood of the\nwhole expression CONSTRUCTION AND COMPLETION OF THE\nKALIN-BURKHART LOGICAL-TRUTH CALCULATOR\nWith the designs in mind, Kalin and Burkhart bought some war\nsurplus materials, including relays, switches, wires, lights, and a metal\nbox about 30 inches long by 16 inches tall, and 13 inches deep From\nMarch to June, 1947, they constructed a machine in their spare time,\nassembling and mounting the parts inside the box The total cost of\nmaterials was about $150 In June the machine was demonstrated in\nCambridge, Mass , before several logicians and engineers, and in\nAugust it was moved for some months to the office of a life insurance\ncompany There some study was made of the possible application of\nthe machine in drafting contracts and rules GENERAL ORGANIZATION\nOF THE MACHINE\nThe logical-truth calculator built by Kalin and Burkhart is not\ngiant in size, although giant in capacity Like other mechanical brains,\nthe machine is made up of many pieces of a rather small number of\ndifferent kinds of parts The machine contains about 45 dial switches,\n23 snap switches (or two-position switches), 85 relays, 6 push\nbuttons, less than a mile of wire, etc The lid of the metal box is the\nfront, vertical panel of the machine UNITS OF THE MACHINE\nThe machine contains 16 units These units are listed in Table 11,\nin approximately the order in which they appear on the front panel of\nthe machine—row by row from top to bottom, and from left to right\nin each row Table 11\n\n\nHEIR NAMES, AND SIGNIFICANCE\nUnit\nRow\nPart\nNo Mark\nName\nS\n1\n1\nSmall red\nlights\n12\n—\nStatement truth-\nvalue lights\nO\n s\n a\n i\n2\n1\n2-position\nsnap switches\n12\n~\nStatement denial\nswitches\nIn\n s\n i\n3\n2\n14-position\ndial switches\n12\nV\nStatement\nswitches\nIn\n s\n4\n3\n4-position\ndial switches\n11\nk\nConnective\nswitches\nIn\n c\n ∧\n ∨\n ▲\n ▼\n5\n4\n11-position\ndial switches\n11\nA\nAntecedent\nswitches\nIn\n a\n6\n5\n11-position\ndial switches\n11\nC\nConsequent\nswitches\nIn\n7\n6\n2-position\nsnap switches\n11\nS\nStop switches\nIn\n c\n t\n8\n6\n2-position\nsnap switches\n11\n~\nConnective denial\nswitches\nIn\n p\n i\n9\n7\nRed light and\nlarge button\n1\nStart Automatic start In\n t\n t\n\n\n10\n7\nRed light and\n2 buttons\n1\nStart\nStop\nPower switch\nIn\n o\n11\n7\n2-position\nsnap switch\nand red button\n1\nStop “Stop-on-true-or-\nfalse” switch\nIn\n t\n t\n f\n12\n7\nYellow light 1\n—\nMain truth-value\nlight\nO\n s\n b\n i\n13\n7\nLarge button 1\nMan Pulse\nManual pulse\nbutton\nIn\n t\n l\n14\n7\n11-position\ndial switch\n1\nkⱼ\nConnective check\nswitch and light\nO\n s\n i\n15\n7\n13-position\ndial switch\n1\nTT\nRow\nStop\n“Truth-table-row-\nstop” switch\nIn\n t\n  \n t\n16\nBe-\ntween\n6 & 7\nContinuous\ndial knob\nand button\n1\n—\nTiming control\nknob\nIn\n s\n  \n o\nSome of the words appearing in this table need to be\ndefined Connective here means “and,” “or,” “if ···\nthen,” “if and only if ” Only these four connectives\nappear on the machine; others when needed can be\nconstructed from these The symbols used for these\nconnectives in mathematical logic are ∧, ∨, ▲, ▼ These signs serve as labels for the connective switch\npoints In this machine, when there is a connective\nbetween two statements, the statement that comes\n\n\nbefore is called the antecedent and the statement that\ncomes after is called the consequent HOW INFORMATION GOES\nINTO THE MACHINE\nOf the 16 units 13 are input units They control the setup of the\nmachine so that it can solve a problem Of the 13 input units, those\nthat have the most to do with taking in the problem are shown in\nTable 12 Table 12\nUnit\nName of\nSwitches\nMark  Kind of \nSwitch\nSwitch Settings\n3\nStatement V₁ to\nV₁₂\nDial\nStatements 1 to 12 or\n constant T or F\n2\nStatement\ndenial\n~\nSnap\nAffirmative (down)\n or negative (up)\n4\nConnective k₁ to\nk₁₁\nDial\n∧ (and),\n∨ (or),\n▲ (if-then),\n▼ (if and only if)\n8\nConnective\ndenial\n~\nSnap\nAffirmative (down) or\n negative (up)\n5\nAntecedent A₁ to\nA₁₁\nDial\nV or various k’s\n6\nConsequent C₁ to\nC₁₁\nDial\nV or various k’s\n7\nStop\nS₁ to\nS₁₁\nSnap\nNot connected (down)\n or connected (up)\nThe first step in putting a problem on the machine is to express the\nwhole problem as a single compound statement that we want to know\n\n\nthe truth or falsity of We express the single compound statement in a\nform such as the following:\nV k V k V k V k V k V k V k V k V k V k V k V\nwhere each V represents a statement, each k represents a connective,\nand we know the grouping, or in other words, we know the\nantecedent and consequent of each connective For example, let us choose a problem with an obvious answer:\nProblem Given: statement 1 is true; and if\nstatement 1 is true, then statement 2 is true; and if\nstatement 2 is true, then statement 3 is true; and if\nstatement 3 is true, then statement 4 is true Is\nstatement 4 true How do we express this whole problem in a form that will go on\nthe machine We express the whole problem as a single compound\nstatement that we want to know the truth or falsity of:\nIf [1 and (if 1 then 2) and (if 2 then 3) and (if 3 then 4)],\nthen 4\nThe 8 statements occurring in this problem are, respectively: 1 1 2 2 3\n3 4 4 These are the values at which the V switches (the statement dial\nswitches, Unit 2) from V₁ to V₈ are set The 7 connectives occurring in\nthis problem are, respectively: and, if-then, and, if-then, and, if-\nthen, if-then These are the values at which the k switches (the\nconnective dial switches, Unit 4) from k₁ to k₇ are set A grouping (one of several possible groupings) that specifies the\nantecedent and consequent of each connective is the following:\n1 and 1 if-then 2 and 2 if-then 3 and 3 if-then 4 if-then\n   \n|  \n|  \n|  \n|  \n|  \n|  \nk₂\n \nk₄\nk₆\n|  \n|  \n|  \n|  \nk₁ \nk₅ \n|\n \n|  \n\n\nk₃ \n|\n \n|\nk₇\nThe grouping has here been expressed graphically with lines but may\nbe expressed in the normal mathematical way with parentheses and\nbrackets as follows:\n{[ 1 and (1 if-then 2)] and [(2 if-then 3) and (3 if-\nthen 4) ] } if-then 4 So the values at which the antecedent and consequent dial switches\nare set are as shown in Table 13 Table 13\nConnective   Antecedent \nSwitch\n Set at   Consequent \nSwitch\n Set at\nk₁\nA₁\nV\nC₁\nk₂\nk₂\nA₂\nV\nC₂\nV\nk₃\nA₃\nk₁\nC₃\nk₅\nk₄\nA₄\nV\nC₄\nV\nk₅\nA₅\nk₄\nC₅\nk₆\nk₆\nA₆\nV\nC₆\nV\nk₇\nA₇\nk₃\nC₇\nV\nIn any problem, statements that are different are numbered one\nafter another 1, 2, 3, 4 ··· A statement that is repeated bears always\nthe same number In nearly all cases that are interesting, there will be\nrepetitions of the statements If any statement appeared with a “not”\nin it, we would turn up the denial switch for that statement (Unit 2) The different connectives available on the machine are “and,”\n“or,” “if ··· then,” “if and only if ” If a “not” affected the\n\n\ncompound statement produced by any connective, we would turn up\nthe denial switch for that connective (Unit 8) The last step in putting the problem on the machine is to connect\nthe main connective of the whole compound statement to the yellow\nlight output (Unit 12) In this problem the last “if-then,” k₇, is the\nmain connective, the one that produces the whole compound\nstatement So we turn Stop Switch 7 (in Unit 7) that belongs to k₇ into\nthe up position There are a few more things to do, naturally, but the\nessential part of putting the information of the problem into the\nmachine has now been described HOW INFORMATION COMES OUT\nOF THE MACHINE\nOf the 16 units listed in Table 11, 3 are output units, and only 2 of\nthese are really important, as shown in Table 14 Table 14\nUnit\nName of Light\nMark\nKind of Light\n 1 Statement truth value  V₁ to V₁₂ \nSmall, red  \n13 Main truth value\n \nLarge, yellow\nThe answer to a problem is shown by a pattern of the lights of Units 1\nand 13 The pattern of lights is equivalent to a row of the truth table Each little red light (Unit 1) glows when its statement is assumed to\nbe true, and it is dark when its statement is assumed to be false The\nyellow light (Unit 13) glows when the whole compound statement is\ncalculated to be logically true, and it is dark when the whole\ncompound statement is calculated to be logically false The machine turns its “attention” automatically to each line of the\ntruth table one after the other, and pulses are fed in according to the\npattern of assumed true statements We can set the machine to stop on\ntrue cases or on false cases or on every case, so as to give us time to\ncopy down whichever kind of results we are interested in When we\nhave noted the case, we can press a button and the machine will then\ngo ahead searching for more cases A COMPLETE AND CONCRETE EXAMPLE\nThe reader may still be wondering when he will see a complete\nand concrete example of the application of the logical-truth\ncalculator So far we have given only pieces of examples in order to\nillustrate some explanation Therefore, let us consider now the\nfollowing problem:\n\n\nProblem The A A Adams Co , Inc , has about 1000\nemployees About 600 of them are insured under a\ncontract for group insurance with the I I Insurance Co Mr",
    "Mr Adams decides that more of his employees ought to\nbe insured As a part of his study of the change, he asks\nhis manager in charge of the group insurance plan,\n“What are the possible statuses of my employees who\nare not insured ”\nThe manager replies, “I can tell you the names of the\nmen who are not insured, and all the data you may\nwant to know about them ”\nMr Adams says, “No, John, that won’t be enough,\nfor I need to know whether there are any groups or\nclasses that for some basic reason I should exclude from\nthe change I am considering ”\nSo the manager goes to work with the following 5 statuses and the\nfollowing 5 rules, and he produces the following answer Our question\nis, “Is he right, or has he made a mistake ”\nStatuses A status for any employee is a report about that\nemployee, answering all the following 5 questions with “yes” or “no ”\n1 ”\n1 Is the employee eligible for insurance Is the employee eligible for insurance 2 2 Has the employee applied for insurance Has the employee applied for insurance 3 3 Has the employee’s application for insurance\nbeen approved Has the employee’s application for insurance\nbeen approved 4 4 Does \nthe \nemployee \nrequire \na \nmedical\nexamination for insurance Does \nthe \nemployee \nrequire \na \nmedical\nexamination for insurance 5 5 Is the employee insured Is the employee insured Rules The rules applying to employees are:\nA Any employee, to be insured, must be eligible\nfor insurance, must make application for\ninsurance, and must have such application for\ninsurance approved",
    "Any employee, to be insured, must be eligible\nfor insurance, must make application for\ninsurance, and must have such application for\ninsurance approved B B Only eligible employees may apply for\ninsurance Only eligible employees may apply for\ninsurance C The application of any person eligible for\ninsurance without medical examination is\nautomatically approved D (Naturally) an application can be approved\nonly if the application is made E E (Naturally) a medical examination will not be\nrequired from any person not eligible for\ninsurance Answer by the Manager There are 5 possible combinations of\nstatuses for employees who are not insured, as shown in Table 15 Table 15\nPossible\nCombination\nof Statuses\nStatus 1,\nEligible\nStatus 2,\nApplied\nStatus 3,\nApplication\nApproved\nStatus 4,\nExamination\nRequired\nStat\nIns\n1\nYes\nYes\nYes\nYes\nN\n2\nYes\nYes\nYes\nNo\nN\n3\nYes\nYes\nNo\nYes\nN\n4\nYes\nNo\nYes\nNo\nN\n5\nNo\nNo\nNo\nNo\nN\nThe question may be asked why employees who are eligible, who\nhave applied for insurance, who have had their applications approved,\nand who require no medical examination (combination 2) are yet not\ninsured The answer is that the rules given do not logically lead to this\nconclusion As a matter of fact, there might be additional rules, such\nas: any sick employee must first return to work; or any period from\ndate of approval of application to the first of the following month\nmust first pass The first step in putting this problem on the Kalin-Burkhart\nLogical-Truth Calculator is to rephrase the rules, using the language of\nthe connectives that we have on the machine The rules rephrased are:\nA If an employee is insured, then he is eligible, he\nhas applied for insurance, and his application\n\n\nhas been approved if 5, then 1 and 2 and 3\nB If an employee has applied (under these rules)\nfor insurance, then he is eligible if 2, then 1\nC If an employee is eligible for insurance, has\napplied, and requires no medical examination,\nhis application is automatically approved",
    "If an employee is eligible for insurance, has\napplied, and requires no medical examination,\nhis application is automatically approved if 1 and 2 and not-4, then 3\nD If an employee’s application has been\napproved, then he has applied if 3, then 2\nE If an employee is not eligible, then he does not\nrequire a medical examination (under these\nrules) if not-1, then not-4\nTo get the answer we seek, we must add one more rule for this answer\nonly:\nF The employee is not insured The employee is not insured not-5\nWe now have a total of 4 + 2 + 4 + 2 + 2 + 1 occurrences of\nstatements, or 15 occurrences This is beyond the capacity of the\nexisting machine But fortunately Rule F and Rule A cancel each\nother; they may both be omitted; and this gives us 10 occurrences\ninstead of 15 In other words, all the possible statuses under “Rule B\nand Rule C and Rule D and Rule E” will give us the answer we seek The rephrasing and reasoning we have done here is perhaps not\neasy For example, going from the logical pattern\nOnly igs may be ows\nto the logical pattern\nIf it is an ow, then it is an ig\nas we did in rephrasing Rule B, deserves rather more thought and\n\n\ndiscussion than we can give to the subject here A person who is\nresponsible for preparing problems for the Logical-Truth Calculator\nshould know the algebra of logic Choosing an appropriate grouping, we now set on the machine:\n{(if 2, then 1) and [IF (1 and 2) and not-4, then 3]} and\n[(if 3, then 2) and (IF not-1, then not-4)]\nThe setting is as shown in Table 16 After this setting, the machine\nis turned on and set to stop on the “true” cases The\nTable 16\nSETTING OF THE PROBLEM\nON THE\nLOGICAL-TRUTH CALCULATOR\nUnit  \n3\nStatement Dial No V₁ V₂ V₃ V₄ V₅ V₆ V₇ V₈ V₉ V₁₀V₁₁V₁₂\n3\nStatement Dial Setting\n2 1 1 2\n4\n3 3 2\n1\n4\nF\nF\n2\nStatement Denial Switch\n \n \n  Setting\n— — — — up — — — up up — —\n4\nConnective Dial No k₁ k₂ k₃ k₄ k₅ k₆ k₇ k₈ k₉ k₁₀ k₁₁  \n4\nConnective Dial Setting\n▲∧∧∧▲∧▲∧▲off off  \n8\nStatement Denial Switch\n \n \n  Setting\n— — — — — — — — — — —  \n5\nAntecedent Dial No A₁ A₂ A₃ A₄ A₅ A₆ A₇ A₈ A₉ A₁₀A₁₁  \n5\nAntecedent Dial Setting\nV k₁ V k₃ k₄ k₂ V k₇ V off off  \n6\nConsequent Dial No C₁ C₂ C₃ C₄ C₅ C₆ C₇ C₈ C₉ C₁₀C₁₁  \n6\nConsequent Dial Setting\nV k₅ V V V k₈ V k₉ V off off  \n7\nStop Switches, associating\n \n \n  connective to Main\n \n\n\n \n  Truth-Value Light\n— — — — — — — — — — —  \npossible statuses of employees who are not insured are shown in Table\n17 As we look down the last column in Table 17, we observe 6\noccurrences of T, instead of 5 as the manager determined (see Table\n15) Thus, when we compare the manager’s result with the machine\nresult, we find an additional possible combination to be reported to\nMr Adams, combination 7:\nEmployee eligible, employee has not\napplied, employee’s application not\napproved, \nemployee \nrequires \na\nmedical examination, employee not\ninsured Table 17\nSOLUTION OF THE PROBLEM\nBY THE CALCULATOR\nLEGEND:\n{A} THE EMPLOYEE IS ELIGIBLE FOR INSURANCE\n{B} THE EMPLOYEE HAS APPLIED FOR INSURANCE\n{C} THE EMPLOYEE’S APPLICATION FOR INSURANCE\nHAS BEEN APPROVED\n{D} THE EMPLOYEE REQUIRES A MEDICAL EXAMINATION\n{E} THE EMPLOYEE IS INSURED\n{F} CASE, OR COMBINATION NO {G} THE COMBINATION DOES NOT CONTRADICT THE RULES,\nI E , THE YELLOW LIGHT IS ON\n \n{A} {B} {C} {D} {E} {F} {G}  \nStatus:\n1\n2\n3\n4\n5\n \n \n \nT\nT\nT\nT\nF\n1\nT\nF\nT\nT\nT\nF\n2\nF\nT\nF\nT\nT\nF\n3\nF\n\n\nF\nF\nT\nT\nF\n4\nF\nT\nT\nF\nT\nF\n5\nT\nF\nT\nF\nT\nF\n6\nF\nT\nF\nF\nT\nF\n7\nT\nF\nF\nF\nT\nF\n8\nF\nT\nT\nT\nF\nF\n9\nT\nF\nT\nT\nF\nF\n10\nF\nT\nF\nT\nF\nF\n11\nF\nF\nF\nT\nF\nF\n12\nF\nT\nT\nF\nF\nF\n13\nF\nF\nT\nF\nF\nF\n14\nF\nT\nF\nF\nF\nF\n15\nT\nF\nF\nF\nF\nF\n16\nT\nBecause of the medical examination, this additional class of employee\nwould need to be considered rather carefully in any change of the\ngroup insurance plan AN APPRAISAL OF THE CALCULATOR\nIn appraising the Kalin-Burkhart Logical-Truth Calculator, we must\nremember that this is a first model It was the only machine of its kind\nup to the end of 1948; and it worked The cost of the machine, as stated before, was about $150 of parts\nand perhaps $1000 of labor This is less than ¹/₁₀₀ of the cost of the\nother giant brains described in previous chapters Yet we can properly\ncall this machine a mechanical brain because it transfers information\nautomatically from one part to another of the machine, has automatic\ncontrol over the sequence of operations, and does certain kinds of\nreasoning The machine is swift It can check up to a 100 cases against a set\nof rules in less than 1 minute It can check: 128 cases for 7 conditions\nin 1¼ minutes, 256 cases for 8 conditions in 2½ minutes, and 4096\n\n\ncases for 12 conditions in 38 minutes That is the limit of the present\nmachine Of course, setting up the machine to do a problem takes\nsome more time The programming of this machine to do a problem is less\ncomplicated than the programming of most of the big machines\npreviously described Of course, in order to prepare a problem for the\nmachine, the preparer needs to know a fair amount of the algebra of\nlogic This, however, is not very hard As to reliability, the machine\nhas in practice been out of order less than 2 per cent of operating\ntime The big barrier to wide use of the machine, of course, is lack of\nunderstanding of the field of problems in which it can be applied Even in this modern world of ours, we are in rather a primitive stage\nin regard to recognizing problems in logical truth and knowing how to\ncalculate it Here, however, is an electrical instrument for logical\nreasoning, and it seems likely that its applications will multiply Chapter 10\nAN EXCURSION:\nTHE FUTURE DESIGN OF MACHINES THAT THINK\nIn the previous chapters we have described four giant mechanical\nbrains finished by the end of 1946: Massachusetts Institute of\nTechnology’s Differential Analyzer No 2, Harvard’s IBM Automatic\nSequence-Controlled \nCalculator, \nMoore \nSchool \nof \nElectrical\nEngineering’s Electronic Numerical Integrator and Calculator (Eniac),\nand Bell Telephone Laboratories’ General-Purpose Relay Computer All these brains have actually worked long enough to have\ndemonstrated thoroughly some facts of great importance WHAT EXISTING MACHINES HAVE PROVED\nThe existing mechanical brains have proved that information can\nbe automatically transferred between any two registers of a machine No human being is needed to pick up a physical piece of information\nproduced in one part of the machine, personally move it to another\npart of the machine, and there put it in again We can think of a\nmechanical brain as something like a battery of desk calculators or\npunch-card machines all cabled together and communicating\nautomatically The existing mechanical brains have also proved that flexible,\nautomatic control over long sequences of operations is possible We\ncan lay out the whole routine to solve a problem, translate it into\nmachine language, and put it into the machine Then we press the\n“start” button; the machine starts whirring and prints out the answers\nas it obtains them Mechanical brains have removed the limits on\ncomplexity of routine: the machine can carry out a complicated\nroutine as easily as a simple one The existing giant brains have shown that a machine with\nhundreds of thousands of parts will work successfully It will operate\naccurately, it will run unattended, and it will have remarkably few\n\n\nmechanical troubles These machines have shown that enormous speeds can be realized:\n5000 additions a second is Eniac’s record High speed is needed for\nmany problems in science, government, and business In fact, there\nare economic and statistical problems, now settled by armchair\nmethods, for which high-speed mechanical brains may make it\npossible to compute answers rather than guess them Also, these machines have been shown to be reasonable in cost The cost of each of the large calculators is in the neighborhood of\n$250,000 to $500,000 If we assume a ten-year life, which is\nconservative, the cost is about $3 to $6 an hour for 24-hour operation Since each mechanical brain can, for problems for which it is suited,\ndo the work of a hundred human computers, such a machine can save\nits cost half a dozen times And these machines are only engineers’\nmodels, built without the advantages of production-line assembly The cost of giant mechanical brains under design in 1947 and\n1948 is in the neighborhood of $100,000 to $200,000 The main\nreason for the reduction from the previous cost is the use of cheaper\nautomatic memory As designs improve and charges for research and\ndevelopment are paid off, the cost should continue to go down NEW DEVICES FOR HANDLING INFORMATION\nIn the laboratories working on new mechanical and electronic\nbrains, scientists are doing a lot of thinking about new devices for\nhandling information Research into devices for storing information\nshows that magnetic wire as used in sound recording is a rather good\nstorage medium Magnetic Wire\nFor example, on a hundredth of an inch of fine steel wire we can\n“write” a magnetized spot by means of a small “writing” electromagnet The electromagnet is simply some copper wire coiled around some\nsoft iron shaped in a U When current flows through the coil, the iron\nbecomes a magnet, and the tips of the U magnetize the little section of\nthe wire between them The magnetized spot can be of two kinds, say\nnorth-south or south-north, depending on which way the current\n\n\nflows We can “read” this difference by means of another small\n“reading” electromagnet We can erase the spot by means of a\nstronger “erasing” magnet that produces a uniform magnetic state\nthroughout the wire The difference between north-south and south-\nnorth corresponds to the difference between 1 and 0, or “yes” and\n“no,” etc , and is a unit of information (see Chapter 2) Many other\nvariations are possible For example, the presence or absence of a\nmagnetized spot may be the unit of information, or the “writing,”\n“reading,” and “erasing” electromagnets all may be the same Magnetic wire sound recordings made in the 1890’s are still good This fact shows that magnetic wire may be a more permanent medium\nfor storing information than is paper Stray magnetic forces are likely\nto have no harmful effect on information stored on magnetic wire, for\nthese forces would not be strong enough or detailed enough to change\ngreatly the difference between the magnetized spot and its\nneighboring neutral area A reel of magnetic wire a mile long and ³/₁₀₀₀ of an inch thick\ncosts about $5 At 80 magnetized spots to the inch, a mile of wire can\nstore about 5 million units of information Hence, the cost of storing\none unit of information is about ¹/₁₀₀₀₀ of a cent The time needed for\nchanging a magnetized spot from 1 to 0 or from 0 to 1 is about ¹/₁₀₀₀₀\nof a second Magnetic Tape\nThere is, however, a storage device that may be even more useful,\nand this is magnetic tape (see Fig",
    "Magnetic Tape\nThere is, however, a storage device that may be even more useful,\nand this is magnetic tape (see Fig 1) 1) The usual size of such tape is ¼\ninch wide and 2 or 3 thousandths of an inch thick Magnetic tape may\nbe made of plastic with magnetic powder all through it, or it may be\nof paper coated with magnetic powder, or it may be of stainless steel\nor a magnetic alloy, or it may be of brass or a nonmagnetic alloy\ncoated with a magnetic plating Magnetic tape has the added advantage that from 4 to 20 channels\nacross the tape can be filled with magnetized spots, and the cost then\nbecomes about ¹/₁₀₀₀₀₀ of a cent per spot It seems possible that 1000\nunits of information can be stored in a quarter of a square inch of\nmagnetic tape This means that more than 1 million units of\ninformation can be stored in a cubic inch of space filled with magnetic\n\n\ntape, and about 2 billion units of information in a cubic foot, except\nthat some of the space should be allotted to the reels and other\nequipment that hold the tape (see Fig This means that more than 1 million units of\ninformation can be stored in a cubic inch of space filled with magnetic\n\n\ntape, and about 2 billion units of information in a cubic foot, except\nthat some of the space should be allotted to the reels and other\nequipment that hold the tape (see Fig 2)",
    "2) This is closer packing than\nprinted information in the telephone book, and yet with magnetic\ntape we can get to the information automatically This is closer packing than\nprinted information in the telephone book, and yet with magnetic\ntape we can get to the information automatically Fig 1 Magnetic tape Fig 2 Tape reels Think of the enormous files in libraries, government, and business Think of the problems of space and cost and access which these files\nimply We can then see that this new development may well be of\nextraordinary importance Mercury Tanks\nFig 3 Mercury tank Scientists are investigating other storage devices having still more\nremarkable properties, but these have the disadvantage that, when the\npower goes off, the information vanishes One of these new storage\ndevices is called a mercury tank (see Fig One of these new storage\ndevices is called a mercury tank (see Fig 3) 3) It consists mainly of a\nsection of iron or steel pipe filled with mercury At each end of this\npipe, touching the mercury, is a thin slab of a crystal of quartz Quartz, which is a common stone, and which nearly all sand is made\nof, changes its shape when pulsed with electricity We put a pattern of\nelectrical pulses into the quartz slab at one end of the mercury tank;\nfor example, we could have the pattern 1101 meaning “pulse, pulse,\nno pulse, pulse ” The electrical pulses going into the quartz slab make\nthe quartz vibrate Thus ripples are produced in the mercury, and\nwaves in the pattern 1101 meaning “wave, wave, no wave, wave”\ntravel down the tank and strike the quartz slab at the far end The\nquartz slab there changes its shape in the rhythm 1101, and it\n\n\nconverts the waves back into electrical pulses in the same pattern Then we take the pulses out of the far end along a wire, make them\nstronger again with an amplifier, give them the right form again, and\nfeed them back into the front end of the mercury tank The mercury\ntank is a clever use of the principle of an echo, as when you call across\na valley and the rocks answer you back We can store a pattern of 400\npulses (each a unit of information, a 1 or a 0, and each a millionth of\na second in duration), in a mercury tank about 20 inches long A\nmercury tank and an echo are examples of delay lines—“lines” along\nwhich waves are “delayed ”\nElectrostatic Storage Tube\nAnother of the memory devices being developed is called an\nelectrostatic storage tube (see Fig",
    "”\nElectrostatic Storage Tube\nAnother of the memory devices being developed is called an\nelectrostatic storage tube (see Fig 4) 4) This is a big electronic tube with a\nscreen across one end The screen may be of two layers: one of copper,\nwhich conducts electricity, and one of mica, a material that does not In the other end of the tube is a beam of electrons, which we can turn\non and off and shoot at any of 2 or 3 thousand specific points or spots\non the screen Fig 4 4 Electrostatic storage tube There are two sizes of electric charge or quantity of electrons; we\ncan call these 1 and 0 In about a millionth of a second, we can put\neither size of charge on one of the spots of the screen With other\ncircuits we can keep it there as long as we want, if the power does not\nflicker off We can “remember” perhaps 2 or 3 thousand units of\ninformation in one of these electronic tubes We can read, write, or\nerase any unit of information in a few millionths of a second Neither the mercury tank nor the electrostatic storage tube had, by\nthe end of 1947, been put into a working mechanical brain But there\nis good reason to believe that they will be successful devices and will\nopen up a new era of speed in storing and referring to information In\nfact, several laboratories are developing electronic calculating circuits\nusing these devices which will perform up to 100,000 additions a\nsecond or 10,000 multiplications a second Our minds certainly\n\n\nstagger at the thought of such speeds NEW OPERATIONS\nMany kinds of combining operations have already been built into\none or more mechanical brains The operations may be arithmetical:\naddition, subtraction, multiplication, division, looking up numbers in\ntables, etc Or the operations may be logical: comparing, selecting,\nchecking, etc Additional logical operations will be built into some of\nthe mechanical brains now being constructed: sorting, collating,\nmatching, merging, etc NEW IDEAS IN PROGRAMMING\nProgramming—the way to give instructions to machines—is also\nbeing studied in the laboratories Several new ideas of importance\nhave developed as a result One idea is that the machine should be able to store its\ninstructions or program or routine in its memory in just the same\nphysical ways as it stores numbers There is basically no reason why\nnumbers only should be stored in some registers, and instructions only\nstored in other registers Another idea is that the machine should have in its permanent\nmemory any subroutine it may need For example, a subroutine\nshould always be available in the machine for finding square root At\nany time when a square root was needed, we would only have to call\non the machine for the subroutine of square root The machine would\nthen consult the right part of its memory and carry out the subroutine\nfor square root A third idea, and one of the most interesting, is that the machine\nshould be able to compute its own instructions For example, consider\na program for finding the product of two matrices (see Supplement 2),\neach of 100 terms in an array of 10 columns and 10 rows, resulting in\na new matrix of 100 terms The whole program can be made to consist\nof about 50 orders Only one of them is “multiply,” and only one of\nthem is “add”; the other orders consist of how to choose expressions\nto be multiplied or added, etc Such problems as these are often fascinating to mathematicians,\n\n\nwho love to play with the intricate ideas needed NEW IDEAS IN RELIABILITY\nReliability has a number of aspects:\n1 No wrong results allowed out of the machine 2 Few failures 3 Rapid location of failures 4 Quick repair or replacement of parts that fail 5 Easy maintenance 6 Unattended operation overnight For example, Bell Laboratories proved that mechanical brains can be\nbuilt so that no wrong results are allowed to come out In other\nwords, the machine checks itself all the time as it goes along and stops\nat once if the check shows that something is wrong This is likely to\nbe a standard feature of new automatic thinking machinery The frequency of failures in the machinery being designed in the\nlaboratories may be of the order of one or two mechanical failures a\nweek For any type of failure an alarm circuit and trouble lights will\nshow what part of the machine needs attention Plug-in parts for\nreplacement are already in use in at least two of the four mechanical\nbrains described and should be available in all the new machines It is\npossible to build a machine that will automatically change from\nfailing equipment to properly functioning equipment For some years\nthough, this may be too expensive to be reasonable The use of magnetic tape for storage reduces greatly the number of\nparts and so increases reliability For example, instead of 18,000\nelectronic tubes in an electronic brain, there may be less than 3000 A final degree of reliability is gained when most of the time the\nmachine operates unattended Then, there is no human operator\nstanding by who may fail to do the correct thing at the moment when\nthe machine needs some attention In fact, the motto for the room\nhousing a mechanical brain should become, “Don’t think; let the\nmachine do it for you ” Unattended operation from the end of one\nworking day to the beginning of the next, with the machine changing\nitself from one problem to another problem, has already been proved\npossible on the Bell Laboratories machine AUXILIARY DEVICES\nIn order to use a mechanical brain, we have to give it and take\nfrom it language that it understands, machine language A mechanical\nbrain that can do 10,000 additions a second can very easily finish\nalmost all its work at once How can we, slow as we are, keep our\nfriend, the giant brain, busy We have found so far several answers to\nthis question, none of them yet very good Devices for preparing input will be very important For each brain,\nwe shall need a great many of these devices For, at best, we type at a\nrate, say, of 4 characters a second, selecting any one of some 38 keys,\neach of which is equivalent to about 6 units of information This is\nabout 800 units of information per second The machine, however, is\nlikely to be able to gulp information from its input mechanism at the\namazing rate of 60,000 units of information per second, equal to 75\npeople typing with no mistakes and no resting Fortunately, at least\nsome of the time the machine will be busy computing For an input-preparation device, we may get something that can\nbe fastened to an ordinary typewriter and that will produce magnetic\ntape agreeing with what is printed by the typewriter Since the input\ninformation must be carefully verified, we shall need a second\nmagnetic tape device such as exists for paper tape on the Bell\nLaboratories machine: the processor The processor takes two hand-\nprepared tapes, compares them, reports any differences, and produces\na third tape The third tape copies the two original tapes if they agree,\nand it receives corrected information as furnished by a girl at a\nkeyboard if the two original tapes disagree For information already on punch cards, we need an input device\nthat will read punch cards and write on magnetic tape Where\ninformation is on punched paper tape, we need a machine that will\nread punched paper tape and write on magnetic tape Problem data, tables of numbers, and routine instructions will go\ninto the mechanical brain They will all be prepared on regular input\ndevices The machine will accept information in the form in which it\nis most convenient for you and me to prepare it Then, the machine\nwill be instructed to change the information into the form with which\nit is most convenient for the machine to operate Many output devices will also be needed, since the machine will\n\n\nbe able to produce information very swiftly These output devices\nmight be cabled to the machine A kind of traffic control system\nwould govern them Each will have a magnetic tape that will be\nloaded up swiftly with information Then the output device will\nunload its information more slowly, in any form that we may desire:\nprinting, graphs, film, punch cards, or punched paper tape The machine is likely to be able to put out information on\nmagnetic tape at the same high speed of 60,000 units of information\nper second or 10,000 characters per second But the best printing\nspeed of an electric typewriter is about 10 or 12 characters a second Card-punching speed is about 130 characters a second Punch-card\ntabulator speed can reach a maximum of about 200 characters a\nsecond",
    "Punch-card\ntabulator speed can reach a maximum of about 200 characters a\nsecond Thus we see that here, too, we may be snowed under with the\ninformation that the giant brain puts out, if we fail to ask the giant\nonly for what we really want MECHANICAL BRAINS UNDER CONSTRUCTION\nThis chapter would not be complete without mention of the great\nmechanical brains that were actually under construction at the end of\n1947 In power they are intermediate between the machinery now\nbeing designed, described in this chapter, and the earlier machines\ndescribed in the previous chapters of this book The mechanical brains under construction on December 31, 1947,\nwere:\nHarvard’s Sequence-Controlled Relay Calculator\nMark \nII, \nconstructed \nat \nthe \nHarvard\nComputation Laboratory, tested there July\n1947 to January 1948, and delivered to the\nNaval Proving Ground, Dahlgren, Va , in 1948 The IBM Selective-Sequence Electronic Calculator,\nconstructed in the IBM laboratories, Endicott,\nN Y , and installed in 1947 at the office of\nInternational Business Machines, 590 Madison\nAve , New York, N Y Moore School of Electrical Engineering’s EDVAC\n(Electronic \nDigital \nVariable \nAutomatic\nComputer) being constructed partly at Moore\n\n\nSchool and partly elsewhere, and to be\ndelivered \nto \nthe \nBallistic \nResearch\nLaboratories, Aberdeen, Md Harvard’s \nSequence-Controlled \nElectronic\nCalculator Mark III, being constructed at the\nHarvard Computation Laboratory, and to be\ndelivered to the Naval Proving Ground,\nDahlgren, Va We shall cover briefly (and perhaps a little technically) some of\nthe main features of the first two of these machines; for, during 1948,\nthey began to do problems The other two had not been finished by\nthe end of 1948 and so would be difficult to describe correctly, for\nmechanical brains grow, and design changes go on until they are\nfinished—and even afterwards Some information about these machines can be obtained from the\norganizations referred to above and from reports that should appear\nfrom time to time in some of the journals mentioned in Supplement 3 There is also a regular section entitled “Automatic Computing\nMachinery” in the quarterly Mathematical Tables and Other Aids to\nComputation, where it is likely that current information may be found Harvard’s Mark II\nThe Harvard Sequence-Controlled Calculator Mark II began to do\nproblems under test during July 1947 This machine is at least twelve\ntimes as powerful as Mark I (see Chapter 6) and was constructed\nentirely by the Harvard Computation Laboratory The machine\ncontains about 13,000 relays of a new type that will operate reliably\nwithin ¹/₁₀₀ of a second Numbers in the machine are regularly of 10 decimal digits\nbetween 1 000,000,000 and 9 999,999,999, inclusive, multiplied by a\npower \nof \n10 \nbetween \n1,000,000,000,000,000 \nand\n0 000,000,000,000,001, inclusive For storage of numbers, the machine has 100 relay registers\ntotaling about 1200 decimal digits Also, it can consult any one of 8\ntape feeds for numbers and any one of 4 tape feeds for instructions Effectively, the machine can read one number and one instruction\nfrom paper tape in ¹/₃₀ of a second The machine performs all arithmetical and most logical operations In every second it can carry out 4 multiplications, 8 additions (or\nsubtractions), and 12 transfers Division is performed by rapid\napproximation using the other operations In each second the machine can perform 30 instructions An\ninstruction is expressed by 6 digits between 0 and 7 which you can\nselect and, in effect, by 3 more digits fixed by the time (within the\nsecond) when the machine reads the instruction For example, in the\n9th instruction of the 30 instructions in each second, we can specify a\nmultiplicand But, if we do not want to multiply right then—a rare\nevent if we are coding wisely—we leave the 9th instruction empty The machine may operate as a whole, attending to one problem; or\nthe machine may be separated into halves, and each half will attend\nto its own problem The IBM Selective-Sequence\nElectronic Calculator\nThe IBM Selective-Sequence Electronic Calculator was announced\npublicly on January 27, 1948, after some months of trial running It is\na large and powerful mechanical brain, and it is the intention of\nInternational Business Machines to devote it to solving scientific\nproblems The staff of the Watson Scientific Computing Laboratory in\nNew York will be mainly in charge of the machine The machine contains about 12,500 electronic tubes and about\n21,500 relays Numbers in the machine are regularly of either 14 or\n19 decimal digits Instructions are expressed as numbers For storage\nof information, the machine has a capacity of 8 registers totaling 160\ndecimal digits of very rapid memory in electronic tubes Also, it has\nabout 150 registers totaling 3000 decimal digits of less rapid memory\nin relays Also, it can consult any one of 66 paper tape feeds; each row\non a paper tape can hold up to 78 punched holes or 19 decimal digits,\nand the machine can consult 25 rows on one tape in one second These paper tapes together give the machine about 400,000 decimal\ndigits of memory For arithmetical and logical operations, the machine has an\narithmetical unit using electronic tubes This unit can carry out about\n50 multiplications or about 250 additions per second, including the\n\n\ntransfers of numbers In each second the machine can read and\nperform 50 instructions, and each instruction consists, usually, of\ngetting two numbers out of two relay registers, performing an\noperation, and putting the result into a third relay register Eckert-Mauchly’s Binac\nAs this book went to press, another mechanical brain, the\nElectronic Binary Automatic Computer, or BINAC, was announced on\nAugust 22, 1949 This machine was constructed by the Eckert-\nMauchly Computer Corporation, Philadelphia, Pa , for Northrop\nAircraft, Inc , Hawthorne, Calif This machine has some remarkable properties It does addition or\nsubtraction at the rate of 3500 per second It does multiplication or\ndivision at the rate of 1000 per second The input is from a keyboard\nor magnetic tape; the output is to magnetic tape or an electric\ntypewriter Binac has 512 registers of very rapid memory in mercury\ntanks, and each register holds 30 binary digits The machine actually\nis a pair of twins: the storage, the computing element, and the control\nare double, and each twin runs in step with the other and checks\nevery operation of the other In tests in July the machine ran over 10\nconsecutive hours with no error Each twin has only 700 electronic\ntubes Binac handles all numbers in binary notation, except that the\nkeyboard and the typewriter express numbers in octal notation (see\nSupplement 2) Finally, Binac is only 5 feet high, 4 feet long, and one\nfoot wide Chapter 11\nTHE FUTURE:\nMACHINES THAT THINK,\nAND WHAT THEY MIGHT DO FOR MEN\nThe pen is mightier than the sword, it is often said And if this is\ntrue, then the pen with a motor may be mightier than the sword with\na motor In the Middle Ages, there were few kinds of weapons, and it was\neasy for a man to protect himself against most of them by wearing\narmor As gunpowder came into use, a man could no longer carry the\nweight of armor that would protect him, and so armor was given up But in 1917, armor, equipped with a motor and carrying the man and\nhis weapons, came back into service—as the tank In much the same way, in the Middle Ages, there were few books,\nand it was easy for a man to handle nearly all the information that\nwas in books As the printing press came into use, man’s brain could\nno longer handle all recorded information, and the effort to do so was\ngiven up But in 1944, a brain to handle information, equipped with a\nmotor and supporting the man and his reasoning, came into existence\n—as the sequence-controlled calculator In previous chapters we have examined some of the giant\nmechanical brains that have been finished; we have also considered\nthe design of such machines Now in this chapter we shall discuss the\nfuture significance of machines that think, of motorized information We shall discuss what we can foresee if we look with imagination into\nthe future There are two questions we need to ask: What types of machines\nthat think can we foresee What types of problems to be solved by\nthese machines can we foresee FUTURE TYPES OF MACHINES THAT THINK\n\n\nThe machines that already exist show that some processes of\nthinking can already be performed very quickly:\nCalculating: adding, subtracting, Reasoning: comparing, selecting, Referring: looking up information in lists, We can expect other processes of thinking to come up to high speed\nthrough the further development of thinking machines",
    "We can expect other processes of thinking to come up to high speed\nthrough the further development of thinking machines Automatic Address Book\nNowadays when we wish to send out announcements of an event,\nlike going to South America for a year, we may copy the addresses of\nour friends onto the envelopes by hand In the future, we can see our\naddress book as a spool of magnetic tape When we wish to send out\nannouncements, we put a stack of blank envelopes into the machine\nthat will read the magnetic tape, and we press a button Out will come\nthe envelopes addressed If we wish to select only those friends of ours whose last names we\nput down on a list, we can write the list on another magnetic tape,\nplace it also in the machine, and set a few switches Then the machine\nwill read the names on the list, find their addresses in the address-\nbook tape, and prepare only the envelopes we want If a friend’s\naddress changes, we can notify the machine It will find his old\naddress, erase it, and enter the new address Automatic Library\nWe can foresee the development of machinery that will make it\npossible to consult information in a library automatically Suppose\nthat you go into the library of the future and wish to look up ways for\nmaking biscuits You will be able to dial into the catalogue machine\n“making biscuits ” There will be a flutter of movie film in the\nmachine Soon it will stop, and, in front of you on the screen, will be\nprojected the part of the catalogue which shows the names of three or\nfour books containing recipes for biscuits If you are satisfied, you will\npress a button; a copy of what you saw will be made for you and\ncome out of the machine After further development, all the pages of all books will be\navailable by machine Then, when you press the right button, you will\nbe able to get from the machine a copy of the exact recipe for biscuits\nthat you choose",
    "Then, when you press the right button, you will\nbe able to get from the machine a copy of the exact recipe for biscuits\nthat you choose We are not yet at the end of foreseeable development There will\nbe a third stage You will then have in your home an automatic\ncooking machine operated by program tapes You will stock it with\nvarious supplies, and it will put together and cook whatever dishes\nyou desire Then, what you will need from the library will be a\nprogram or routine on magnetic tape to control your automatic cook And the library, instead of producing a pictorial copy of the recipe for\nyou to read and apply, will produce a routine on magnetic tape for\ncontrolling your cooking machine so that you will actually get\nexcellent biscuits Of course, you may have other kinds of automatic producing\nmachinery in your home or office The furnishing of routines to\ncontrol automatic machinery will become a business of importance Automatic Translator\nAnother machine that we can foresee would be used for translating\nfrom one language to any other We can call it an automatic translator Suppose that you want to say “How much ” in Swedish You dial into\nthe machine “How much ” and press the button “Swedish,” and the\nmachine will promptly write out “Hur mycket ” for you ” for you It also will\npronounce it, if you wish, for there would be little difficulty in\nrecording on magnetic tape the pronunciation of the word as spoken\nby a good speaker of the language The machine could be set to repeat\nthe pronunciation several times so that the student could really learn\nthe sound He could learn it better, probably, by hearing it and trying\nto say it than he could by using any set of written symbols Automatic Typist\nWe now come to a possible machine that uses a new principle This principle is that of being able to recognize signs This machine\nwould perceive writing on a piece of paper and recognize that all the\na’s that appear on the paper are cases of a, and that all the b’s that\nappear on it are instances of b, and so forth The machine could then\n\n\ncontrol an electric typewriter and copy the marks that it sees The first\nstage of this machine would be one in which only printed characters\nof a high degree of likeness could be recognized In later stages,\nhandwriting, even rather illegible handwriting, might be recognizable\nby the machine We can call it an automatic typist The elements of the automatic typist would be the following:\n1 Phototubes (electronic tubes sensitive to the\nbrightness of light), which could sense the\ndifference between black and white (these\nalready exist)",
    "Phototubes (electronic tubes sensitive to the\nbrightness of light), which could sense the\ndifference between black and white (these\nalready exist) 2 A memory of the shapes of 52 letters, 10 digits,\nand punctuation marks Fine distinctions\nwould be required of this memory in some\ncases—like the difference between the numeral\n5 and the capital letter S 3 3 A control that would cause the machine to tune\nitself, so that a good matching between the\nmarks \nit \nobserved \nand \nthe \nshapes \nit\nremembered would be reached 4 A triggering control so that, when the machine\nhad reached good enough matching between\nits observations and its memory, the machine\nwould proceed to identify the marks, read\nthem, and transfer them 5 An electric typewriter, which would respond to\nthe transferred instructions (This also already\nexists )\nThis machine is perhaps not so farfetched as it might seem During\nWorld War II, gun-aiming equipment using the new technique radar\nreached a high stage of development Many shots that disabled and\nsank enemy ships were fired in total darkness by radar-controlled\nguns On the glowing screen in the control room, there were two\nspots, one that marked the target and one that reported the point at\nwhich the gun was aimed These two spots could be brought almost\nautomatically into agreement In the same way, a report from a\nphototube telling the shape of an observed mark and a report from the\nmemory of the machine telling the shape of a similar mark could be\n\n\ncompared by the machine for likeness and, if judged enough alike,\ncould be approved as identical Even the phrase “enough alike” can be applied by a machine During World War II, tremendous advances were made in machinery\nfor deciphering enemy messages Machines observed various features\nand patterns in enemy messages, swiftly counted the frequency of\nthese features, and carried out statistical tests Then the machines\nselected those few cases in which the patterns showed meaning\ninstead of randomness A machine like the automatic typist, if made flexible enough,\nwould be, of course, extremely useful A great load of dull office work\nis now being thrown on clerks whose task is to translate from writing\nand typing into languages that machines can read, such as punch\ncards At the present time, if punch-card machines are widely used in\na big company, the company must employ large numbers of girls\nwhose sole duty is to read papers and punch up cards A still bigger\nchore is the work of typists in all kinds of businesses whose main duty\nis to read handwriting, etc , and then copy the words on a typewriter",
    ", and then copy the words on a typewriter Each square in the grill\nis watched by a phototube Fig 1 Scheme for distinguishing A and H by 15\nphototubes Scheme for distinguishing A and H by 15\nphototubes Research has already begun on various features of the automatic\ntypist because of its obvious labor-saving value For example, many\npatents have been issued on schemes for dividing the area occupied\nby a letter or a digit into an array of spots, with a battery of\nphototubes each watching a spot The reports from the phototubes\ntogether will distinguish the letter or digit For example, if we\nconsider A and H placed in a grill of fifteen spots, 5 long by 3 wide\n(see Fig 1), then the phototubes can distinguish between A and H by\nsensing black or white in the spot in the middle of the top row When\nwe consider how easily and swiftly a human being does this, we can\n\n\nonce more marvel at the recognizing machine we all carry around\nwith us in our heads Automatic Stenographer\nAnother development that we can foresee is one that we can call\nthe automatic stenographer This is a machine that will listen to sounds\nand write them down in properly spelled English words The elements\nof this machine can be outlined:\n1 Microphones, which can sense spoken sounds\n(these already exist) 2 A memory storing the 40 (more or less)\nphonetic units or sounds that make up English,\nsuch as the 23 consonant sounds,\np\nb\nl\nng\nf\nv\nm\nth\nt\nd\nn\nr\ns\nz\nh\ny\nk\ng\n \nw\nch\nj\n \nsh\nzh (heard in “pleasure”)\nand the 17 vowel sounds,\nLong\nShort\nOther\nA (“ate”)\na (“cat”)\nar (“are”)\nE (“eat”)\ne (“end”)\naw (“awe”)\nI (“isle”)\ni (“in”)\ner (“err”)\nO (“owe”)\no (“on”)\now (“owl”)\nU (“cute”)\nu (“up”)\noi (“oil”)\nOO (“roof”)\noo (“book”)\n \n3 A collection of the rules of spelling in English,\n\n\ncontaining many statements like\nThe sound b is always spelled b\nThe sound sh may be spelled sh (ship), s\n(sugar), ti (station), ci (physician), ce\n(ocean) or tu (picture) and other statements\nbased on context, word lists, derivation,\netc These are the statements by means of\nwhich a good English speller knows how to\nspell even words that he hears for the first\ntime 4 A triggering control so that, when the machine\nreaches good enough matching between its\nobservations of sounds, its memory of sounds,\nand its knowledge of spelling rules, the\nmachine will identify groups of sounds as\nwords, determine their spelling, and report the\nletters determined 5 An electric typewriter, which would type the\nreported letters With this type of machine, you would dictate your letters into a\nmachine (now existing) that would record your voice Then the record\nwould be placed on the automatic stenographer, and out would come\nyour letters written and spaced as they should be Automatic Recognizer\nWe can foresee a recognizing machine with very general powers Suppose that we call it an automatic recognizer (see Fig 2) It will have\nthe following elements:\n1 Input This element will consist of a set of\nobserving instruments, capable of perceiving\nsights, sounds, etc There will be ways of\npositioning or tuning these instruments 2 Memory This element will store knowledge It\nmay store the patterns of observations that we\nare interested in; or it may store general rules\non how to find patterns of observations that we\n\n\nwill be interested in It will contain knowledge\nabout acceptable groups of patterns, about\nactions to be performed in response to\npatterns, etc 3 Program 1 The element “Program 1” performs a\nset of standard instructions Under these\ninstructions, the machine:\nCompares group after group of observations\nwith the information in the memory Compares \nthese \ngroups \nwith \npatterns\nfurnished, \nor \nseeks \nto \norganize \nthe\nobservations into patterns Counts cases and tests frequencies Finds out how much matching with patterns\nthere is Tunes the observing instruments in ways to\nincrease matching Fig 2 Scheme of an automatic recognizer 4 Program 2 The element “Program 2” performs\nanother set of standard instructions Under\nthese instructions, the machine, if it is tuned\nwell, matches sets of observations one after\nanother with the patterns and so reads them 5 Triggering Control This element shifts the\ncontrol of the machine from Program 1 to\nProgram 2 It does this when the machine\nreaches “good matching ” We shall set the\nmeaning of this into the machine in much the\nsame way as we set “warm” into a thermostat",
    "” We shall set the\nmeaning of this into the machine in much the\nsame way as we set “warm” into a thermostat 6 Output This element performs any action that\nwe want, depending on recognized patterns\nread and any other knowledge or instructions\n\n\nstored in the memory The automatic recognizer will be capable of extraordinary tasks With microphones and a large memory, this type of machine would be\nable to hear a foreign language spoken and translate it into spoken or\nwritten English With phototubes and with an expanded filtering and\ndecoding capacity as in deciphering machines, the automatic\nrecognizer should be able to read a dead language, even those (such\nas Minoan or Etruscan) that have so far resisted efforts to read it The\nmachine would derive rules for the translation of the language and\ntranslate any sample An automatic recognizer could perhaps be equipped with many\nsensitive, tiny observing instruments that could be placed around or\nin the brain and nervous systems of animals Then the machine might\nenable us to find out what activity in the nervous system corresponds\nwith what activity in the animal TYPES OF PROBLEMS THAT MACHINES\nWILL SOLVE IN THE FUTURE\nWe turn now to the second question regarding the future of\nmachines that think: What types of problems can we foresee as solved\nby these machines Problems of Control\nProbably the foremost problem which machines that think can\nsolve is automatic control over all sorts of other machines This\ninvolves controlling a machine that is running so that it will do the\nright thing at the right time in response to information For example,\nsuppose that you are mowing a lawn with a mowing machine You\nwatch the preceding strip so as to stay next to it You watch the ends\nof the strips, where you turn around If a stick is caught in the cutting\nblade, you stop and take it out Now it is entirely possible to put\ndevices on the mowing machine so that all these things will be taken\ncare of automatically In fact, in the case of plowing a large field, a\ntractor-plow can be equipped with a device that guides it next to the\npreceding furrow Thus, once the first furrow around the edge has\nbeen made, riderless tractors will plow a whole field and stop in the\nmiddle For another example, take a gas furnace for heating steam to keep\na house warm Such a furnace has automatic controls, which respond\nto the following information whenever reported:\nHouse too warm House not warm enough Too much steam pressure Not enough water in boiler Gas flame not lit Daytime Nighttime In fact, your own meaning of “warm” can be put into the control\nsystem: you set the dial on your thermostat at the temperature that\n“warm” is to be for you In the future many kinds of automatic control will be common We\nshall have automatic pilots for flying and landing airplanes We shall\nhave automatic missiles for destructive purposes, such as bombing\nand killing, and for constructive purposes, such as delivering mail and\nfast freight An article in the magazine Fortune for November 1946\ndescribed the automatic factory (see Supplement 3) This is a factory\nin which there would be automatic arms for holding stuff being\nmanufactured, and automatic feed lines for supplying material just\nwhere it is needed All this factory would be controlled by machines\nthat handle information automatically and produce actions that\nrespond to information This prospect fills us with concern as well as with amazement How shall we control these automatic machines, these robots, these\nFrankensteins What will there be left for us to do to earn our living But more of this in the next chapter Problems of Science\nOther problems for which we can foresee the use of machines that\nthink are the understanding, and later the controlling, of nature One\nof these problems is weather forecasting and weather control The Weather Brain\nWe can imagine the following type of machine—a weather brain A\nthousand weather observatories all over the country observe the\nweather at 8 a m The observations are fed automatically through a\ncountrywide network of communication lines into a central station Here a giant machine, containing a great deal of scientific knowledge\nabout the weather, takes in all the data reported to it At 8:15 the\nweather brain starts to calculate; in half an hour it has finished,\nhaving produced an excellent forecast of the weather for the whole\ncountry Then it proceeds to transmit its forecast all over the country By 8:50 every weather station, newspaper, radio station, and airport\nin the country has the details In October 1945, Dr V K Zworykin of\nthe Princeton Laboratories of the Radio Corporation of America\nproposed solving the problem of weather forecasting in this way by a\ngiant brain The weather brain will have a second stage of application From\ntime to time and here and there, the weather is unstable: it can be\ntriggered to behave in one way or another For example, recently,\npellets of frozen carbon dioxide—often called Dry Ice—have been\ndropped from planes and have caused rain In fact, a few pounds of\nDry Ice have apparently caused several hundred tons of rain or snow In similar ways, we may, for example, turn away a hail storm so that\nhail will fall over a barren mountain instead of over a farming valley\nand thus protect crops Or we may dispel conditions that would lead\nto a tornado, thus avoiding its damage Both these examples involve\nlocal weather disturbances However, even the greatest weather\ndisturbances, like hurricanes and blizzards, may eventually be\ndirected to some extent Thus the weather may become to some\ndegree subject to man’s control, and the weather brain will be able to\ntell men where and when to take action Psychological Testing\nAnother scientific problem to which new machinery for handling\ninformation applies is the problem of understanding human beings\nand their behavior This increased understanding may lead to much\nwiser dealing with human behavior For example, consider tests of aptitudes If you take one of these\n\n\ntests, you may be asked to mark which word out of five suggested\nones is nearest in meaning to a given word Or your test may be 40\nsimple arithmetical problems to be solved in 25 minutes Or you may\nbe given a sheet with 20 circles, and be asked to put 3 dots in the\nfirst, 7 dots in the second, 4 dots in the third, 11 dots in the fourth,\nand so on, irregularly; you may be given a total of 45 seconds to do\nthis as well as you can Now, if a vocational counselor gives you one\nof these tests, and if you get 84 out of 100 on it, he needs to know just\nwhat he has measured about you Also, he needs to know whether he\ncan reasonably forecast that, as a result of your grade of 84, you will\nbe good at writing articles, or good at supervising the work of other\npeople, or good at designing in a machine shop He needs to know the\nrecords of people with scores of about 84 on this test and to have\nevidence supporting his forecasts If we wish to make the most use of the tests, we need to carry out\na good deal of statistics, mathematics, and logic For example, it will\nturn out that answers to some questions are much more significant\nthan answers to others, and so we can greatly improve the quality of\nthe tests by keeping only the more significant questions Powerful\nmachinery for handling calculations will be very useful in the field of\naptitude testing But, you may ask, what if the person analyzing your answers has\nto use interpretations and judgments If the judgments and\ninterpretations can be expressed in words, and if the words can be\ntranslated into machine language, then the machine can carry out the\nanalysis Usually the difference between a rule and a judgment is\nsimply this: a rule in a case in which it is hard to express all the\nfactors being considered is called a judgment",
    "Usually the difference between a rule and a judgment is\nsimply this: a rule in a case in which it is hard to express all the\nfactors being considered is called a judgment Psychological Trainer\nIt is conceivable that machines that think can eventually be\napplied in the actual treatment of mental illness and maladjustment Consider what a physician does In treating a psychiatric case, such as\na neurosis, a physician uses words almost entirely He asks questions He listens to the patient’s answers Each answer takes the physician\nnearer and nearer to a diagnosis By and by the physician knows what\nmost of the difficulty is Then he must present his knowledge slowly\nto the patient, gradually guiding the patient to understanding It is a\n\n\npsychological truth that telling a man in ten minutes what is wrong\nwith him does not cure him The physician seeks to free the patient\nfrom the tormenting circles of habit and worry in which he has been\ntrapped Often the diagnosis is short and the treatment is long; the\nreasons for the neurosis may soon be clear to the physician, but they\nmay take months to become clear to the patient Now let us consider the following kind of machine as an aid to the\nphysician We might call this kind of machine a psychological trainer,\nfor in many ways it is like the training machines used in World War II\nfor training a pilot to fly an airplane The psychological trainer would\nhave the following properties:\n1 The machine is able to show sound movies—\nproduce pictures and utter words 2",
    "2 It is able to put before the patient: situations,\nproblems, questions, experiences, etc It is able to put before the patient: situations,\nproblems, questions, experiences, etc 3 3 It is able to take in responses from the patient It is able to take in responses from the patient 4 4 It is able to receive a program of instructions\nfrom the physician It is able to receive a program of instructions\nfrom the physician 5 5 Depending on the responses of the patient and\non the program from the physician, the\ntraining machine can select more material to\nput before the patient Depending on the responses of the patient and\non the program from the physician, the\ntraining machine can select more material to\nput before the patient 6 6 The training machine produces a record of what\nit presented and of how the patient responded,\nso that the physician and the patient can study\nthe record later What sort of films would the machine hold The machine could be\nloaded with a number of films which would help in the particular\ntype of neurosis from which the patient was suffering What sort of responses could the patient make The patient might\nhave buttons in front of him which he could press to indicate such\nanswers as:\nYes\nI don’t know\nRepeat\nNo\nIt depends\nGo ahead\n\n\nAlso, the patient might hold a device—like a lie detector, perhaps—\nwhich would report his state of tenseness, etc , and so report what he\nreally felt Where would the machine’s questions come from From one or\nmore physicians very clever in the treatment of mental illness Suppose that the patient is inconsistent in his answers The\nmachine, discovering the inconsistencies, could return to the subject\nand ask related questions in a different way As soon as several\nquestions related to the same point are answered consistently, the\nmachine could exclude groups of questions that no longer apply and\ncould proceed to other questions that would still apply Patients would vary in their ability to go as fast as the machine\ncould So from time to time the machine would ask questions to test\nthe effect of what it had presented; and, depending on the answers,\nthe machine would go faster or would bring in additional material to\nclarify some point This machine might have a few advantages over ordinary\ntreatment For example, with the machine, treatment does not depend\non the physician’s making the right answer in a split second, as it may\nin a personal interview Also, the patient might be franker with the\nmachine than with the physician, for it might be arranged that the\npatient could review his record, and then decide whether to confess it\nto his physician Such a machine would enable physicians to treat many more\npatients than they now can In fact, it is estimated that nearly 50 per\ncent of persons who consult physicians are suffering only from mental\nillness Such a machine would therefore be a great help Problems of Business\nAnother large group of problems for which we can foresee the use\nof machines that think is found in business and economics For example, consider production scheduling in a business or a\nfactory The machine takes in a description of each order received by\nthe business and a description of its relative urgency The machine\nknows (that is, has in its memory) how much of each kind of raw\nmaterial is needed to fill the order and what equipment and\n\n\nmanpower are needed to produce it The machine makes a schedule\nshowing what particular men and what particular equipment are to be\nset to work to produce the order The machine turns out the best\npossible production schedule, showing who should do what when, so\nthat all the orders will be filled in the best sequence What is the\n“best” sequence We can decide what we think is the best sequence,\nand we can set the machine for making that kind of selection, in the\nsame way as we decide what is “warm” and set the thermostat to\nproduce it On a much larger scale, we can use mechanical brains to study\neconomic relations in a society Everything produced in a society is\nmade by consuming some materials, labor, equipment, and skill The\noutput produced by one man or factory or industry becomes the input\nfor other men, factories, industries In this way all economic units are\nlinked together by many different kinds and degrees of dependence The situation is, of course, complicated: it changes as time goes on\nand as people want different things produced Economists have\nalready set up simple models of economic societies and have studied\nthem But with machines that think, it will be possible to set up and\nstudy far more complicated models—models that are very much like\nthe society we live in We can then answer questions of economics by\ncalculation instead of by arguments and counting noses We shall be\nable to solve definitely such problems as: “How will a rise in the price\nof steel affect the farming industry ” “How much money must be paid\nout as wages and salaries so that consumer purchasing power will buy\nback what industry produces ”\nMachines and the Individual\nWhat about the ordinary everyday effects of these machines upon\nyou and me as an individual We can see that the new machinery will\napply on a small scale even to us Small machines using a few\nelectronic tubes—much like a radio set, for example—and containing\nspools of magnetic wire or magnetic tape will doubtless be available\nto us We shall be able to use them to keep addresses and telephone\nnumbers, to figure out the income tax we should pay, to help us keep\naccounts and make ends meet, to remember many things we need to\nknow, and perhaps even to give us more information For there are a\ngreat many things that all of us could do much better if we could only\n\n\napply what the wisest of us knows We can even imagine what new machinery for handling\ninformation may some day become: a small pocket instrument that we\ncarry around with us, talking to it whenever we need to, and either\nstoring information in it or receiving information from it Thus the\nbrain with a motor will guide and advise the man just as the armor\nwith a motor carries and protects him Chapter 12\nSOCIAL CONTROL:\nMACHINES THAT THINK\nAND HOW SOCIETY MAY CONTROL THEM\nIt is often easier for men to create a device than to guide it well\nafterwards: it is often easier for a scientist to study his science than to\nstudy the results for good or evil that his discoveries may lead to But\nit is not right nor proper for a scientist, a man who is loyal to truth as\nan ideal, to have no regard for what his discoveries may lead to This principle is now being widely recognized Many scientists\ntoday—both as individuals and as groups, and especially the atomic\nscientists—are considering the results of their scientific discoveries;\nand they are sharing in the effort to render those results truly useful\nto humanity It would be easy to leave out of this book any discussion of how\nmachines that think may be controlled, any consideration of how they\nmay be made truly useful to humanity But that would be hardly right\nor proper In concluding a book such as this one, that touches on\nmany aspects of machines that think, we need to consider what can\nand should be done to make such machines of true benefit to all of\nhumanity So, we come to the most important of all our questions: What sort\nof control over machines that think do we need in human society MACHINE THAT BOTH THINKS AND ACTS\nFrom a narrow point of view, a machine that only thinks produces\nonly information It takes in information in one state, and it puts out\ninformation in another state From this viewpoint, information in\nitself is harmless; it is just an arrangement of marks; and accordingly,\na machine that thinks is harmless, and no control is necessary Although it is true that the information produced only becomes\n\n\ngood or evil after other machinery or human beings act on the\ninformation, in reality a machine with the power to produce\ninformation is constructed only for the reason of its use We want to\nknow what such machines can tell us only because we can then\nproceed to act much more efficiently than before For example, a\nguided missile needs a mechanical brain only because then it can\nreach its target In all cases mechanical brains are inseparable from\ntheir uses",
    "In all cases mechanical brains are inseparable from\ntheir uses For the purposes of this chapter, the narrow view will be rejected\nbecause it dodges the issue We shall be much concerned with the\ncombination of a machine that thinks with another machine that acts;\nand we shall often call this combination the robot machine READING THIS CHAPTER\nNow, before launching further into the discussion, we need to say\nthat the conclusions suggested in this chapter are not final Even if\nthey are expressed a little positively in places, they are nevertheless\nsubject to change as more information is discovered and as the\nappraisal of information changes with time Also, almost any\nconclusions about social control—including, certainly, the conclusions\nin this chapter—are subject to controversy But controversy is good: it\nleads to thought The more minds that go to work on solving the\nproblem of social control over robot machines and other products of\nthe new technology—which is rushing upon us from the discoveries of\nthe scientists—the better off we all will be If, while stimulating\ndisagreement, the ideas expressed in this chapter should succeed in\nstimulating thought and deliberation, the purpose of this chapter will\nbe well fulfilled Up to this point in this book, the emphasis has been on\npossibilities of benefits to humanity that may arise from machines that\nthink In this chapter, devoted as it is to the subject of control, the\nemphasis is on possibilities for harm Both possibilities are valid, and\nthe happening of either depends upon the actions of men In much the\nsame way, atomic energy is a great possibility for benefit and for\nharm It is the nature of control to put a fence around danger; and so\nit is natural in this chapter that the weight of attention should shift to\nthe dangerous aspects of machines that think Perhaps a reader may feel that a chapter of this kind is rather out\n\n\nof place in a book, such as this one, that seeks to be scientific If so, he\nis reminded that, in accordance with the general suggestions for\nreading this book stated in the preface, he should omit this chapter FRANKENSTEIN\nPerhaps the first study of the consequences of a machine that\nthinks is a prophetic novel called Frankenstein, written more than a\nhundred years ago, in 1818 The author, then only 21 years old, was\nMary W Godwin, who became the wife of the poet Percy Bysshe\nShelley According to the story, a young Swiss, an ardent student of\nphysiology and chemistry, Victor Frankenstein, finds the secret of life He makes an extremely ugly, clever, and powerful monster, with\nhuman desires Frankenstein promptly flees from his laboratory and\nhandiwork The monster, after seeking under great hardships for a\nyear or two to earn fair treatment among men, finds himself\ncontinually attacked and harmed on account of his ugliness, and he\nbecomes embittered He begins to search for his creator for either\nrevenge or a bargain When they meet:\n“I expected this reception,” said the daemon “All men hate the wretched; how then must I be\nhated who am miserable beyond all living things Yet\nyou my creator detest and spurn me, thy creature, to\nwhom thou art bound by ties only dissoluble by the\nannihilation of one of us You purpose to kill me How\ndare you sport thus with life Do your duty towards me,\nand I will do mine towards you and the rest of mankind If you will comply with my conditions, I will leave them\nand you at peace; but if you refuse, I will glut the maw\nof death, until it be satiated with the blood of your\nremaining friends ”\nFrankenstein starts to comply with the main condition, which is to\nmake a mate for the monster; but Frankenstein cannot bring himself\nto do it So the monster causes the death one after another of all\nFrankenstein’s family and closest friends; and the tale finally ends\nwith the death of Frankenstein and the disappearance of the monster As the dictionary says about Frankenstein, “The name has become\n\n\na synonym for one destroyed by his own works ”\nROSSUM’S UNIVERSAL ROBOTS\nPerhaps the next study of the consequences of a machine that\nthinks is a remarkable play called R U R (for Rossum’s Universal\nRobots), first produced in Prague in 1921 Karel Čapek, the Czech\ndramatist who wrote it, was then only 31 The word “robot” comes\nfrom the Czech word “robota,” meaning compulsory service According to the play, Rossum the elder, a scientist, discovered a\n“method of organizing living matter” that was “more simple, flexible,\nand rapid” than the method used by nature Rossum the younger, an\nengineer, founded a factory for the mass production of artificial\nworkmen, robots They had the form of human beings, intelligence,\nmemory, and strength; but they were without feelings In the first act, the factory under Harry Domin, General Manager,\nis busy supplying robots to purchasers all over the world—for work,\nfor fighting, for any purpose at all, to anyone who could pay for them Domin declares:\n“ in ten years, Rossum’s Universal Robots will produce\nso much corn, so much cloth, so much everything that\nthings will be practically without price There will be no\npoverty All work will be done by living machines Everybody will be free from worry and liberated from\nthe degradation of labor Everybody will live only to\nperfect himself It’s bound to happen ”\nIn the second act, ten years later, it turns out that Domin and the\nothers in charge of the factory have been making some robots with\nadditional human characteristics, such as the capacity to feel pain The newer types of robots, however, have united all the robots against\nman, for the robots declare that they are “more highly developed than\nman, stronger, and more intelligent, and man is their parasite ”\nIn the last act, the robots conquer and slay all men except one—an\narchitect, Alquist, who in the epilogue provides a final quirk to the\nplot FACT AND FANCY\n\n\nNow what is fact and what is fancy in these two warnings given to\nus a hundred years apart Of course, it is very doubtful that a Frankenstein monster or a\nRossum robot will soon be constructed with nerves, flesh, and blood\nlike an animal body But we know that many types of robot machines\ncan even now be constructed out of hardware—wheels, motors, wires,\nelectronic tubes, etc They can handle many kinds of information and\nare able to perform many kinds of actions, and they are stronger and\nswifter than man Of course, it is doubtful that the robot machines, by themselves\nand of their own “free will,” will be dangerous to human beings But\nas soon as antisocial human beings have access to the controls over\nrobot machines, the danger to society becomes great We want to\nescape that danger Escape from Danger\nA natural longing of many of us is to escape to an earlier, simpler\nlife on this earth Victor Frankenstein longed to undo the past He\nsaid:\n“Learn from me, if not by my precepts, at least by\nmy example, how dangerous is the acquirement of\nknowledge, and how much happier that man is who\nbelieves his native town to be the world, than he who\naspires to become greater than his nature will allow ”\nAny sort of return to the past is, of course, impossible It is\ndoubtful that men could, even if they wanted to, stop the great flood\nof technical knowledge that science is now producing We all must\nnow face the fact that the kind of world we used to live in, even so\nrecently as 1939, is gone There now exist weapons and machines so\npowerful and dangerous in the wrong hands that in a day or two most\nof the people of the earth could be put to death Giant brains are\nclosely related to at least two of these weapons: scientists have\nalready used mechanical brains for solving problems about atomic\nexplosives and guided missiles In addition, thinking mechanisms\ndesigned for the automatic control of gunfire were an important part\nof the winning of World War II They will be a still more important\npart of the fighting of any future war Nor can we escape to another part of the earth which the new\nweapons will not reach At 300 miles an hour, any spot on earth can\nbe reached from any other in less than 48 hours A modern plane\nexceeds this speed; a rocket or guided missile doubles or trebles it",
    "A modern plane\nexceeds this speed; a rocket or guided missile doubles or trebles it Nor can we trust that some kind of good luck will pull us through\nand help men to escape the consequences of what men do Both\nFrankenstein and Domin reaped in full the consequences of what they\ndid The history of life on this earth that is recorded in the rocks is full\nof evidence of races of living things that have populated the earth for\na time and then become extinct, such as the dinosaurs In that long\nhistory, rarely does a race survive In our own day, insects and fungi\nrather than men have shown fitness to survive and spread over the\nearth: witness the blight that destroyed the chestnut trees of North\nAmerica, in spite of the best efforts of scientists to stop it There seems to be no kind of escape possible It is necessary to\ngrapple with the problem: How can we be safe against the threat of\nphysical harm from robot machines UNEMPLOYMENT\nThe other chief threat from robot machines is against our\neconomic life Harry Domin, in R U R , you remember, prophesied:\n“All work will be done by living machines ” As an example, in the\nmagazine Modern Industry for Feb 15, 1947, appeared a picture of a\nmachine for selling books, and under the picture were the words:\nAnother new product in robot salesmen—Latest in the\nparade of mechanical vending machines is this book\nsalesman It is designed for use in hospitals, rail\nterminals, and stores It offers 15 different titles,\nselected manually, and obtained by dropping quarter in\nslot Cabinet stores 96 books Can you feel the breath of the robot salesman, workman, engineer,\n——, on the back of your neck At the moment when we combine automatic producing machinery\nand automatic controlling machinery, we get a vast saving in labor\nand a great increase in technological unemployment In extreme\ncases, perhaps, the effect of robot machines will be the disappearance\nof men from a factory Such a factory will be like a modern power\n\n\nplant that turns a waterfall into electricity: once the machinery is\ninstalled, only one watchman is ordinarily needed But, in most cases,\nthis will be the effect: in a great number of factories, mines, farms,\netc , the labor force needed will be cut by a great proportion The\neffect is not different in quality, because the new development is\nrobot machinery; but the amount of technological unemployment\ncoming from robot machines is likely to be considerably greater than\npreviously The robot machine raises the two questions that hang like swords\nover a great many of us these days The first one is for any employee:\nWhat shall I do when a robot machine renders worthless all the skill I\nhave spent years in developing The second question is for any\nbusinessman: How shall I sell what I make if half the people to whom\nI sell lose their jobs to robot machines SOCIAL CONTROL\nAND ITS TWO SIDES\nThe two chief harmful effects upon humanity which are to be\nexpected \nfrom \nrobot \nmachines \nare \nphysical \ndanger \nand\nunemployment These are serious risks, and some degree of social\ncontrol is needed to guard against them There will also be very great advantages from robot machines The\nmonster in Frankenstein is right when he says, “Do your duty towards\nme, and I will do mine towards you and the rest of mankind ” And\nHarry Domin in R U R is right as to possibility when he says, “There\nwill be no poverty Everybody will be free from worry ” Social\ncontrol must also be concerned with how the advantages from robot\nmachines are to be shared The problem of social control over men and their devices has\nalways had two sides The first side deals with what we might plan for\ncontrol if men were reasonable and tolerant This part of the problem\nseems relatively easy The other side deals with what we must\nordinarily arrange, since most men are often unreasonable and\nprejudiced and, as a result, often act in antisocial ways This part of\nthe problem is hard Let us begin with the easier side first TYPES OF CONTROL—\n\n\nIF MEN WERE REASONABLE\nIn seeking to fulfill wants and achieve safety, men have used\nhundreds of types of control The main types are usually called\npolitical and economic systems, but there are always great quantities\nof exceptions The more mature and freer the society, the greater the\nvariety of types of control that can be found in it Probably the most widely used type of control in this country is\nprivate and public control working together, as private ownership and\npublic regulation—for example, railroads, banks, airlines, life\ninsurance companies, telephone systems, and many others It would\nbe reasonable to expect private ownership and public regulation of a\ngreat many classes of robot machines, to the end that they would\nnever threaten the safety of people Another common type of control is public ownership and\noperation; examples are toll bridges, airports, city transit systems, and\nwater-supply systems Atomic energy was so clearly fraught with\nserious implications that in 1946 the Congress of the United States\nplaced it entirely under public control expressed as the Atomic Energy\nCommission There is a class of robot machinery which has already\nreached the stage of acute public concern: guided missiles and\nautomatic fire-control It would be reasonable that in this country all\nactivity in this subdivision should be under close control by the\nDepartment of Defense In the international arena, again, the problem becomes soluble if\nwe assume men to be reasonable An international agency, such as an\norgan of the United Nations, would take over inspection and control\nof robot machine activities closely affecting the public safety\nanywhere in the world Particularly, this agency would concern itself\nwith guided missiles, robot pilots for planes, automatic gunfire\ncontrol, etc Much manufacturing skill is needed to make such\nproducts as these: the factories where they could be manufactured\nwould thereby be determined Also, a giant brain is a useful device for\nsolving scientific problems about weapons of mass destruction So the\nagency would need to inspect the problems being solved on such\nmachines This agency would be responsible to a legislature or an\nexecutive body representing all the people in the world—if men were\nreasonable In regard to the effects of robot machines on unemployment,\nagain, if men were reasonable, the problem would be soluble The\nproblem is equivalent to the problem of abundance: how should men\ndistribute the advantages of a vast increase in production among all\nthe members of society in a fair and sensible way A vast increase in\nproduction is not so impossible as it may seem For example, in 1939,\nwith 45 million employed, the United States index of industrial\nproduction was at 109, and, in 1943, with 52½ million employed, the\nindex of production was at 239 If men were reasonable, the net profits from robot machinery\nwould be divided among (1) those who had most to do with devising\nthe new machinery, and (2) all of society A rule would be adopted\n(probably it could be less complicated than some existing tax rules)\nwhich would take into account various factors such as rewards to the\ninventors, incentives to continue inventing, adequate assistance to\nthose made unemployed by the robot machines, reduction of prices to\nbenefit consumers, and contributions to basic and applied scientific\nresearch In fact, under the assumption “if men were reasonable,” it would\nhardly be necessary to devote a chapter to the problem of social\ncontrol over robot machines OBSTACLES\nThe discussion above of how robot machines could be controlled\nsupposing that men were reasonable, seems, of course, to be glaringly\nimpractical Men are not reasonable on most occasions most of the\ntime If we stopped at this point, again we would be dodging the\nissue What are the obstacles to reasonable control There are, it seems, two big obstacles and one smaller one to\nreasonable types of social control over robot machines The smaller\none is ignorance, and the two big obstacles are prejudice and a\nnarrow point of view Ignorance\nBy ignorance we mean lack of knowledge and information Now\nmechanical brains are a new and intricate subject A great many\n\n\npeople will, through no fault of their own, naturally remain\nuninformed about mechanical brains and robot machines for a long\ntime However, there is a widespread thirst for knowledge these days:\nwitness in magazines, for example, the growth of the article and the\ndecline of the essay There is also a fairly steady surge of knowledge\nfrom the austere scientific fountain of new technology We can thus\nsee both a demand and a supply for information in such fields as\nmechanical brains and robot machines We can expect, therefore, a\nfairly steady decline in ignorance Prejudice\nPrejudice is a much more serious obstacle to reasonable control\nover robot machines",
    "Prejudice\nPrejudice is a much more serious obstacle to reasonable control\nover robot machines It will be worth our while to examine it at\nlength It will be worth our while to examine it at\nlength Prejudice is frequent in human affairs For example, in some\ncountries, but not in all, there is conflict among men, based on their\nreligious differences Again, in other countries, but not in all, there is\nwide discrimination among men, based on the color of their skin Over the whole world today, there is a sharp lack of understanding\nbetween conservatives, grading over to reactionaries, on the one\nhand, and liberals, grading over to radicals, on the other hand All\nthese differences are based on men’s attitudes, on strongly held sets of\nbeliefs These attitudes are not affected by “information”; the\n“information” is not believed The attitudes are not subject to\n“judgment”; they come “before judgment”: they are prejudices Even\nin the midst of all the science of today, prejudice is widespread In\nGermany, from 1933 to 1939, we saw one of the most scientific of\ncountries become one of the most prejudiced Prejudice is often difficult to detect We find it hard to recognize\neven in ourselves For a prejudice always seems, to the person who\nhas it, the most natural attitude in the world As we listen to other\npeople, we are often uncertain how to separate information, guesses,\nhumor, \nprejudice, \netc Circumstances \ncompel \nus \nto \naccept\nprovisionally quantities of statements just on other people’s say-so A\ngood test of a statement for prejudice, however, is to compare it with\nthe scientific view Prejudice is most dangerous for society Its more extreme\n\n\nmanifestations are aggressive war, intolerance (especially of strange\npeople and customs), violence, race hatred, etc In the consuming\nhatred that a prejudiced man has towards the object of his prejudice,\nhe is likely to destroy himself and destroy many more people besides In former days, the handy weapon was a sword or a pistol; not too\nmuch damage could be done when one man ran amuck But nowadays\na single use of a single weapon has slain 70,000 people (the atom\nbomb dropped at Hiroshima), and so a great many people live anxious\nand afraid What is prejudice How does it arise How can it be cured, and\nthus removed from obstructing reasonable control over robot\nmachines and the rest of today’s amazing scientific developments Prejudice is a disease of men’s minds It is infectious The cause\nand development of the disease are about as follows: Deprive someone\nof something he deeply needs, such as affection, food, or opportunity In this way hurt him, make him resentful, hostile; but prevent him\nfrom expressing his resentments in a reasonable way, giving him\ninstead false outlets, such as other people to hurt, myths to believe,\nhostile behavior patterns to imitate He will then break out with\nprejudices as if they were measles The process of curing the disease\nof prejudice is about as follows: Make friends with the patient; win his\ntrust Encourage him to pour out his half-forgotten hates Help him to\ntalk them over freely, by means of questions but not criticisms, until\nfinally the patient achieves insight, sees through his former\nprejudices, and drops them In these days prejudice is a cardinal problem of society It is\nperhaps conservative to say that a chief present requirement for the\nsurvival of human society—with the atom bomb, bacterial warfare,\nguided missiles, etc , near at hand—is cure of prejudice and its\nconsequences, irrational and unrestrained hate Narrow Point of View\nA narrow point of view regarding what is desirable or good is the\nthird obstacle to rational control over robot machines What do we\nmean by this Our point of view as a two-year-old is based on pure self-interest If we see a toy, we grab it There is no prejudice about this; it is\n\n\nentirely natural—for two-year-olds As we grow older, our point of\nview concerning what is good or desirable rapidly broadens: we think\nof others and their advantage besides our own For example, we may\nbecome interested in a conservation program to conserve birds, or\nsoil, or forests, and our point of view expands, embraces these\nobjectives, which become part of our personality and loyalties Unfortunately, it seems to be true that the expanding point of\nview, the expanding loyalties, of most people as they grow up are\narrested somewhere along the line of: self, family, neighborhood,\ncommunity, section of country, nation An honorable exception is the\nscientists’ old and fine tradition of world-wide unity and loyalty in the\nsearch for objective truth Now the problem of rational control over robot machines and\nother parts of the new technology is no respecter of national\nboundaries To be solved it requires a world-wide point of view, a\nloyalty to human society and its best interests, a social point of view Almost all that you and I have and do and think is the result of a\nlong history of human society on this earth All men on the earth\ntoday are descendants of other men who lived 1000, 2000, 3000 years ago, whether they were Romans or Chinese or Babylonians or\nMayas or members of any other race To ride in a subway or an\nairplane, to talk on the telephone, to speak a language, to calculate, to\nsurvive smallpox or the black death, etc —all these privileges are our\ninheritance from countless thousands of other human beings, of many\ncountries, and nearly all of whom are now dead During our lives we\npass on to our own children an inheritance in which our own\ncontribution is remarkably small Since each person is the child of two\nothers, the number of our forefathers is huge, and we are all\nundoubtedly blood cousins Because of this relationship, and because\nwe owe to the rest of society nearly all that we are, we have a social\nresponsibility—we need to hold a social point of view Each of us\nneeds to accept and welcome a world-wide social responsibility, as a\nmember of human society, as a beneficiary and trustee of our human\ninheritance Otherwise we are drones, part of the hive without\nearning our keep The social point of view is equitable, it is inspiring,\nand it is probably required now in order for human beings to survive We need to let go of a narrow point of view CONCLUSION\n\n\nWe have now outlined the problem of social control over robot\nmachines, supposing that human beings were reasonable We have\nalso discussed the practical obstacles that obstruct reasonable control It is not easy to think of any yet organized group of people\nanywhere that would have both the strength and the vision needed to\nsolve this problem through its own efforts For example, a part of the\nUnited Nations might have some of the vision needed, but it does not\nhave the power Consequently, it is necessary and desirable for\nindividuals and groups everywhere to take upon themselves an added\nload of social responsibility—just as they tend to do in time of war People often “want to do their share ” Through encouragement and\neducation, the basic attitude of a number of people can contain more\nof “This is our business; we have a responsibility for helping to solve\nthis problem ” We also need public responsibility; we need a public\nbody responsible for study, education, advice, and some measure of\ncontrol It might be something like an Atomic Energy Commission,\nBacterial Defense Commission, Mental Health Commission, and Robot\nMachine Commission, all rolled into one When, at last, there is an effective guarantee of the two elements\nphysical safety and adequate employment, then at last we shall all be\nfree from the threat of the robot machine We can then welcome the\nrobot machine as our deliverer from the long hard chores of many\ncenturies Supplement 1\nWORDS AND IDEAS\nThe purpose of this book is to explain machines that think, without\nusing technical words any more than necessary This supplement is a\ndigression Its purposes are to consider how to explain in this way and\nto discuss the attempt made in this book to achieve simple\nexplanation WORDS AS INSTRUMENTS\nFOR EXPLAINING\nWords are the chief instruments we use for explaining Of course,\nmany other devices—pictures, numbers, charts, models, etc —are also\nused; but words are the prime tools We do most of our explaining\nwith them Words, however, are not very good instruments Like a stone\narrow-head, a word is a clumsy weapon In the first place, words\nmean different things on different occasions The word “line,” for\nexample, has more than fifty meanings listed in a big dictionary How\ndo we handle the puzzle of many meanings As we grow older we\ngather experience and we develop a truly marvelous capacity to listen\nto a sentence and then fit the words together into a pattern that\nmakes sense Sometimes we notice the time lag while our brain hunts\nfor the meaning of a word we have heard but not grasped Then\nsuddenly we guess the needed meaning, whereupon we grasp the\nmeaning of the sentence as a whole in much the same way as the\nparts of a puzzle click into place when solved Another trouble with words is that often there is no good way to\ntell someone what a word means Of course, if the word denotes a\nphysical object, we can show several examples of the object and utter\nthe word each time In fact, several good illustrations of a word\ndenoting a physical thing often tell most of its meaning But the rest\nof its meaning we often do not learn for years, if ever For instance,\n\n\ntwo people would more likely disagree than agree about what should\nbe called a “rock” and what should be called a “stone,” if we showed\nthem two dozen examples In the case of words not denoting physical objects, like “and,”\n“heat,” “responsibility,” we are worse off We cannot show something\nand say, “That is a ··· ” The usual dictionary is of some help, but it has\na tendency to tell us what some word A means by using another word\nB, and when we look up the other word B we find the word A given as\nits meaning Mainly, however, to determine the meanings of words,\nwe gather experience: we soak up words in our brains and slowly\nestablish their meanings We seem to use an unconscious reasoning\nprocess: we notice how words are used together in patterns, and we\nconclude what they must mean Clearly, then, words being clumsy\ninstruments, the more experience we have had with a word, the more\nlikely we are to be able to use it, work with it, and understand it Therefore explanation should be based chiefly on words with which\nwe have had the most experience What words are these They will be\nthe well-known words A great many of them will be short SET OF WORDS FOR EXPLAINING\nNow what is the set of all the words needed to explain simply a\ntechnical subject like machines that think For we shall need more\nwords than just the well-known and short ones This question\ndoubtless has many answers; but the answer used in this book was\nbased on the following reasoning In a book devoted to explanation,\nthere will be a group of words (1) that are supposed to be known\nalready or to be learned while reading, and (2) that are used as\nbuilding blocks in later explanation and definitions Suppose that we\ncall these words the words for explaining There are at least three\ngroups of such words:\nGroup 1 Words not specially defined that are so\nfamiliar that every reader will know all of\nthem; for example, “is,” “much,” “tell",
    "Words not specially defined that are so\nfamiliar that every reader will know all of\nthem; for example, “is,” “much,” “tell ”\nGroup 2 Words not specially defined that are\nfamiliar, but perhaps some reader may not\nknow some of them; for example, “alternative,”\n“continuous,” “indicator Words not specially defined that are\nfamiliar, but perhaps some reader may not\nknow some of them; for example, “alternative,”\n“continuous,” “indicator ”\n\n\nGroup 3 Words that are not familiar, that many\nreaders are not expected to know, and that are\nspecially defined and explained in the body of\nthe book; for example, “abacus,” “trajectory,”\n“torque ”\nIn writing this book, it was not hard to keep track of the words in\nthe third group These words are now listed in the index, together\nwith the page where they are defined or explained (The index, of\ncourse, also lists phrases that are specially defined )\nBut what division should be made between the other two groups A practical, easy, and conservative way to separate most words\nbetween the first and second groups seemed to be on the basis of\nnumber of syllables All words of one syllable—if not specially defined\n—were put in Group 1 Also, if a word became two syllables only\nbecause of the addition of one of the endings “-es,” “-ed,” “-ing,” it\nwas kept in Group 1, for these endings probably do not make a word\nany harder to understand In addition, there were put into Group 1:\n1 Numbers; for example, “186,000”; “³/₁₀” 2 Places: “Philadelphia”; “Massachusetts” 3 Nations, organizations, people, etc : “Swedish”; “Bell” 4 Years and dates: “February”; “1946” 5 Names of current books or articles and their authors Of course, not all these words would be familiar to every reader (for\nexample, “Maya”), but in the way they occur, they are usually not\npuzzling, for we can tell from the context just about what they must\nmean All remaining words for explaining—chiefly, words of two or more\nsyllables and not specially defined—were put in Group 2 and were\nlisted during the writing of this book Many Group 2 words, of course,\nwould be entirely familiar to every reader; but the list had several\nvirtues No hard words would suddenly be sprung like a trap The\nsame word would be used for the same idea Every word of two or\nmore syllables was continually checked: is it needed can it be\nreplaced by a shorter word It is perhaps remarkable that there were\nfewer than 1800 different words allowed to stay in this list This fact\nshould be a comfort to a reader, as it was to the author Now there are more words in this book than words for explaining So we shall do well to recognize:\nGroup 4 Words that do not need to be known or\nlearned and that are not used in later\nexplanation and definitions These words occur in the book in such a way that understanding\nthem, though helpful, is not essential One subdivision of Group 4 are\nnames that appear just once in the book, as a kind of side remark, for\nexample, “a chemical, called acetylcholine ” Such a name will also\nappear in the index, but it is not a word for explaining Another\nsubdivision of Group 4 are words occurring only in quotations For\nexample, in the quotation from Frankenstein on page 198, a dozen\nwords appear that occur nowhere else in the book, including\n“daemon,” “dissoluble,” “maw,” “satiate ” Clearly we would destroy\nthe entire flavor of the quotation if we changed any of these words in\nany way But only the general drift of the quotation is needed for\nunderstanding the book, and so these words are Group 4 words In this way the effort to achieve simple explanation in this book\nproceeded But even supposing that we could reach the best set of\nwords for explaining, there is more to be done How do we go from\nsimple explanation to understanding UNDERSTANDING IDEAS\nUnderstanding an idea is basically a standard process First, we find\nthe name of the idea, a word or phrase that identifies it Then, we\ncollect true statements about the idea Finally, we practice using\nthem The more true statements we have gathered, and the more\npractice we have had in applying them, the more we understand the\nidea For example, do you understand zero Here are some true\nstatements about zero 1 Zero is a number 2 It is the number that counts none or nothing 3 It is marked 0 in our usual numeral writing 4 The ancient Romans, however, had no numeral\nfor it Apparently, they did not think of zero as\n\n\na number 5 0 is what you get when you take away 17 from\n17, or when you subtract any number from\nitself 6 If you add 0 to 23, you get 23; and if you add 0\nto \nany \nnumber, \nyou \nget \nthat \nnumber\nunchanged 7 If you subtract 0 from 48, you get 48; and if\nyou subtract 0 from any number, you get that\nnumber unchanged 8 If you multiply 0 by 71, you get 0; and if you\nmultiply together 0 and any number, you get\n0 9 Usually you are not allowed to divide by 0: that\nis against the rules of arithmetic 10 But if you do, and if you divide 12 by 0, for\nexample—and there are times when this is not\nwrong—the result is called infinity and is\nmarked ∞, a sign that is like an 8 on its side This is not all the story of zero; it is one of the most important of\nnumbers But, if you know these statements about zero, and have had\nsome practice in applying them, you have a good understanding of\nzero Incidentally, a mechanical brain knows all these statements\nabout zero and a few more; they must be built into it For us to understand any idea, then, we pursue three aims:\n1 We find out what it is called 2 We collect true statements about it 3 We apply those statements—we use them in situations We can do this about any idea Therefore, we can understand any\nidea, and the degree of our understanding increases as the number of\ntrue statements mastered increases Perhaps this seems to be a rash claim Of course, it may take a\ngood deal of time to collect true statements about many ideas In fact,\na scientist may spend thirty years of his life trying to find out from\n\n\nexperiment the truth or falsehood of one statement, though, when he\nhas succeeded, the fact can be swiftly told to others Also, we all vary\nin the speed, perseverance, skill, etc , with which we can collect true\nstatements and apply them Besides, some of us have not been taught\nwell and have little faith in our ability to carry out this process: this is\nthe greatest obstacle of all But, there is in reality no idea in the field\nof existing science and knowledge which you or I cannot understand The road to understanding lies clear before us Supplement 2\nMATHEMATICS\nIn the course of our discussion of machines that think, we have\nhad to refer without much explanation to a number of mathematical\nideas The purpose of this supplement is to explain a few of these\nideas a little more carefully than seemed easy to do in the text and, at\nthe end of the supplement, to put down briefly some additional notes\nfor reference DEVICES FOR MULTIPLICATION\nSuppose that we have to multiply 372 by 465 With the ordinary\nschool method, we write 465 under the 372 and proceed about as\nfollows: 5 times 2 is 10, put down the 0 and carry the 1; 5 times 7 is\n35, 35 and 1 is 36, put down the 6 and carry the 3; 5 times 3 is 15, 15\nand 3 is 18, put down the 8 and carry the 1; The method is based\nmainly on a well-learned subroutine of continually changing steps:\n1 Select a multiplicand digit 2 Select a multiplier digit 3 Refer to the multiplication table with these digits 4 Obtain the value of their product, called a partial product\n5 Add the preceding carry 6 Set down the right-hand digit 7 Carry the left-hand digit We can, however, simplify this subroutine for a machine by delaying\nthe carrying We collect in one place all the right-hand digits of\npartial products, collect in another place all the left-hand digits, and\ndelay all addition until the end For example, let us multiply 372 by 465 with this method:\n\n\n Right-Hand \nDigits\n Left-Hand \nDigits\n  Usual Method\n  for Comparison\n372\n372\n372\n× 465\n× 465\n× 465\n550\n131\n1860\n822 \n141 \n2232 \n288  \n120  \n1488  \n37570\n13541\n172980\nFinal Addition\n37570\n+ 13541   \n172980\n37570 is called the right-hand component of the product It is\nconvenient to fill in with 0 the space at the end of 13541 and to call\n135410 the left-hand component of the product This process is called multiplying by right- and left-hand components It has the great advantage that no carrying is necessary to complete\nany line of the original multiplications Some computing machines use\nthis process Built into the hardware of the machine is a multiplication\ntable up to 9 × 9 The machine, therefore, can find automatically the\nright-hand digit and the left-hand digit of any partial product In a\ncomputing machine that uses this process, all the left-hand digits are\nautomatically added in one register, and all the right-hand digits are\nadded in another register The only carrying that is needed is the\ncarrying as the right-hand digits are accumulated and as the left-hand\ndigits are accumulated At the end of the multiplication, one of the\nregisters is automatically added into the other, giving the product Another device used in computing machines for multiplying is to\nchange the multiplier into a set of digits 0 to 5 that are either positive\nor negative For example, suppose that we want to multiply 897 by\n182 We note that 182 equals 200 minus 20 plus 2, and so we can\nwrite it as\n\n\n222 The minus over the 2 marks it as a negative digit 2 Then to\nmultiply we have:\n897\n222\n 1794\n -1794\n 1794\n 163254\nThe middle 1794 is subtracted This process is usually called short-cut\nmultiplication Everybody discovers this trick when he decides that\nmultiplying by 99 is too much work, that it is easier to multiply by\n100 and subtract once BINARY OR TWO NUMBERS\nWe are well accustomed to decimal notation in which we use 10\ndecimal digits 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 and write them in\ncombinations to designate decimal numbers In binary notation we use\ntwo binary digits 0, 1 and write them in combinations to designate\nbinary numbers For example, the first 17 numbers, from 0 to 16 in the\ndecimal notation, correspond with the following numbers in binary\nnotation:\nDecimal    Binary   Decimal    Binary\n0\n0\n \n \n1\n1\n 9\n1001\n2\n10\n10\n1010\n3\n11\n11\n1011\n4\n100\n12\n1100\n5\n101\n13\n1101\n6\n110\n14\n1110\n\n\n7\n111\n15\n1111\n8\n1000\n16\n10000 \nIn decimal notation, 101 means one times a hundred, no tens, and\none In binary notation, 101 means one times four, no twos, and one The successive digits in a decimal number from right to left count 1,\n10, 100, 1000, 10000, —successive powers of 10 (for this term, see\nthe end of this supplement) The successive digits in a binary number\nfrom right to left count 1, 2, 4, 8, 16, —powers of 2 The decimal notation is convenient when equipment for\ncomputing has ten positions, like the fingers of a man, or the positions\nof a counter wheel The binary notation is convenient when\nequipment for computing has just two positions, like “yes” or “no,” or\ncurrent flowing or no current flowing Addition, subtraction, multiplication, and division can all be\ncarried out unusually simply in binary notation The addition table is\nsimple and consists only of four entries +  0  1\n0\n0  1\n1\n1 10\nThe multiplication table is also simple and contains only four entries ×  0 1\n0\n0 0\n1\n0 1\nSuppose that we add in binary notation 101 and 1001:\nBinary\nAddition\nCheck\n101\n5\n+ 1001\n 9\n1110\n14\n\n\nWe proceed: 1 and 1 is 10; write down 0 and carry 1; 0 and 0 is 0,\nand 1 to carry is 1; and 1 and 0 is 1; and then we just copy the last 1 To check this we can convert to decimal and see that 101 is 5, 1001 is\n9, and 1110 is 14, and we can verify that 5 and 9 is 14 One of the easiest ways to subtract in binary notation is to add a\nones complement (that is, the analogue of the nines complement) and\nuse end-around-carry (for these two terms, see the end of this\nsupplement) A ones complement can be written down at sight by just\nputting 1 for 0 and 0 for 1 For example, suppose that we subtract 101\nfrom 1110:\nDirect\nSubtraction\nCheck   Subtraction by\nAdding Ones\nComplement\n1110\n14\n   1110\n- 101\n- 5\n + 1010\n1001\n9\n(1)1000\n \n \n ↓\n ⎯→ 1\n  1001\nMultiplication in the binary notation is simple It amounts to (1)\nadding if the multiplier digit is 1 and not adding if the multiplier digit\nis 0, and (2) moving over or shifting For example, let us multiply 111\nby 101:\nBinary\nMultiplication\nCheck\n111\n7\n× 101\n × 5\n111\n \n111  \n \n100011\n 35\n\n\nThe digit 1 in the 6th (or nth) binary place from the right in 100011\nstands for 1 times 2 to the 5th (or n-1 th) power, 2 × 2 × 2 × 2 × 2\n= 32 The result 100011 is translated into 32 plus 2 plus 1, which\nequals 35 and verifies Division in the binary notation is also simple It amounts to (1)\nsubtracting (yielding a quotient digit 1) or not subtracting (yielding a\nquotient digit 0), and (2) shifting We never need to try multiples of\nthe divisor to find the largest that can be subtracted yet leave a\npositive remainder For example, let us divide 1010 (10 in decimal)\ninto 10001110 (142 in decimal):\n 1110 (14 in decimal)\n————\n1010)10001110\n1010\n 1111\n 1010\n1011\n1010\n10 (remainder, 2 in decimal)\nIn decimal notation, digits to the right of the decimal point count\npowers of ⅒ In binary notation, digits to the right of the binary point\ncount powers of ½: ½, ¼, ⅛, ¹/₁₆ For example, 0 1011 equals ½ +\n⅛ + ¹/₁₆, or ¹¹/₁₆ If we were accustomed to using binary numbers, all our arithmetic\nwould be very simple Furthermore, binary numbers are in many ways\nmuch better for calculating machinery than any other numbers The\nmain problem is converting numbers from decimal notation to binary One method depends on storing the powers of 2 in decimal notation The rule is: subtract successively smaller powers of 2; start with the\nlargest that can be subtracted, and count 1 for each power that goes\nand 0 for each power that does not For example, 86 in decimal\nbecomes 1010110 in binary:\n86\n \n \n64\n64 goes\n1\n\n\n22\n32 does not go\n0\n16\n16 goes\n1\n6\n8 does not go\n0\n 4\n4 goes\n1\n2\n2 goes\n1\n 2\n1 does not go\n0\n0\n \n \nIt is a little troublesome to remember long series of 1’s and 0’s; in fact,\nto write any number in binary notation takes about 3⅓ times as much\nspace as decimal notation For this reason we can separate binary\nnumbers into triples beginning at the right and label each triple as\nfollows:\nTriple     Label\n000\n0\n001\n1\n010\n2\n011\n3\n100\n4\n101\n5\n110\n6\n111\n7\nFor example, 1010110 would become 1 010 110 or 126 This notation\nis often called octal notation, because it is notation in the scale of\neight BIQUINARY OR TWO-FIVE NUMBERS\nAnother kind of notation for numbers is biquinary notation, so\ncalled because it uses both 2’s and 5’s Essentially this notation is very\nlike Roman numerals, ancient style By ancient style we mean, for\n\n\nexample, VIIII instead of IX In the following table we show the first\ntwo dozen numbers in decimal, biquinary, and ancient Roman\nnotation:\nDecimal   Biquinary   Roman\n 0\n  0\n \n 1\n  1\nI\n 2\n  2\nII\n 3\n  3\nIII\n 4\n  4\nIIII\n 5\n 10\nV\n 6\n 11\nVI\n 7\n 12\nVII\n 8\n 13\nVIII\n 9\n 14\nVIIII\n10\n100\nX\n11\n101\nXI\n12\n102\nXII\n13\n103\nXIII\n14\n104\nXIIII\n15\n110\nXV\n16\n111\nXVI\n17\n112\nXVII\n18\n113\nXVIII\n19\n114\nXVIIII\n20\n200\nXX\n21\n201\nXXI\n22\n202\nXXII\n\n\n23\n203\nXXIII\nThe biquinary columns alternate in going from 0 to 4 and from 0 to 1 The digits from 0 to 4 are not changed The digits from 5 to 9 are\nchanged into 10 to 14 We see that the biquinary digits are 0 to 4 in\nodd columns and 0, 1 in even columns, counting from the right This is the notation actually expressed by the abacus The beads of\nthe abacus show by their positions groups of 2 and 5 (see Fig 1) Fig 1 Abacus and notations SOME OPERATIONS OF ALGEBRA\nOne of the operations of algebra that is important for a mechanical\nbrain is approximation, the problem of getting close to the right value\nof a number Take, for example, finding square root (see the end of\nthis supplement) The ordinary process taught in school is rather\ntroublesome We can set down another process, however, using a desk\ncalculator to do division, which gives us square root with great speed Suppose that we want to find the square root of a number N, and\nsuppose that we have x₀ as a guessed square root correct to one\nfigure For example, N might be 67 2 and x₀ might be 8, chosen\nbecause 8 × 8 is 64, and 9 × 9 is 81, and it seems as if 8 should be\nnear the square root of 67 2 Here is the process:\n1 Divide x₀ into N, and obtain N / x₀ 2 Multiply x₀ + N / x₀ by 0 5 and call the result x₁ Now repeat:\n1 Divide x₁ into N and obtain N / x₁ 2 Multiply x₁ + N / x₁ by 0 5 and call the result x₂ Every time this process is repeated, the new x comes a great deal\ncloser to the correct square root In fact it can be shown that, if x₀ is\ncorrect to one figure, then:\n\n\n Approximation   Is Correct To \n··· Figures\nx₁\n 2\nx₂\n 4\nx₃\n 8\nx₄\n16\nLet us see how this actually works out with 67 2 and a 10-column\ndesk calculator Round 1: 8 divided into 67 2 gives 8 4 One half of\n8 plus 8 4 is 8 2 This is x₁ Round 2: 8 2 divided into 67 2 gives 8 195122 One half of 8 2 plus 8 195122 is 8 197561 This is x₂ Round 3: 8 197561 divided into 67 2 gives\n8 197560225 One half of 8 197561 and\n8 197560225 is 8 1975606125 This is x₃ Checking x₃, we find that 8 1975606125 divided\ninto 67 2 gives 8 1975606126 approximately In this case, then, x₃ is correct to more than 10 figures In other\nwords, with a reasonable guess and two or three divisions we can\nobtain all the accuracy we can ordinarily use This process is called\nrapid approximation, or rapidly convergent approximation, since it\nconverges (points or comes together) very quickly to the number we\nare seeking Another important operation of algebra is interpolation, the\nproblem of putting values smoothly in between other values For\nexample, suppose that we have the table:\n  x     y  \n5\n26\n6\n37\n7\n50\n\n\n8\n65\n9\n82\nSuppose that we want to find the value that y (or yₓ) ought to have\nwhen x has the value of 7 2 This is the problem of interpolating y so as\nto find y at the value of 7 2, y₇ˌ₂ One way of doing this is to discover the formula that expresses y\nand then to put x into that formula This is not always easy Another\nway is to take the difference between y₇ and y₈, 15, and share the\ndifference appropriately over the distance 7 to 7 2 and 7 2 to 8 We\ncan, for example, take ²/₁₀ of 15 = 3, add that to y₇ = 50, and obtain\nan estimated y₇ˌ₂ = 53 This is called linear interpolation, since the\ndifference 0 2 in the value of x is used only to the first power It is a\ngood practical way to carry out most interpolation quickly and\napproximately Actually here y = x² + 1, and so the true value of y₇ˌ₂ is (7 2 ×\n7 2) + 1, or 52 84, which is rather close to 53 Types of interpolation\nprocedures more accurate than linear interpolation will come much\nnearer still to the true value",
    "Types of interpolation\nprocedures more accurate than linear interpolation will come much\nnearer still to the true value ALGEBRA OF LOGIC\nWe turn now to the algebra of logic The first half of Chapter 9,\n“Reasoning” (through the section “Logical-Truth Calculation by\nAlgebra”), introduces this subject There the terms truth values, truth\ntables, logical connectives, and algebra of logic are explained The part of\nChapter 3, “A Machine That Will Think,” that discusses the operations\ngreater-than and selection, also explains some of the algebra of logic It\nintroduces, for example, the formula\np = T(a > b) = 1, 0\nThis is a way of saying briefly that the truth value of the statement\n“a is greater than b” equals p; p is 1 if the statement is true and 0 if\nthe statement is false The truth value 1 corresponds with “yes ” The\ntruth value 0 corresponds with “no ”\nWith mechanical brains we are especially interested in handling\nmathematics and logic without any sharp dividing line between them For example, suppose that we have a register in which a ten-digit\n\n\nnumber like 1,765,438,890 may be stored We should be able to use\nthat register to store a number consisting of only 1’s and 0’s, like\n1,100,100,010 Such a number may designate the answers to 10\nsuccessive questions: yes, yes, no, no, yes, no, no, no, yes, no Or it\nmay tell 10 successive binary digits The register then is three times as\nuseful: it can store either decimal numbers or truth values or binary\ndigits We need, of course, a way to obtain from the register any\ndesired digit For this purpose we may have two instructions to the\nmachine: (1) read the left-hand end digit; (2) shift the number around\nin a circle The second instruction is the same as multiplying by 10\nand then putting the left-most digit at the right-hand end For\nexample, suppose that we want the 3rd digit from the left in\n1,100,100,010 The result of the first circular shift is 1,001,000,101;\nthe result of the second circular shift is 0,010,001,011; and reading\nthe left-most digit gives 0 A process like this has been called\nextraction and is being built into the newest mechanical brains",
    "A process like this has been called\nextraction and is being built into the newest mechanical brains Using truth values, we can put down very neatly some truths of\nordinary algebra For example:\n(the absolute value of a) =\na × (the truth of a greater than or equal to 0)\n- a × (the truth of a less than 0)\n|a| = a · T(a ≥ 0) - a · T(a < 0)\nFor another example:\nEither a is greater than b,\nor else a equals b,\nor else a is less than b\nT(a > b) + T(a = b) + T(a < b) = 1\nMany common logical operations, like selecting and comparing, and\nthe behavior of many simple mechanisms, like a light or a lock, can be\nexpressed by truth values Chapter 4, on punch-card mechanisms,\ncontains a number of examples Chapter 4, on punch-card mechanisms,\ncontains a number of examples pronoun, variable\nIn ordinary language, a pronoun, like “he,” “she,” “it,” “the\nformer,” “the latter,” is a word that usually stands for a noun\npreviously referred to A pronoun usually stands for the last preceding\nnoun that the grammar allows In mathematics, a variable, like “a,”\n“b,” “x,” “m₁,” “m₂” closely resembles a pronoun in ordinary language A variable is a symbol that usually stands for a number previously\nreferred to, and usually it stands for the same number throughout a\nparticular discussion multiplicand, dividend, augend, etc In the\nEquation\nThe Name\nof a is:\nThe Name\nof b is:\nThe Name\nof c is:\na + b = c\naugend\naddend\nsum\na - b = c\nminuend\nsubtrahend\nremainder\na × b = c\nmultiplicand\nmultiplier\nproduct\na ÷ b = c\ndividend\ndivisor\nquotient\nAugend and addend are names of registers in the Harvard Mark II\ncalculator (see Chapter 10) subtraction by adding, nines complement\nTwo digits that add to 9 (0 and 9, 1 and 8, 2 and 7, 3 and 6, 4 and\n5) are called nines complements of each other The nines complement of\na number a is the number b in which each digit of b is the nines\ncomplement of the corresponding digit of a; for example, the nines\ncomplement of 173 is 826 Ordinary subtraction is the same as\naddition as of the nines complement, with a simple correction; for\nexample, 562 less 173 (equal to 389) is the same as 562 plus 826\n(equal to 1388) less 1000 plus 1 end-around-carry\nThe correction “less 1000 plus 1” of the foregoing example may be\n\n\nthought of as carrying the 1 (in the result 1388) around from the left-\nhand end to the right-hand end, where it is there added So the 1 is\ncalled end-around-carry tens complement\nTwo digits that add to 10 are called tens complements of each other The tens complement of a number a, however, is equal to the nines\ncomplement of the number plus 1 For example, the tens complement\nof 173 is 827 When subtracting by adding a tens complement, the\nleft-most digit 1 in the result is dropped For example, 562 less 173\n(equal to 389) is the same as 562 plus 827 (equal to 1389) less 1000 power, square, cube, reciprocal, etc A power of any number a is a multiplied by itself some number of\ntimes a × a × a × a where a appears b times is written aᵇ and is\nread a to the bth power a², a to the 2nd power, is a × a and is called\na squared or the square of a a³, a to the 3rd power, a × a × a, is\ncalled a cubed, or the cube of a a⁰, a to the zero power, is equal to 1\nfor every a a¹, a to the power 1, is a itself The first power is often\ncalled linear a to some negative power is the same as 1 divided by\nthat power; that is, a⁻ᵇ = 1/aᵇ a⁻¹, a to the power minus 1, is 1/a,\nand is called the reciprocal of a a¹ᐟ², a to the one-half power, is a\nnumber c such that c × c = a, and is called the square root of a and\noften denoted by √a table, tabular value, argument, etc An example of a table is:\n \n0 025\n0 03\n1 1 02500 1 03000\n2 1 05063 1 06090\n3 1 07689 1 09273\nThe numbers in the body of the table, called tabular values, depend on\nor are determined by the numbers along the edge of the table, called\n\n\narguments In this example, if 1, 2, 3 are choices of a number n, and if\n0 025, 0 03 are choices of a number i, then each tabular value y is\nequal to 1 plus i raised to the nth power n and i are also called\nindependent variables, and y is called the dependent variable The table\nexpresses a function or formula or rule The rule could be stated as: add\ni to 1; raise the result to the nth power constant\nA number is said to be a constant if it has the same value under all\nconditions For example, in the formula:\n(area of a circle) = π × (radius)²,\nπ is a constant, equal to 3 14159 ,\napplying equally well to all circles infinity\nMathematics recognizes several kinds of infinity One of them\noccurs when numbers become very large For example, the quotient of\n12 divided by a number x, as x becomes closer and closer to 0,\nbecomes indefinitely large, and the limit is called infinity and is\ndenoted ∞ equation, simultaneous, linear\nAn example of two linear simultaneous equations is:\n7x + 8t = 22\n3x + 5t = 11\nx and t are called unknowns—that is, unknown variables—because the\nobjective of solving the equations is to find them These equations are\ncalled simultaneous because they are to be solved together, at the same\ntime, for values of x and t which will fit in both equations The\nequations are called linear because the only powers of the unknowns\nthat appear are the first power Values that solve equations are said to\nsatisfy them It is easy to solve these two equations and find that x =\n\n\n2 and t = 1 is their solution But it is a long process to solve 10 linear\nsimultaneous equations in 10 unknowns, and it is almost impossible\n(without using a mechanical brain) to solve 100 linear simultaneous\nequations in 100 unknowns derivative, integral,\ndifferential equation, etc See the sections in Chapter 5 entitled “Differential Equations,”\n“Physical Problems,” and “Solving Physical Problems ” There these\nideas and, to some extent, also the following ideas were explained:\nformula, equation, function, differential function, instantaneous rate\nof change, interval, inverse, integrating See also a textbook on\ncalculus If y is a function of x, then a mathematical symbol for the\nderivative of y with respect to x is Dₓ y, and a symbol for the integral\nof y with respect to x, is ∫y dx An integral with given initial\nconditions (see p 83) is a definite integral exponential\nA famous mathematical function is the exponential It equals the\nconstant e raised to the x power, eˣ, where e equals 2 71828 The\nexponential lies between the powers of 2 and the powers of 3 It can\nbe computed from:\neˣ = 1 + \nx²\n +  x³  + 1 · 2\n1 · 2 · 3\nIt is a solution of the differential equation Dₓy = y See also a\ntextbook on calculus The exponential to the base 10 is 10ˣ logarithm\nAnother important mathematical function is the logarithm It is\nwritten log x or logₑ x and can be computed from the two equations:\nlog uv = log u + log v\nlog(1 + x) = x -  x²  +  x³  - x² < 1\n\n\n  2  \n  3  \nIt is a solution of the differential equation Dₓy = 1/y If y is the\nlogarithm of x, then x is the antilogarithm of y The logarithm to the\nbase 10 of x, log₁₀ x, equals the logarithm to the base e of x, logₑ x,\ndivided by logₑ 10",
    "The logarithm to the\nbase 10 of x, log₁₀ x, equals the logarithm to the base e of x, logₑ x,\ndivided by logₑ 10 See also textbooks on algebra and calculus sine, cosine, tangent, antitangent\nThese also are important mathematical functions The sine and\ncosine are solutions of the differential equation Dₓ(Dₓy) =-y and are\nwritten as sin x and cos x They can be computed from\nsin x = x - \nx³\n +  x⁵  - 1 · 2· 3\n1 · 2 · 3· 4· 5\n \ncos x = 1 - \nx²\n +  x₄  - 1 · 2\n1 · 2 · 3· 4\nThe tangent of x is simply sine of x divided by cosine of x If y is the\ntangent of x, then x is the antitangent of y See also references on\ntrigonometry and on calculus Trigonometric tables include sine,\ncosine, tangent, and related functions Bessel functions\nThese are mathematical functions that were named after Friedrich\nW Bessel, a Prussian astronomer who lived from 1784 to 1846 Bessel\nfunctions are found as some of the solutions of the differential\nequation\nx² Dₓ(Dₓy) + x Dₓy + (x² - n²)y = O\nThis equation arises in a number of physical problems in the fields of\nelectricity, sound, heat flow, air flow, etc matrix\n\n\nA matrix is a table (or array) of numbers in rows and columns, for\nwhich addition, multiplication, etc , with similar tables is specially\ndefined For example, the matrix\n 1\n2   \n \n \n \n 3\n4   \nplus the matrix\n 5\n 20   \n \n \n \n 60\n100   \nequals the matrix\n 6\n 22   \n \n \n \n 63\n104   \n(Can you guess the rule defining addition )\nCalculations using matrices are useful in physics, engineering,\npsychology, statistics, etc To add a square matrix of 100 terms in an\narray of 10 columns and 10 rows to another such matrix, 100\nordinary additions of numbers are needed To multiply one such\nmatrix by another, 1000 ordinary multiplications and 900 ordinary\nadditions are needed See references on matrix algebra and matrix\ncalculus differences, smoothness, checking\nOn p 221, a sequence of values of y is shown: 26, 37, 50, 65, 82 Suppose, however, the second value of y was reported as 47 instead of\n37 Then the differences of y as we pass down the sequence would not\n\n\nbe 11, 13, 15, 17 (which is certainly regular or smooth) but 21, 3, 15,\n17 (which is certainly not smooth) The second set of differences\nwould strongly suggest a mistake in the reporting of y The smoothness\nof differences is often a useful check on a sequence of reported values",
    "The smoothness\nof differences is often a useful check on a sequence of reported values Supplement 3\nREFERENCES\nA book like the present one can cover only a part of the subject of\nmachines that think To obtain more information about these\nmachines and other topics to which they are related there are many\nreferences that may be consulted There are still few books directly on\nthe subject of machines that think, but there are many articles and\npapers, most of them rather specialized The purpose of this supplement is to give a number of these\nreferences and to provide a brief, general introduction to some of\nthem The references are subdivided into groups, each dealing with a\nbranch of the subject The references in each group are in alphabetical\norder by name of author (with “anonymous” last), and under each\nauthor they are in chronological order by publication date Some\npublications, especially a forum or symposium, are listed more than\nonce, according as the topic discussed falls in different groups In this\nsupplement, the sign three dots ( ) next to the page numbers for an\narticle indicates that the article is continued on later, nonconsecutive\npages It seemed undesirable to try to make the group of references\ndealing with a subject absolutely complete, so long as enough were\ngiven to provide a good introduction to the subject It proved\nimpractical to try to make the citation of every single reference\ntechnically complete, so long as enough citation was given so that the\nreference could certainly be found Furthermore, in a list of more than\n250 references, errors are almost certain to occur If any reader should\nsend me additions or corrections, I shall be more than grateful THE HUMAN BRAIN\nNo one yet knows specifically how particular ideas are thought\nabout in the human brain The references listed in this section,\nhowever, contain some information about such topics as:\n\n\nThe structural differences, development, and\nevolution of the brains of animals, apes,\nprimitive man, and modern man The effect on the brain of blood composition, body\ntemperature, supply of oxygen, and other\nbiochemical factors The structure and physiology of the brain, the\nnervous system, and nerve impulses The theory of learning, intelligence, and memory Barcroft, Joseph, The Brain and Its\nEnvironment, \nNew \nHaven: \nYale\nUniversity Press, 1948, 117 pp Beach, Frank A",
    "Beach, Frank A , Payday for Primates,\nNatural History, vol 56, no 10, Dec 1947, pp 448-451 Beach, Frank A , Can Animals Reason Natural History, vol 57, no 3, Mar 1948, pp 112-116 Berry, R J A , Brain and Mind, or the\nNervous System of Man, New York: The\nMacmillan Co , 1928, 608 pp , 1928, 608 pp Boring, \nEdwin \nG , \nA \nHistory \nof\nExperimental \nPsychology, \nNew \nYork:\nCentury Co , 1929, 699 pp , 1929, 699 pp Franz, Shepherd I , The Evolution of an\nIdea; How the Brain Works, Los Angeles:\nUniversity of California, 1929, 35 pp Herrick, C Judson, The Thinking Machine,\nChicago: University of Chicago Press,\n1929, 374 pp Herrick, C Judson, Brains of Rats and\nMen, Chicago: University of Chicago\nPress, 1930, 382 pp Lashley, Karl S , Brain Mechanisms and\nIntelligence, \nChicago: \nUniversity \nof\nChicago Press, 1929, 186 pp Pieron, Henri, Thought and the Brain,\nLondon: Kegan, Paul, Trench, Trübner &\nCo , 1927, 262 pp Also New York:\nHarcourt, Brace & Co Schrödinger, Erwin, What is Life , New\nYork: The Macmillan Co , 1945, 90 pp , 1945, 90 pp Sherrington, Charles S , The Brain and\nIts Mechanism, Cambridge, England: The\nUniversity Press, 1933, 35 pp Tilney, Frederick, The Brain from Ape to\nMan, New York: P B Hoeber, Inc ,\n1928, 2 vol , 1075 pp , 1075 pp Wiener, Norbert, Cybernetics, or Control\nand Communication in the Animal and the\nMachine, New York: John Wiley & Sons,\n1948, 194 pp Anonymous, Ten Billion Relays, Time, Feb 14, 1949, p 67 MATHEMATICAL BIOPHYSICS\nThere has recently been another approach to the\nproblem: How does a brain think A group of men,\nmany of them in and near Chicago, have been saying:\n“We know the properties of nerves, nerve impulses, and\nsimple nerve networks We know the activity of the\nbrain What mathematical model of nerve networks is\nnecessary to account for the activity of the brain ”\nThese men have used mathematics, statistics, and\nmathematical logic in the effort to attack this problem,\n\n\nand they support a Bulletin of Mathematical Biophysics Householder, \nAlston \nS , \nA \nNeural\nMechanism \nfor \nDiscrimination,\nPsychometrika, vol 4, no 1, Dec 1939,\npp 45-58 Householder, Alston S , and Herbert D Landahl, Mathematical Biophysics of the\nCentral Nervous System, Bloomington,\nInd",
    "Landahl, Mathematical Biophysics of the\nCentral Nervous System, Bloomington,\nInd : Principia Press, 1945 Landahl, Herbert D , Contributions to the\nMathematical Biophysics of the Central\nNervous System, Bulletin of Mathematical\nBiophysics, vol , Contributions to the\nMathematical Biophysics of the Central\nNervous System, Bulletin of Mathematical\nBiophysics, vol 1, no 2, June 1939, pp 95-118 Landahl, \nHerbert \nD , \nWarren \nS McCulloch, and Walter Pitts, A\nStatistical Consequence of the Logical\nCalculus of Nervous Nets, Bulletin of\nMathematical Biophysics, vol 5, no 4,\nDec 1943, pp 135-137 Landahl, Herbert D , A Note on the\nMathematical \nBiophysics \nof \nCentral\nExcitation and Inhibition, Bulletin of\nMathematical Biophysics, vol , A Note on the\nMathematical \nBiophysics \nof \nCentral\nExcitation and Inhibition, Bulletin of\nMathematical Biophysics, vol 7, no 4,\nDec 1945, pp 219-221 Lettvin, Jerome Y , and Walter Pitts, A\nMathematical Theory of the Affective\nPsychoses, \nBulletin \nof \nMathematical\nBiophysics, vol 5, no 4, Dec 1943, pp 139-148 McCulloch, Warren S , and Walter\nPitts, A Logical Calculus of the Ideas\nImmanent in Nervous Activity, Bulletin\nof Mathematical Biophysics, vol 5, no 4,\nDec 1943, pp 115-133 Rashevsky, N , Mathematical Biophysics,\nChicago: University of Chicago Press Revised edition, 1948, 669 pp Rashevsky, N , Mathematical Biophysics of\nAbstraction \nand \nLogical \nThinking,\nBulletin of Mathematical Biophysics, vol 7, no 3, Sept 1945, pp 133-148 Rashevsky, N , Some Remarks on the\nBoolean Algebra of Nervous Nets in\nMathematical Biophysics, Bulletin of\nMathematical Biophysics, vol 7, no 4,\nDec 1945, pp 203-211 Rashevsky, N , A Suggestion for Another\nStatistical \nInterpretation \nof \nthe\nFundamental \nEquations \nof \nthe\nMathematical Biophysics of the Central\nNervous System, Bulletin of Mathematical\nBiophysics, vol",
    ", A Suggestion for Another\nStatistical \nInterpretation \nof \nthe\nFundamental \nEquations \nof \nthe\nMathematical Biophysics of the Central\nNervous System, Bulletin of Mathematical\nBiophysics, vol 7, no 4, Dec 1945, pp 223-226 Rashevsky, N , The Neural Mechanism of\nLogical \nThinking, \nBulletin \nof\nMathematical Biophysics, vol 8, no 1,\nMar 1946, pp 29-40 29-40 LANGUAGES: WORDS AND SYMBOLS\nFOR THINKING\nHardly any field of techniques for thinking is more\nfascinating than language The following list of\nreferences, of course, is short; it is meant chiefly as an\nintroduction pointing out a number of different paths\ninto the field of language and languages Such topics as\nthe following are introduced by the references in this\n\n\nlist:\nThe origin of languages and alphabets The languages of the world, and speech communities The comparison of words and structure from language to\nThe significance of grammar and syntax The problem of clear meanings Writing and speaking that is easy to understand Bloomfield, Leonard, Language, New\nYork: Henry Holt & Co , 1933, 564 pp Bodmer, \nFrederick, \nand \nLauncelot\nHogben, The Loom of Language, New\nYork: W W Norton & Co , 1944, 692\npp Flesch, Rudolf, The Art of Plain Talk, New\nYork: Harper & Brothers, 1946, 210 pp Graff, Willem L , Language and Languages:\nAn Introduction to Linguistics, New York:\nD Appleton & Co , 1932, 487 pp , 1932, 487 pp Hayakawa, S I , Language in Action, New\nYork: Harcourt, Brace & Co , 1941, 345\npp Jespersen, \nOtto, \nThe \nPhilosophy \nof\nGrammar, New York: Henry Holt & Co ,\n1929 (third printing), 359 pp Jespersen, Otto, Analytic Syntax,\nIn this book, by means of a well-contrived\nsystem of letters and signs, the great\nlinguistic scholar Jespersen depicts all\nthe important inter-relations of English\nwords and parts of words in connected\nspeech Ogden, C K , The System of Basic English,\n\n\nNew York: Harcourt, Brace & Co , 1934,\n320 pp Schlauch, Margaret, The Gift of Tongues,\nNew York: Modern Age Books, 1942,\n342 pp Walpole, Hugh R , Semantics: The Nature\nof Words and Their Meanings, New York:\nW W Norton & Co , 1941, 264 pp LANGUAGES:\nMACHINES FOR THINKING\nFor many years, nearly all references about\nmachines as a language for thinking have been\nspecialized and limited Colleges with scholars who\nwrite textbooks usually have not had a variety of\nexpensive and versatile computing machinery As a\nresult, the main environment for stimulating possible\nauthors has until recently been missing The list of\nreferences is accordingly brief Aiken, Howard H , and others, Proceedings\nof a Symposium on Large-Scale Digital\nCalculating Machinery, Cambridge, Mass :\nHarvard University Press, 1948, 302 pp Comrie, John Leslie, The Application of\nCommercial Calculating Machines to\nScientific \nComputing, \nMathematical\nTables and Other Aids to Computation,\nvol 2, no 16, Oct 1946, pp 149-159 Crew, E W , Calculating Machines, The\nEngineer, vol 172, Dec 1941, pp 438-441 Fry, \nMacon, \nDesigning \nComputing\nMechanisms, Cleveland, Ohio: Penton\nPublishing Co",
    "Fry, \nMacon, \nDesigning \nComputing\nMechanisms, Cleveland, Ohio: Penton\nPublishing Co , 1946, 48 pp (Reprinted\nfrom Machine Design, Aug 1945 through\nFeb 1946 )\nHartree, D R , Calculating Machines:\nRecent and Prospective Developments and\nTheir Impact on Mathematical Physics,\nCambridge, England: The University\nPress, 1947, 40 pp Horsburgh, E H , Modern Instruments and\nMethods of Calculation, London: G Bell\nand Sons, Ltd , 1914, 343 pp Lilley, S , Mathematical Machines, Nature,\nvol , Mathematical Machines, Nature,\nvol 149, Apr 25, 1942, pp 462-465 Murray, Francis J , The Theory of\nMathematical Machines, New York: King’s\nCrown Press, 1947, 116 pp The author states that a mathematical\nmachine is a mechanism that provides\ninformation concerning the relationships\namong a specified set of mathematical\nconcepts Turck, J A V , The Origin of Modern\nCalculating Machines, Chicago: Western\nSociety of Engineers, 1921 Recently, however, some magazine and\nnewspaper publishers have seen news\nvalue in machines that think, and some\ngood general articles with appeal to a\nwide audience have appeared For the\nreferences to these articles, see the\nsection of this supplement entitled\n“Digital Machines—Miscellaneous ”\n\n\nPUNCH-CARD CALCULATING MACHINES\nThere are a few general references on punch-card\ncalculating machines:\nBaehne, G Walter, editor, and others,\nPractical Applications of the Punched Card\nMethod in Colleges and Universities, New\nYork: Columbia University Press, 1935,\n442 pp This is a collection of many contributions\nfrom a number of authors, describing\nvarious applications, chiefly educational Eckert, W J , Punched-Card Methods in\nScientific \nComputation, \nNew \nYork:\nColumbia University, The Thomas J Watson \nAstronomical \nComputing\nBureau, 1940, 136 pp This is a scientific treatise, chiefly relating\nto \nthe \ncomputation \nof \norbits \nin\nastronomy Hartkemeier, Harry Pelle, Principles of\nPunch-Card Machine Operation (Subtitle:\nHow to Operate Punch-Card Tabulating\nand Alphabetic Accounting Machines),\nNew York: Thomas Y Crowell Co , 1942,\n269 pp This is based on the author’s experience in\nteaching statistical analysis using IBM\ntabulators The book does not deal with\nthe collator or multiplying punch Hedley, K J , The Development of the\nPunched-Card Method, Actuarial Society\nof Australasia, 1946, 20 pp International \nBusiness \nMachines\n\n\nCorporation, \nInternational \nBusiness\nMachines (form no A-4036-6-45), New\nYork: International Business Machines\nCorporation, 1945, 65 pp Pages 6 to 31 show pictures and brief\ndescriptions of about 20 punch-card\nmachines, available in 1945 Schnackel, H G , and H C Lang,\nAccounting by Machine Methods, New\nYork: Ronald Press Co , 1939, 53 pp Wolf, Arthur W , and Edmund C Berkeley, Advanced Course in Punched\nCard \nOperations, \nNewark, \nN J :\nPrudential \nInsurance \nCompany \nof\nAmerica, 1942, 98 pp A useful and authoritative description of\nIBM punch-card calculating machinery is\nthe following:\nInternational \nBusiness \nMachines\nCorporation, \nDepartment \nof\nEducation, \nMachine \nMethods \nof\nAccounting, Endicott, N",
    "A useful and authoritative description of\nIBM punch-card calculating machinery is\nthe following:\nInternational \nBusiness \nMachines\nCorporation, \nDepartment \nof\nEducation, \nMachine \nMethods \nof\nAccounting, Endicott, N Y : International\nBusiness \nMachines \nCorporation,\n1936-41, 385 pp This is a collection of 28 separate booklets\ntelling the detailed operation of IBM\npunch-card \nmachinery They \nwere\nwritten for employees of IBM and users\nof IBM equipment The following list of\nthe booklets is useful in locating them:\nTitle\nForm No Date  No of\nPages\nMachine Methods of Accounting—Foreword\nAM\n1936\n6\nDevelopment of IBM Corporation\nAM-1-1\n1936\n14\nPrinciples of the Electric Accounting Machine MethodAM-2\n1936\n12\n\n\nThe Tabulating Card\nAM-3-1\n1936\n20\nDesign of Tabulating Cards\nAM-4-1\n1936\n16\nPreparation and Use of Codes\nAM-5\n1936\n28\nOrganization and Supervision of the Tabulating Department\nAM-6\n1936\n16\nSelection and Training of Key Punch Operators\nAM-7\n1936\n12\nAccounting Control\nAM-8\n1936\n8\nPunches\nAM-9\n1936\n12\nAlphabetic Printing Punches\nAM-10\n1936\n7\nFacts to Know about Key Punches\nAM-11\n1936\n4\nVerifiers\nAM-12\n1936\n4\nGang Punches\nAM-13\n1936\n8\nCard-Operated Sorting Machines\nAM-14\n1936\n12\nFacts to Know about Sorters\nAM-14a\n1936\n4\nElectric Tabulating Machines\nAM-15\n1936\n20\nElectric Accounting Machines (Type 285 and Type 297)AM-16\n1936\n16\nAlphabetic Direct Subtraction Accounting Machine\nAM-17\n1936\n28\nNumerical Interpreters\nAM-18\n1936\n8\nElectric Punched-Card Interpreter (Type 552)\nAM-18a\n1941\n8\nReproducing Punches (Type 512)\nAM-19\n1936\n16\nAutomatic Summary Punches for Use with\n \nthe Numerical Accounting Machines (Type 285-297)AM-20\n1936\n16\nAutomatic Summary Punches for Use with the\n \nAlphabetic Accounting Machines (Type 405)\nAM-20a\n1940\n16\nMultiplying Punches\nAM-21\n1936\n16\nApplication of Machines to Accounting Functions\nAM-22\n1936\n24\nOther International Products\nAM-23-2 1936\n19\nThe International Automatic Carriage (Type 921)\nAM-24\n1938\n15\nThe Department of Education of IBM has begun a second series of\nbooklets on the principles of operation of punch-card calculating\nmachinery:\nInternational \nBusiness \nMachines \nCorporation,\nDepartment of Education, Principles of Operation,\n\n\nEndicott, \nN Y : \nInternational \nBusiness \nMachines\nCorporation, 1942 and later (except for one published in\n1939) Many of the booklets in this series have good examples of machine\noperation and applications Also, for the first time, letters and\nnumbers have been used as coordinates to label the hubs on the\nplugboards This series includes the following:\nTitle\nForm No Date  No of\nPages\nCARD PUNCHES AND VERIFIERS\nCard-Punching and Verifying Machines\n52-3176-0\n1946\n21\nAlphabetical Verifier, Type 055\n52-3295-1\n1946\n4\nINTERPRETERS\nCard Interpreters, Type 550, 551, and 552\n52-3178-0\n1946\n14\nREPRODUCERS\nAutomatic Reproducing Punch, Type 513\n52-3180-0\n1945\n22\nEnd Printing Reproducing Punch, Type 519\n52-3292-1\n1946\n26\nElectric Document-Originating Machine,\n \nJune\n \n Type 519\n52-3292-2\n1948\n26\nCOLLATORS\nCollator\nAM-25\n1943\n31\nCollator Counting Device\nC R 9178\n1942\n12\nCALCULATING PUNCHES\nElectric Multiplier, Type 601\n52-3408-1\n1947\n47\nCalculating Punch, Type 602\n52-3409-0\n1946\n83\nCalculating Punch, Type 602\n52-3409-5\n1947\n93\nCalculating Punch, Type 602-A (Preliminary Manual)\n22-5489-0\n1948\n59\nElectronic Multiplier, Type 603\n52-3561-0\n1946\n5\nElectronic Calculating Punch, Type 604\n22-5279-0\n1948\n51\n\n\nTABULATORS\nAccounting Machine, Type 402 and 403 (Preliminary Manual)\n22-5654-0\n1949\n146\nAlphabetical Accounting Machine, Type 404\n52-3395-1\n1946\n96\nTypical Applications, Alphabetical Accounting Machine, \n Type 404, with Multiple Line Printing\n22-3771-1\n1947\n47\nAlphabetical Accounting Machine, Type 405\nAM 17 (1), 1943\n90\n \nRevised\n1/1/43\n \nAlphabetical Accounting Machine,\n \nNov Type 405\n52-3179-2\n1948\n81\nAUTOMATIC PRINTING CARRIAGES\nBill Feed, Type 920\n52-3184-0\n1945\n21\nForm Feeding Device\n52-3235-0\n1946\n11\nAutomatic Carriage, Type 921\n52-3183-0\n1945\n36\nTape-Controlled Carriage\n \n (Preliminary Manual, Revised)\n22-5415-1\n1948\n27\nTEST SCORING MACHINE\nTest Scoring Machine\n94-2333-0\n1939\n19\n \n \nMay\n \nTest Scoring Machine\n32-9145-1\n1946\n20\nPublished Tests Adapted for Use with\n \nJune\n \nthe IBM Electric Test Scoring Machine\n27-4286-9\n1948\n8\nIn addition to the new types of punch-card machines\nreferred to in the above list, an elaborate punch-card\ncalculating machine is described in the following\nreference:\nEckert, W J , The IBM Pluggable Sequence Relay\nCalculator, Mathematical Tables and Other Aids\nto Computation, vol 3, no 23, July 1948, pp 149-161",
    "149-161 A description of punch-card machinery in rather a\n\n\nlight vein is contained in:\nAnonymous, \nSpeaking \nof \nPictures: \nNew\nMechanical Monsters Ease Life’s Growing\nPains, Life, Sept 15, 1947, pp 15-16 Anonymous, 540, Chicago: Time-Life-Fortune\nMagazine, Subscription Fulfillment Office,\n1948, 15 pp New types of punch-card machinery are continually coming into\nuse Among them are: machines that take in punch cards and make\npunched paper tape (such as teletype tape), and vice versa—useful for\ntransmitting punch-card information over wires; an electric typewriter\noperated by punch cards—useful for preparing almanacs for sea and\nair navigation, etc ; a calculator programmed by punch cards,\nconsisting of an assembly of a tabulator, an electronic calculating\npunch, and an auxiliary storage unit, all cabled together—useful for\nsome types of long calculation; etc For information about such\nmachinery, the manufacturers may be consulted PUNCH-CARD CALCULATING MACHINERY:\nAPPLICATIONS\nThere are many articles in scientific journals on\napplications of punch-card calculating machinery to\ntechnical \nproblems The \nfields \nof \nengineering,\neducation, indexing, mathematics, surveying, statistics,\nand others are all represented in the following list of\nsample references:\nAlt, Franz L , Multiplication of Matrices,\nMathematical \nTables \nand \nOther \nAids \nto\nComputation, vol 2, no 13, Jan 1946, pp 12-13 Bailey, C F , and others, Punch Cards for\nIndexing Scientific Data, Science, vol 104, Aug 23, 1946, p 181 Bower, E C , On Subdividing Tables, Lick\nObservatory Bulletin, vol 16, no 455, Nov 1933, pp 143-144 Bower, E C , Systematic Subdivision of Tables,\nLick Observatory Bulletin, vol",
    ", Systematic Subdivision of Tables,\nLick Observatory Bulletin, vol 17, no 467, Apr 1935, pp 65-74 Clemence, G M , and Paul Herget, Optimum-\nInterval Punched-Card Tables, Mathematical\nTables and Other Aids to Computation, vol 1,\nno 6, Apr 1944, pp 173-176 Culley, Frank L , Use of Accounting Machines\nfor Mass-Transformation from Geographic to\nMilitary-Grid Coordinates, Washington, D C :\nNational \nResearch \nCouncil, \nAmerican\nGeophysical Union Transactions of 1942, part 2,\npp 190-197 Deming, W Edwards, and Morris H Hansen,\nOn Some Census Aids to Sampling, Journal of\nthe American Statistical Association, vol 38, no 225, Sept 1943, pp 353-357 Dunlap, Jack W , The Computation of Means,\nStandard Deviations, and Correlations by the\nTabulator When the Numbers Are Both\nPositive and Negative, Proceedings of the\nEducational \nResearch \nForum, \nInternational\nBusiness Machines Corporation, Aug 1940, pp 16-19 Dwyer, Paul S , The Use of Tables in the Form of\nPrepunched \nCards, \nProceedings \nof \nthe\nEducational \nResearch \nForum, \nInternational\nBusiness Machines Corporation, Aug 1940, pp 125-127 Dwyer, Paul S , Summary of Problems in the\nComputation of Statistical Constants with\nTabulating and Sorting Machines, Proceedings\nof the Educational Research Forum, International\nBusiness Machines Corporation, Aug 1940, pp 20-28 Dwyer, Paul S , and Alan D Meacham, The\nPreparation \nof \nCorrelation \nTables \non \na\n\n\nTabulator Equipped with Digit Selection,\nJournal of the American Statistical Association,\nvol 32, 1937, pp 654-662 Dyer, H S , Making Test Score Data Effective in\nthe Admission and Course Placement of\nHarvard Freshmen, Proceedings of the Research\nForum, \nInternational \nBusiness \nMachines\nCorporation, 1946, pp 55-62 Eckert, W J , and Ralph F Haupt, The Printing\nof Mathematical Tables, Mathematical Tables\nand Other Aids to Computation, vol 2, no 17,\nJan 1947, pp 196-202",
    "196-202 Feinstein, Lillian, and Martin Schwarzchild,\nAutomatic Integration of Linear Second-Order\nDifferential Equations by Means of Punched-\nCard Machines, Review of Scientific Instruments,\nvol Feinstein, Lillian, and Martin Schwarzchild,\nAutomatic Integration of Linear Second-Order\nDifferential Equations by Means of Punched-\nCard Machines, Review of Scientific Instruments,\nvol 12, no 8, Aug 1941, pp 405-408 Hotelling, Harold, Some New Methods in\nMatrix Calculation, The Annals of Mathematical\nStatistics, vol Hotelling, Harold, Some New Methods in\nMatrix Calculation, The Annals of Mathematical\nStatistics, vol 14, no 1, Mar 1943, pp 1-34 1-34 International \nBusiness \nMachines\nCorporation, editor, and others, Proceedings\nof the Educational Research Forum, Endicott, N Y : \nInternational \nBusiness \nMachines\nCorporation, 1941 International \nBusiness \nMachines\nCorporation, editor, and others, Proceedings\nof the Research Forum, Endicott, N Y :\nInternational Business Machines Corporation,\n1946, 94 pp King, Gilbert W King, Gilbert W , Punched-Card Tables of the\nExponential Function, Review of Scientific\nInstruments, vol 15, no 12, Dec 1944, pp 349-350 349-350 King, Gilbert W , and George B Thomas,\nPreparation \nof \nPunched-Card \nTables \nof\nLogarithms, Review of Scientific Instruments, vol 15, no 12, Dec 1944, p 350 350 Kormes, Mark, A Note on the Integration of\nLinear Second-Order Differential Equations by\nMeans of Punched Cards, Review of Scientific\nInstruments, vol Kormes, Mark, A Note on the Integration of\nLinear Second-Order Differential Equations by\nMeans of Punched Cards, Review of Scientific\nInstruments, vol 14, no 4, Apr 1943, p 118 Kormes, Mark, Numerical Solution of the\nBoundary Value Problem for the Potential\nEquation by Means of Punched Cards, Review\nof Scientific Instruments, vol",
    "Kormes, Mark, Numerical Solution of the\nBoundary Value Problem for the Potential\nEquation by Means of Punched Cards, Review\nof Scientific Instruments, vol 14, no 8, Aug 1943, pp 248-250 Kormes, \nMark, \nand \nJennie \nP Kormes,\nNumerical Solution of Initial Value Problems\nby Means of Punched-Card Machines, Review of\nScientific Instruments, vol 16, no 1, Jan 1945,\npp 7-9 Kuder, G Frederic, Use of the IBM Scoring\nMachine for Rapid Computation of Tables of\nIntercorrelations, Journal of Applied Psychology,\nvol 22, no 6, Dec 1938, pp 587-596 Maxfield, \nD K , \nLibrary \nPunched \nCard\nProcedures, Library Journal, vol 71, no 12,\nJune 15, 1946, pp 902-905 McLaughlin, Kathleen, Adding Machines Nip\nAEF Epidemics, New York: New York Times,\nApr 27, 1945 McPherson, John C , On Mechanical Tabulation\nof \nPolynomials, \nAnnals \nof \nMathematical\nStatistics, Sept 1941, pp 317-327 McPherson, John C , Mathematical Operations\nwith Punched Cards, Journal of the American\nStatistical Association, vol 37, June 1942, pp 275-281 Milliman, \nWendell \nA , \nMechanical\nMultiplication by the Use of Tabulating\nMachines, Transactions of the Actuarial Society\nof America, vol 35, part 2, Oct 1934, pp 253-264; for discussion see also vol 36, part 1,\nMay 1935, pp 77-84 Royer, Elmer B , A Machine Method for\nComputing the Biserial Correlation Coefficient\nin Item Validation, Psychometrika, vol 6, no 1,\nFeb 1941, pp 55-59 Whitten, C A , Triangulation Adjustment by\nInternational Business Machines, Washington,\nD C : National Research Council, American\nGeophysical Union Transactions of 1943, part 1,\np 31 The following bibliography may be obtained on\nrequest to the Watson Scientific Computing Laboratory,\nColumbia University, 612 West 116 Street, New York\n27, N Y :\nWatson Scientific Computing Laboratory,\nBibliography: The Use of IBM Machines in\nScientific Research, Statistics, and Education,\nNew York: International Business Machines\nCorporation (form no 50-3813-0), Sept 1947,\n25 pp The organization and equipment of this laboratory\nare described in:\nEckert, W J , Facilities of the Watson Scientific\nComputing Laboratory, Proceedings of the\nResearch \nForum, \nInternational \nBusiness\nMachines Corporation, 1946, pp 75-80",
    "75-80 THE DIFFERENTIAL ANALYZER\nThe basic scientific articles on the two differential\nanalyzers at Massachusetts Institute of Technology are:\nBush, Vannevar, The Differential Analyzer: A\nNew \nMachine \nfor \nSolving \nDifferential\nEquations, Journal of the Franklin Institute, vol THE DIFFERENTIAL ANALYZER\nThe basic scientific articles on the two differential\nanalyzers at Massachusetts Institute of Technology are:\nBush, Vannevar, The Differential Analyzer: A\nNew \nMachine \nfor \nSolving \nDifferential\nEquations, Journal of the Franklin Institute, vol 212, no 4, Oct 1931, pp 447-488 Bush, Vannevar, and Samuel H Caldwell, A\nNew Type of Differential Analyzer, Journal of\nthe Franklin Institute, vol 240, no 4, Oct 1945,\npp 255-326 255-326 Some of the less technical articles about the second\ndifferential analyzer at M Some of the less technical articles about the second\ndifferential analyzer at M I T are:\nCaldwell, Samuel H , Educated Machinery,\nTechnology Review, vol 48, no 1, Nov 1945,\npp 31-34 Genet, N , 100-Ton Brain at M I T , Scholastic, vol 48, Feb 4, 1946, p 36 Anonymous, \nMathematical \nMachine; \nNew\nElectronic Differential Analyzer, Science News\nLetter, vol 48, Nov 10, 1945, p 291 Anonymous, \nRobot \nEinstein: \nDifferential\nAnalyzer at M I T , Newsweek, vol 26, Nov 12,\n1945, p 93 Anonymous, \nM I T ’s \n100-Ton \nMathematical\nBrain is Now to Tackle Problems of Peace,\nPopular Science, vol 148, Jan 1946, p 81 Anonymous, The Great Electro-Mechanical Brain;\nM I T ’s Differential Analyzer, Life, vol 20, Jan 14, 1946, pp 73-74 Anonymous, All the Answers at Your Fingertips;\nin the Laboratory of M I T , Popular Mechanics,\nvol 85, Mar 1946, pp 164-167 A differential analyzer was built at the Moore School\nof Electrical Engineering:\nTravis, Irven, Differential Analyzer Eliminates\nBrain Fag, Machine Design, July 1935, pp 15-18 A differential analyzer was built at the General\nElectric Company, Schenectady, N Y Instead of using a\nmechanical or electrical amplifier of the motion of the\nlittle turning wheel riding on the disc, this machine\n\n\nfollows the motion using polarized light This machine\nis described in:\nBerry, T M , Polarized Light Servo System,\nTransactions \nof \nthe \nAmerican \nInstitute \nof\nElectrical Engineers, vol 63, Apr 1944, pp 195-197 Kuehni, H P , and H A Peterson, A New\nDifferential \nAnalyzer, \nTransactions \nof \nthe\nAmerican Institute of Electrical Engineers, vol 63,\nMay 1944, pp 221-227 A differential analyzer has been put into use at the\nUniversity of California:\nBoelter, L",
    "A differential analyzer has been put into use at the\nUniversity of California:\nBoelter, L M K , and others, The Differential\nAnalyzer of the University of California, Los\nAngeles: University of California, 1947, 25 pp A differential analyzer was built at Manchester\nUniversity, England It was built first from “Meccano”\nparts, at a total cost of about 20 pounds, and later\nrefined for more exact work Some articles dealing with\nthis differential analyzer are:\nHartree, D R , The Differential Analyzer, Nature,\nvol , The Differential Analyzer, Nature,\nvol 135, June 8, 1935, p 940 Hartree, D R , The Mechanical Integration of\nDifferential \nEquations, \nThe \nMathematical\nGazette, vol 22, 1938, pp 342-364 Hartree, D R , and A Porter, The Construction\nof a Model Differential Analyser, Memoirs and\nProceedings of the Manchester Literary and\nPhilosophical Society, vol 79, July 1935, pp 51-72 51-72 Other small scale differential analyzers built in\nEngland are covered in:\nBeard, R E , The Construction of a Small Scale\nDifferential Analyser and Its Application to the\nCalculation of Actuarial Functions, Journal of\nthe Institute of Actuaries, vol , The Construction of a Small Scale\nDifferential Analyser and Its Application to the\nCalculation of Actuarial Functions, Journal of\nthe Institute of Actuaries, vol 71, 1942, pp 193-227 Massey, H S W , J Wylie, and R A Buckingham, A Small Scale Differential\nAnalyser: Its Construction and Operation,\nProceedings of the Royal Irish Academy, vol Buckingham, A Small Scale Differential\nAnalyser: Its Construction and Operation,\nProceedings of the Royal Irish Academy, vol 45,\n1938, pp 1-21 A differential analyzer constructed in Germany is\nbriefly described in the following:\nSauer, R , and H Poesch, Integrating Machine\nfor Solving Ordinary Differential Equations,\nEngineers Digest (American Edition), vol 1, May\n1944, pp 326-328",
    "326-328 From the historical point of view there are some\ninteresting papers on a machine for solving differential\nequations by Sir William Thomson (Lord Kelvin),\nincluding one by his brother James Thomson They are\nin the Proceedings of the Royal Society, vol 24, Feb 1876, pp 262-275 262-275 The method of integration by a\nmachine is described, but the state of machine tools at\nthe time was such that no accurate mechanism was\nconstructed Another interesting paper foreshadowing\nthe differential analyzer is:\nWainwright, Lawrence L , A Ballistic Engine,\nChicago: University of Chicago, thesis for\nMaster’s Degree, 1923, 28 pp Some \nof \nthe \napplications \nand \nmathematical\nlimitations of differential analyzers are covered in:\nBush, V Some \nof \nthe \napplications \nand \nmathematical\nlimitations of differential analyzers are covered in:\nBush, V , and S H Caldwell, Thomas-Fermi\nEquation Solution by the Differential Analyzer,\nPhysical Review, vol Caldwell, Thomas-Fermi\nEquation Solution by the Differential Analyzer,\nPhysical Review, vol 38, no 10, 1931, pp 1898-1902 Hartree, D R , A Great Calculating Machine: the\nBush Differential Analyser and Its Applications\nin Science and Industry, Proceedings of the\nRoyal Institution of Great Britain, vol 31, 1940,\npp 151-170 Hartree, D R , and A , and A Porter, The Application\nof the Differential Analyser to Transients on a\nDistortionless Transmission Line, Journal of the\nInstitute of Electrical Engineering, vol Porter, The Application\nof the Differential Analyser to Transients on a\nDistortionless Transmission Line, Journal of the\nInstitute of Electrical Engineering, vol 83, no 503, Nov 1938, pp 648-656 Hartree, D R , and J R Womersley, A Method\nfor the Numerical or Mechanical Solution of\nCertain Types of Partial Differential Equations,\nProceedings of the Royal Society of London,\nseries A, vol 161, 1937, pp 353-366 Maginniss, \nF J , \nDifferential \nAnalyzer\nApplications, General Electric Review, vol",
    ", \nDifferential \nAnalyzer\nApplications, General Electric Review, vol 48,\nno 5, May 1945, pp 54-59 Shannon, Claude E , Mathematical Theory of\nthe \nDifferential \nAnalyzer, \nJournal \nof\nMathematics and Physics, Cambridge, Mass :\nMassachusetts Institute of Technology, vol 20,\nno 4, 1941, pp 337-354 HARMONIC ANALYZERS AND SYNTHESIZERS\nAnother branch of the analogue calculating machine\nis the harmonic analyzer and synthesizer These are\nmachines that study wave motions and related physical\nand mathematical functions A brief list of articles on\nthis type of machine follows:\nArcher, \nR M , \nProjecting \nApparatus \nfor\nCompounding Harmonic Vibrations, Journal of\nScientific Instruments, vol 14, 1937, pp 408-410 Brown, \nS L , \nA \nMechanical \nHarmonic\nSynthesizer-Analyzer, Journal of the Franklin\nInstitute, vol 228, 1939, pp 675-694 Brown, S L , and L L Wheeler, A Mechanical\nMethod for Graphical Solution of Polynomials,\nJournal of the Franklin Institute, vol 231, 1941,\npp 223-243 Brown, S L , and L L Wheeler, Use of the\nMechanical Multiharmonograph for Graphing\nTypes of Functions and for Solution of Pairs of\nNon-Linear Simultaneous Equations, Review of\nScientific Instruments, vol Wheeler, Use of the\nMechanical Multiharmonograph for Graphing\nTypes of Functions and for Solution of Pairs of\nNon-Linear Simultaneous Equations, Review of\nScientific Instruments, vol 13, Nov 1942, pp 493-495 Brown, S L , and L L Wheeler, The Use of a\nMechanical Synthesizer to Solve Trigonometric\nand \nCertain \nTypes \nof \nTranscendental\nEquations, and for the Double Summations\nInvolved in Patterson Contours, Journal of\nApplied Physics, vol 14, Jan 1943, pp 30-36 Fürth, R , and R W Pringle, A New Photo-\nElectric Method for Fourier Synthesis and\nAnalysis, \nLondon, \nEdinburgh \nand \nDublin\nPhilosophical Magazine and Journal of Science,\nvol 35, series 7, 1944, pp 643-656 International Hydrographic Bureau, Tide\nPredicting \nMachines, \nInternational\nHydrographic Bureau, Special Publication 13,\nJuly 1926 Kranz, Frederick W , A Mechanical Synthesizer\nand Analyzer, Journal of the Franklin Institute,\nvol 204, 1927, pp 245-262 Marble, F G , An Automatic Vibration Analyzer,\nBell Laboratories Record, vol",
    ", An Automatic Vibration Analyzer,\nBell Laboratories Record, vol 22, Apr 1944, pp 376-380 Maxwell, L R , An Electrical Method for\nCompounding \nSine \nFunctions, \nReview \nof\nScientific Instruments, vol , An Electrical Method for\nCompounding \nSine \nFunctions, \nReview \nof\nScientific Instruments, vol 11, Feb 1940, pp 47-54 Miller, Dayton C , A 32-Element Harmonic\nSynthesizer, Journal of the Franklin Institute,\nvol 181, 1916, pp 51-81 Miller, Dayton C , The Henrici Harmonic\nAnalyzer and Devices for Extending and\nFacilitating Its Use, Journal of the Franklin\n\n\nInstitute, vol 182, 1916, pp 285-322 Milne, J R , A “Duplex” Form of Harmonic\nSynthetiser and Its Mathematical Theory,\nProceedings of the Royal Society of Edinburgh,\nvol 39, 1918-19, pp 234-242 Montgomery, H C C , An Optical Harmonic\nAnalyzer, Bell System Technical Journal, vol , An Optical Harmonic\nAnalyzer, Bell System Technical Journal, vol 17,\nno 3, July 1938, pp 406-415 Raymond, W J , An Harmonic Synthesizer\nHaving \nComponents \nof \nIncommensurable\nPeriod and Any Desired Decrement, Physical\nReview, vol 11, series 2, 1918, pp 479-481 Robertson, \nJ M , \nA \nSimple \nHarmonic\nContinuous \nCalculating \nMachine, \nLondon,\nEdinburgh and Dublin Philosophical Magazine\nand Journal of Science, vol 13, 1932, pp 413-419 Somerville, J M , Harmonic Synthesizer for\nDemonstrating and Studying Complex Wave\nForms, Journal of Scientific Instruments, vol 21,\nOct 1944, pp 174-177 Straiton, A W , and G K Terhune, Harmonic\nAnalysis by Photographic Method, Journal of\nApplied Physics, vol 14, 1943, pp 535-536 Wegel, R L , and C R Moore, An Electrical\nFrequency Analyzer, Bell System Technical\nJournal, vol 3, 1924, pp 299-323 NETWORK ANALYZERS\n\n\nA third branch of the analogue calculating machine\nis the network analyzer To solve problems, this\nmachine uses the laws governing a network of electrical\ncircuits For example, an electric power company with a\nsystem of power lines over hundreds of miles may have\na problem about electrical power: will an accident or a\nsudden demand cause a breakdown anywhere in the\nsystem In \nthe \nGeneral \nElectric \nCompany \nin\nSchenectady, N Y , there is a machine called the A C Network Analyzer All the properties of the power\ncompany’s network of lines can be fed on a small scale\ninto the analyzer Certain dials are turned and certain\nplugwires are connected Then various kinds of\n“accidents” and “sudden demands” are fed into the\nmachine, and the response of the system is noted The\nanswers given by the machine are multiplied by the\nproper scale factor, and in this way the problem of the\npower company is solved There are two kinds of problems that network\nanalyzers are built to solve: the steady state conditions\nand the transient conditions For example, you may not\noverload a fuse with an electric iron when it is plugged\nin and being used, but as you pull out the cord, you\nmay blow the fuse: the steady state does not overstrain\nthe system, but the transient does",
    "For example, you may not\noverload a fuse with an electric iron when it is plugged\nin and being used, but as you pull out the cord, you\nmay blow the fuse: the steady state does not overstrain\nthe system, but the transient does Some articles on network analyzers are:\nEnns, W E , A New Simple Calculator of Load\nFlow in A C Networks, Transactions of the\nAmerican Institute of Electrical Engineers, vol 62,\n1943, pp 786-790 Hazen, H L , and others, The M I T Network\nAnalyzer, Cambridge, Mass : Massachusetts\nInstitute \nof \nTechnology, \nDepartment \nof\nElectrical Engineering, Serial No 69, Apr 1931 Kuehni, H P , and R G Lorraine, A New A C Network Analyzer, Transactions of the American\n\n\nInstitute of Electrical Engineers, vol 57, 1938,\npp 67-73 Parker, W W , Dual A C Network Calculator,\nElectrical Engineering, May 1945, pp 182-183 Parker, W W , The Modern A C Network\nCalculator, Transactions of the American Institute\nof Electrical Engineers, vol 60, Nov 1941, pp 977-982 Peterson, H A , An Electric Circuit Transient\nAnalyzer, General Electric Review, Sept 1939,\npp 394-400 Varney, R N , An All-Electric Integrator for\nSolving Differential Equations, Review of\nScientific Instruments, vol , An All-Electric Integrator for\nSolving Differential Equations, Review of\nScientific Instruments, vol 13, Jan 1942, pp 10-16 10-16 Some of the articles on applications of network\nanalyzers to various problems are:\nKron, Gabriel, Equivalent Circuits of the Elastic\nField, Journal of Applied Mechanics, vol Some of the articles on applications of network\nanalyzers to various problems are:\nKron, Gabriel, Equivalent Circuits of the Elastic\nField, Journal of Applied Mechanics, vol A11,\nSept 1944, pp 146-161",
    "146-161 Kron, Gabriel, Tensorial Analysis and Equivalent\nCircuits of Elastic Structures, Journal of the\nFranklin Institute, vol Kron, Gabriel, Tensorial Analysis and Equivalent\nCircuits of Elastic Structures, Journal of the\nFranklin Institute, vol 238, Dec 1944, pp 399-442 Kron, Gabriel, Numerical Solution of Ordinary\nand Partial Differential Equations by Means of\nEquivalent Circuits, Journal of Applied Physics,\nvol Kron, Gabriel, Numerical Solution of Ordinary\nand Partial Differential Equations by Means of\nEquivalent Circuits, Journal of Applied Physics,\nvol 16, 1945, pp 172-186 Kron, Gabriel, Electric Circuit Models for the\nVibration Spectrum of Polyatomic Molecules,\nJournal of Chemical Physics, vol Kron, Gabriel, Electric Circuit Models for the\nVibration Spectrum of Polyatomic Molecules,\nJournal of Chemical Physics, vol 14, no 1, Jan 1946, pp 19-31 Kron, G , and G K Carter, A C Network\nAnalyzer Study of the Schrödinger Equation,\nPhysical Review, vol Network\nAnalyzer Study of the Schrödinger Equation,\nPhysical Review, vol 67, 1945, pp 44-49 Kron, G , and G K Carter, Network Analyzer\nTests of Equivalent Circuits of Vibrating\nPolyatomic Molecules, Journal of Chemical\nPhysics, vol Carter, Network Analyzer\nTests of Equivalent Circuits of Vibrating\nPolyatomic Molecules, Journal of Chemical\nPhysics, vol 14, no 1, Jan 1946, pp 32-34 Peterson, H A , and C Concordia, Analyzers\nfor Use in Engineering and Scientific Problems,\nGeneral Electric Review, vol Concordia, Analyzers\nfor Use in Engineering and Scientific Problems,\nGeneral Electric Review, vol 48, no 9, Sept 1945, pp 29-37 29-37 MACHINES FOR SOLVING\nALGEBRAIC EQUATIONS\nAnother branch of the analogue calculating machine\nis a type of machine that will solve various kinds of\nalgebraic equations (see Supplement 2) A list of some\narticles follows The article by Mallock describes a\nmachine for solving up to 10 linear simultaneous\nequations in 10 unknowns, and the article by Wilbur, a\nmachine for solving up to 9 Dietzold, \nRobert \nL , \nThe \nIsograph—A\nMechanical \nRoot-Finder, \nBell \nLaboratories\nRecord, vol",
    ", \nThe \nIsograph—A\nMechanical \nRoot-Finder, \nBell \nLaboratories\nRecord, vol 16, no 4, Dec 1937, pp 130-134 Duncan, W J , Some Devices for the Solution of\nLarge Sets of Simultaneous Linear Equations,\nLondon, Edinburgh, and Dublin Philosophical\nMagazine and Journal of Science, vol 35, series\n7, 1944, pp 660-670 Frame, J Sutherland, Machines for Solving\nAlgebraic Equations, Mathematical Tables and\nOther Aids to Computation, vol 1, no 9, Jan 1945, pp 337-353 Hart, H C , and Irven Travis, Mechanical\nSolution of Algebraic Equations, Journal of the\nFranklin Institute, vol 225, Jan 1938, pp 63-72 Herr, D L , and R S Graham, An Electrical\nAlgebraic Equation Solver, Review of Scientific\n\n\nInstruments, vol Graham, An Electrical\nAlgebraic Equation Solver, Review of Scientific\n\n\nInstruments, vol 9, Oct 1938, pp 310-315 Mallock, R R M , An Electrical Calculating\nMachine, Proceedings of the Royal Society, series\nA, vol 140, 1933, pp 457-483 Mercner, R O , The Mechanism of the Isograph,\nBell Laboratories Record, vol , The Mechanism of the Isograph,\nBell Laboratories Record, vol 16, no 4, Dec 1937, pp 135-140 Stibitz, \nGeorge \nR , \nElectric \nRoot-finder,\nMathematical \nTables \nand \nOther \nAids \nto\nComputation, vol , \nElectric \nRoot-finder,\nMathematical \nTables \nand \nOther \nAids \nto\nComputation, vol 3, no 24, Oct 1948, pp 328-329 Wilbur, J B , The Mechanical Solution of\nSimultaneous Equations, Journal of the Franklin\nInstitute, vol 222, Dec 1936, pp 715-724 715-724 ANALOGUE MACHINES—\nMISCELLANEOUS\nSome articles referring to various other kinds of\nanalogue machines and their applications are here listed\ntogether:\nBush, V",
    "ANALOGUE MACHINES—\nMISCELLANEOUS\nSome articles referring to various other kinds of\nanalogue machines and their applications are here listed\ntogether:\nBush, V , F D Gage, and R R Stewart, A\nContinuous Integraph, Journal of the Franklin\nInstitute, vol 203, 1927, pp 63-84 Gray, T S , A Photo-Electric Integraph, Journal of\nthe Franklin Institute, vol 212, 1931, pp 77-102 Hazen, H L , G S Brown, and W R Hedeman,\nThe \nCinema \nIntegraph: \nA \nMachine \nfor\nEvaluating a Parametric Product Integral (two\nparts and appendix), Journal of the Franklin\nInstitute, vol 230, July 1940, pp 19-44, and\nAug 1940, pp 183-205 McCann, G D , and H E Criner, Mechanical\nProblems Solved Electrically, Westinghouse\nEngineer, vol 6, no 2, March 1946, pp 49-56 Myers, D M , An Integraph for the Solution of\nDifferential Equations of the Second-Order,\nJournal of Scientific Instruments, vol 16, 1939,\npp 209-222 Pekeris, C L , and W T White, Differentiation\nwith the Cinema Integraph, Journal of the\nFranklin Institute, vol 234, July 1942, pp 17-29 Smith, \nC E , \nand \nE L Gove, \nAn\nElectromechanical Calculator for Directional-\nAntenna Patterns, Transactions of the American\nInstitute of Electrical Engineers, vol 62, 1943,\npp 78-82 Yavne, R O , High Accuracy Contour Cams,\nProduct Engineering, vol 19, part 2, Aug 1948,\n3 pp Anonymous, \nElectrical \nGun \nDirector\nDemonstrated, Bell Laboratories Record, vol 22,\nno 4, Dec 1943, pp 157-167 Anonymous, \nDevelopment \nof \nthe \nElectric\nDirector, Bell Laboratories Record, vol 22, no 5, Jan 1944, pp 225-230 Anonymous, Old Field Fortune Teller: Electronic\nOil Pool Analyzer, Popular Mechanics, vol 86,\nSept 1946, p 154 HARVARD IBM AUTOMATIC\nSEQUENCE-CONTROLLED CALCULATOR\nThe basic scientific description of this machine as of\nSeptember 1, 1945, is contained in:\nAiken, \nHoward \nH , \nand \nStaff \nof \nthe\nComputation Laboratory, A Manual of\nOperation for the Automatic Sequence-Controlled\nCalculator, \nCambridge, \nMass : \nHarvard\nUniversity Press, 1946, 561 pp The machine has changed rather a good deal since\nSept",
    "The machine has changed rather a good deal since\nSept 1, 1945 Some circuits have been removed Other\ncircuits have been added The capacity of the machine\nto do problems has been greatly increased The\nComputation Laboratory at Harvard University is\ncordial \ntowards \nscientific \ninquiries, \nand \nsome\nunpublished, mimeographed information is available at\nthe laboratory regarding the details of these changes Some shorter scientific and technical descriptions of\nthe machine are contained in:\nAiken, Howard H Some shorter scientific and technical descriptions of\nthe machine are contained in:\nAiken, Howard H , and Grace M Hopper, The\nAutomatic Sequence Controlled Calculator (3\nparts), Electrical Engineering, vol 65, nos 8, 9,\nand 10, Aug to Nov 1946, p 384 (21 pp ) Bloch, \nRichard \nM , \nMark \nI \nCalculator,\nProceedings of a Symposium on Large-Scale\nDigital \nCalculating \nMachinery, \nHarvard\nUniversity Press, 1948, pp 23-30 Harrison, Joseph O , Jr , The Preparation of\nProblems for the Mark I Calculator, Proceedings\nof \na \nSymposium \non \nLarge-Scale \nDigital\nCalculating \nMachinery, \nHarvard \nUniversity\nPress, 1948, pp 208-210 International \nBusiness \nMachines\nCorporation, \nIBM \nAutomatic \nSequence-\nControlled \nCalculator, \nEndicott, \nN Y :\nInternational Business Machines Corporation,\n1945, 6 pp Some of the less technical articles regarding the\nmachine are:\nGenet, N , Got a Problem , Got a Problem Harvard’s Amazing\nNew Mathematical Robot, Scholastic, vol Harvard’s Amazing\nNew Mathematical Robot, Scholastic, vol 45,\nSept 18, 1944, p 35 Torrey, V , Robot Mathematician Knows All the\nAnswers, Popular Science, vol 145, Oct 1944,\npp 86-89 Anonymous, Giant New Calculator, Science News\nLetter, vol 46, Aug 12, 1944, p 111 Anonymous, Mathematical Robot Presented to\nHarvard, Time, vol 44, Aug 14, 1944, p 72 Anonymous, World’s Greatest Machine for\nAutomatic Calculation, Science News Letter, vol 46, Aug 19, 1944, p 123 Anonymous, Superbrain, Nation’s Business, vol 32, Sept 1944, p 8 Anonymous, Robot Works Problems Never\nBefore Solved, Popular Mechanics, vol 82, Oct 1944, p 13 ENIAC, THE ELECTRONIC NUMERIC\nINTEGRATOR AND CALCULATOR\nThere is as yet no full-scale, published scientific\naccount of the Eniac At the Ballistic Research\nLaboratories, Aberdeen, Md , where the machine now\nis, there are a few copies of some long mimeographed\nreports on the machine and the way it works These\nwere prepared by H H",
    "H Goldstine and others when at\nthe Moore School of Electrical Engineering, as a part of\nthe contract under which the machine was constructed\nfor the U Goldstine and others when at\nthe Moore School of Electrical Engineering, as a part of\nthe contract under which the machine was constructed\nfor the U S Government Government It is possible that these\nreports might be consulted on request by serious\nstudents Some scientific descriptions of the machine and its\nproperties are:\nBurks, \nArthur \nW , \nElectronic \nComputing\nCircuits of the ENIAC, Proceedings of the\nInstitute of Radio Engineers, vol 35, no 8, Aug 1947, pp 756-767 Clippinger, R F , A Logical Coding System Applied\nto the Eniac, B R L Report No 673, Aberdeen,\nMd : Ballistic Research Laboratories, Sept 29,\n1948, 41 pp Eckert, J Presper, Jr , John W Mauchly,\nHerman H Goldstine, and J G Brainerd,\nDescription of the ENIAC and Comments on\nElectronic \nDigital \nComputing \nMachines,\nApplied Mathematics Panel Report 171 2R,\nWashington, D C : National Defense Research\nCommittee, Nov 1945, 78 pp Goldstine, Herman H , and Adele Goldstine,\nThe Electronic Numerical Integrator and\nComputer (ENIAC), Mathematical Tables and\nOther Aids to Computation, vol 2, no 15, July\n1946, pp 97-110 Hartree, D R , The ENIAC, an Electronic\nComputing Machine, Nature, vol 158, Oct 12,\n1946, pp 500-506 Hartree, D R , Calculating Machines: Recent and\nProspective Developments and Their Impact on\nMathematical Physics, Cambridge, England: The\nUniversity Press, 1947, 40 pp (Pages 14 to 27\nare devoted to the Eniac )\nTabor, Lewis P , Brief Description and Operating\nCharacteristics of the ENIAC, Proceedings of a\nSymposium on Large-Scale Digital Calculating\nMachinery, Harvard University Press, 1948, pp 31-39",
    "31-39 Some of the less technical articles on Eniac are:\nRose, A , Lightning Strikes Mathematics: ENIAC,\nPopular Science, vol 148, Apr 1946, pp 83-86 Anonymous, \nRobot \nCalculator: \nENIAC, \nAll\nElectronic Device, Business Week, Feb 16,\n1946, p 50 Anonymous, \nAnswers \nby \nENY: \nElectronic\nNumerical Integrator and Computer, ENIAC,\nNewsweek, vol 27, Feb 18, 1946, p 76 Anonymous, Adds in ¹/₅₀₀₀ Second: Electronic\nComputing Machine at the University of\n\n\nPennsylvania, Science News Letter, vol 49, Feb 23, 1946, p 113 Anonymous, \nENIAC: \nat \nthe \nUniversity \nof\nPennsylvania, Time, vol 47, Feb 25, 1946, p 90 90 Anonymous, It Thinks with Electrons; the ENIAC,\nPopular Mechanics, vol Anonymous, It Thinks with Electrons; the ENIAC,\nPopular Mechanics, vol 85, June 1946, p 139 Anonymous, \nElectronic \nCalculator: \nENIAC,\nScientific American, vol 174, June 1946, p 248 BELL LABORATORIES RELAY COMPUTERS\nAs yet no full-scale scientific report is available on\nthe Bell Laboratories general-purpose relay computers\nthat went to Aberdeen and Langley Field However,\nthere is some information about these and other Bell\nLaboratories relay computing machines in the following\narticles:\nAlt, Franz L , A Bell Telephone Laboratories’\nComputing Machine (two parts), Mathematical\nTables and Other Aids to Computation, vol 3,\nno 21, Jan 1948, pp 1-13, and vol 3, no 22,\nApr 1948, pp 69-84 Cesareo, \nO , \nThe \nRelay \nInterpolator, \nBell\nLaboratories Record, vol 24, no 12, Dec 1946,\npp 457-460 Juley, Joseph, The Ballistic Computer, Bell\nLaboratories Record, vol 25, no 1, Jan 1947,\npp 5-9 Williams, Samuel B , A Relay Computer for\nGeneral Application, Bell Laboratories Record,\nvol 25, no 2, Feb 1947, pp 49-54 Williams, \nSamuel \nB",
    "Williams, \nSamuel \nB , \nBell \nTelephone\nLaboratories’ \nRelay \nComputing \nSystem,\nProceedings of a Symposium on Large-Scale\n\n\nDigital \nCalculating \nMachinery, \nHarvard\nUniversity Press, 1948, pp 40-68 Anonymous, Complex Computer Demonstrated,\nBell Laboratories Record, vol 19, no 2, Oct 1940, pp v-vi Anonymous, \nComputer \nMark \n22 \nMod 0:\nDevelopment and Description, Navord Report No 0:\nDevelopment and Description, Navord Report No 178-45, Washington, D C : Navy Department,\nDec 6, 1945, 225 pp Anonymous, Relay Computer for the Army, Bell\nLaboratories Record, vol 26, no 5, May 1948,\npp 208-209 THE KALIN-BURKHART\nLOGICAL-TRUTH CALCULATOR\nAs yet there are no published references on the\nKalin-Burkhart Logical-Truth Calculator Some books covering a good deal of mathematical\nlogic are:\nQuine, W Some books covering a good deal of mathematical\nlogic are:\nQuine, W V , Mathematical Logic, New York: W W Norton & Co , 1940, 348 pp Reichenbach, Hans, Elements of Symbolic Logic,\nNew York: The Macmillan Co , 1947, 444 pp Tarski, Alfred, Introduction to Logic, New York:\nOxford University Press, 1941, 239 pp Woodger, J H , The Axiomatic Method in Biology,\nCambridge, England: The University Press,\n1937, 174 pp Chapter 2, pp 18-52, is an excellent and\nunderstandable \nsummary \nof \nthe \nconcepts \nof\nmathematical logic Several papers on the application of mathematical\nlogic to the analysis of practical situations are:\nBerkeley, Edmund C , Boolean Algebra (The\n\n\nTechnique for Manipulating “And,” “Or,”\n“Not,” and Conditions) and Applications to\nInsurance, Record of the American Institute of\nActuaries, vol 26, Oct 1937, pp 373-414 Berkeley, Edmund C , Conditions Affecting the\nApplication of Symbolic Logic, Journal of\nSymbolic Logic, vol 7, no 4, Dec 1942, pp 160-168 Shannon, Claude E , A Symbolic Analysis of\nRelay and Switching Circuits, Transactions of\nthe American Institute of Electrical Engineers, vol 57, 1938, pp 713-723",
    "713-723 This paper has had a good deal of influence here and\nthere on the development of electric circuits using\nrelays The following report discusses the solution of some\nproblems of mathematical logic by means of a large-\nscale digital calculator:\nTarski, Alfred, A Decision Method for Elementary\nAlgebra \nand \nGeometry, \nReport \nR-109,\nCalifornia: Rand Corporation, Aug 1, 1948, 60\npp OTHER DIGITAL MACHINES\nFINISHED OR UNDER DEVELOPMENT\nThe Aiken Mark II Relay Calculator\nThe Computation Laboratory of Harvard University\nfinished during 1947 a second large relay calculator,\ncalled the Aiken Mark II Relay Calculator This machine\nis alluded to briefly at the end of Chapter 10 and is\ndescribed more fully in the following:\nCampbell, Robert V D , Mark II Calculator,\nProceedings of a Symposium on Large-Scale\nDigital \nCalculating \nMachinery, \nCambridge,\nMass : Harvard University Press, 1948, pp 69-79 Freeland, Stephen L , Inside the Biggest Man-\nMade Brain, Popular Science, May 1947, pp 95-100 Miller, Frederick G , Application of Printing\nTelegraph \nEquipment \nto \nLarge-Scale\nCalculating \nMachinery, \nProceedings \nof \na\nSymposium on Large-Scale Digital Calculating\nMachinery, \nCambridge, \nMass : \nHarvard\nUniversity Press, 1948, pp 213-222 213-222 The Edsac\nThe Edsac is a machine under construction in\nEngland Wilkes, M V , The Design of a Practical High-\nSpeed \nComputing \nMachine: \nthe \nEDSAC,\nProceedings of the Royal Society, series A, vol 195, 1948, pp 274-279 Wilkes, M V , and W Renwick, An Ultrasonic\nMemory Unit for the EDSAC, Electronic\nEngineering, vol 20, no 245, July 1948, pp 208-213 The Edvac\nThe Edvac is a machine under construction at the\nMoore School of Electrical Engineering, Philadelphia Koons, \nFlorence, \nand \nSamuel \nLubkin,\nConversion of Numbers from Decimal to Binary\nForm in the EDVAC, Mathematical Tables and\nOther Aids to Computation, vol 3, no 26, Apr 1949, pp 427-431 Anonymous, \nEDVAC \nReplaces \nENIAC, \nThe\nPennsylvania Gazette, Philadelphia: University\nof Pennsylvania, vol 45, no 8, Apr 1947, pp 9-10 The \nIBM \nSelective-Sequence \nElectronic\nCalculator\n\n\nThe IBM Selective-Sequence Electronic Calculator\nwas finished and announced in January 1948, and is\nalluded to briefly at the end of Chapter 10 More\ninformation about this machine is in the following\nreferences:\nEckert, W J , Electrons and Computation, The\nScientific Monthly, vol 67, no 5, Nov 1948,\npp 315-323 International \nBusiness \nMachines\nCorporation, \nIBM \nSelective-Sequence\nElectronic Calculator, New York: International\nBusiness Machines Corporation (form no 52-3927-0), 1948, 16 pp The Raytheon Computer\nThe Raytheon Computer is a machine under\nconstruction at the Raytheon Manufacturing Co ,\nWaltham, Mass Bloch, R M , R V D Campbell, and M Ellis,\nThe Logical Design of the Raytheon Computer,\nMathematical \nTables \nand \nOther \nAids \nto\nComputation, vol 3, no 24, Oct 1948, pp 286-295 Bloch, R M , R V D Campbell, and M Ellis,\nGeneral \nDesign \nConsiderations \nfor \nthe\nRaytheon Computer, Mathematical Tables and\nOther Aids to Computation, vol 3, no 24, Oct 1948, pp 317-323 A \n“System \nof \nElectric \nRemote-Control\nAccounting”\nDuring the 1930’s a system using connected punch-\ncard machinery was experimented with in a department\nstore in Pittsburgh The purpose of the system was\nautomatic accounting and analysis of sales This system\nis described in:\nWoodruff, L F , A System of Electric Remote-\n\n\nControl \nAccounting, \nTransactions \nof \nthe\nAmerican Institute of Electrical Engineers, vol 57,\nFeb 1938, pp 78-87 The Univac\nThe Univac is a machine under construction at the\nEckert-Mauchly Computer Corporation, Philadelphia A\nsimilar but smaller digital computer called the Binac is\nalso being developed Eckert-Mauchly Computer Corporation, The\nUnivac System, Philadelphia: Eckert-Mauchly\nComputer Corp , 1948, 8 pp Electronic \nControl \nCo (now \nEckert-\nMauchly Computer Corp ), A Tentative\nInstruction \nCode \nfor \na \nStatistical \nEdvac,\nPhiladelphia: Electronic Control Co (now\nEckert-Mauchly Computer Corp ), May 7,\n1947, 19 pp Snyder, \nFrances \nE , \nand \nHubert \nM Livingston, Coding of a Laplace Boundary\nValue Problem for the UNIVAC, Mathematical\nTables and Other Aids to Computation, vol",
    "Livingston, Coding of a Laplace Boundary\nValue Problem for the UNIVAC, Mathematical\nTables and Other Aids to Computation, vol 3,\nno 25, Jan 1949, pp 341-350 341-350 The Zuse Computer\nThe Zuse Computer is a small digital computer\nconstructed in Germany The Zuse Computer\nThe Zuse Computer is a small digital computer\nconstructed in Germany Lyndon, \nRoger \nC , \nThe \nZuse \nComputer,\nMathematical \nTables \nand \nOther \nAids \nto\nComputation, vol 2, no 20, Oct 1947, pp 355-359 THE DESIGN OF DIGITAL MACHINES\nFollowing are a number of references on various\naspects of the design of digital computing machines:\n\n\nOrganization\nBurks, Arthur W , Super-Electronic Computing\nMachine, Electronic Industries, vol 5, no 7,\nJuly 1946, p 62 Burks, Arthur W , Herman H Goldstine and\nJohn von Neumann, Preliminary Discussion of\nthe Logical Design of an Electronic Computing\nInstrument, Princeton, N J : Institute for\nAdvanced Study, 2nd edition, Sept : Institute for\nAdvanced Study, 2nd edition, Sept 1947, 42\npp Eckert, J Presper, Jr , John W Mauchly, and\nJ R Weiner, An Octal System Automatic\nComputer, Electrical Engineering, vol 68, no 4,\nApr 1949, p 335 Forrester, Jay W , Warren S Loud, Robert\nR Everett, and David R Brown, Lectures by\nProject Whirlwind Staff on Electronic Digital\nComputation, Cambridge, Mass : Massachusetts\nInstitute of Technology, Servo-mechanisms\nLaboratory, Mar : Massachusetts\nInstitute of Technology, Servo-mechanisms\nLaboratory, Mar and Apr 1947, 149 pp Lubkin, Samuel, Decimal Point Location in\nComputing Machines, Mathematical Tables and\nOther Aids to Computation, vol 3, no 21, Jan 1948, pp 44-50 Patterson, George W , editor, and others,\nTheory and Techniques for Design of Electronic\nDigital Computers (subtitle: Lectures Given at the\nMoore School 8 July 1946-31 August 1946),\nPhiladelphia: The University of Pennsylvania,\nMoore School of Electrical Engineering, vol 1,\nlectures 1-10, Sept 10, 1947, 161 pp ; vol 2,\nlectures 11-21, Nov 1, 1947, 173 pp",
    "1, 1947, 173 pp ; vol 3\nand 4 in preparation Stibitz, George R , Relay Computers, Applied\nMathematics \nPanel \nReport \n171 1R,\nWashington, D C : National Defense Research\nCouncil, Feb 1945, 83 pp Stibitz, George R Stibitz, George R , Should Automatic Computers\nbe Large or Small Mathematical Tables and\nOther Aids to Computation, vol 2, no 20, Oct 1947, pp 362-364 Stibitz, George R , The Organization of Large-\nScale Calculating Machinery, Proceedings of a\nSymposium on Large-Scale Digital Calculating\nMachinery, \nCambridge, \nMass : \nHarvard\nUniversity Press, 1948, pp 91-100 Stibitz, George R , A New Class of Computing\nAids, Mathematical Tables and Other Aids to\nComputation, vol 3, no 23, July 1948, pp 217-221 Input and Output Devices\nAlexander, Samuel N , Input and Output\nDevices for Electronic Digital Calculating\nMachinery, Proceedings of a Symposium on\nLarge-Scale \nDigital \nCalculating \nMachinery,\nCambridge, Mass : Harvard University Press,\n1948, pp 248-253 Fuller, \nHarrison \nW , \nThe \nNumeroscope,\nProceedings of a Symposium on Large-Scale\nDigital \nCalculating \nMachinery, \nCambridge,\nMass : Harvard University Press, 1948, pp 238-247 O’neal, R D , Photographic Methods for Handling\nInput and Output Data, Proceedings of a\nSymposium on Large-Scale Digital Calculating\nMachinery, \nCambridge, \nMass : \nHarvard\nUniversity Press, 1948, pp 260-266 Tyler, Arthur W , Optical and Photographic\nStorage Techniques, Proceedings of a Symposium\non Large-Scale Digital Calculating Machinery,\nCambridge, Mass : Harvard University Press,\n1948, pp 146-150 Zworykin, V K , L E Flory, and W S Pike,\n\n\nLetter-Reading Machine, Electronics, vol 22,\nno 6, June 1949, pp 80-86 Anonymous, Letter-Printing Cathode-Ray Tube,\nElectronics, vol 22, no 6, June 1949, pp 160-162 Storage Devices\nBrillouin, Leon N , Electromagnetic Delay Lines,\nProceedings of a Symposium on Large-Scale\nDigital \nCalculating \nMachinery, \nCambridge,\nMass : Harvard University Press, 1948, pp 110-124 Forrester, Jay W",
    "Forrester, Jay W , High-Speed Electrostatic\nStorage, Proceedings of a Symposium on Large-\nScale Digital Calculating Machinery, Cambridge,\nMass : Harvard University Press, 1948, pp 125-129 Haeff, Andrew V Haeff, Andrew V , The Memory Tube and its\nApplication \nto \nElectronic \nComputation,\nMathematical \nTables \nand \nOther \nAids \nto\nComputation, vol , The Memory Tube and its\nApplication \nto \nElectronic \nComputation,\nMathematical \nTables \nand \nOther \nAids \nto\nComputation, vol 3, no 24, Oct 1948, pp 281-286 Kornei, Otto, Survey of Magnetic Recording,\nProceedings of a Symposium on Large-Scale\nDigital \nCalculating \nMachinery, \nCambridge,\nMass : Harvard University Press, 1948, pp 223-237 Moore, Benjamin L , Magnetic and Phosphor\nCoated Discs, Proceedings of a Symposium on\nLarge-Scale \nDigital \nCalculating \nMachinery,\nCambridge, Mass : Harvard University Press,\n1948, pp 130-132 Rajchman, Jan A , The Selectron—A Tube for\nSelective Electrostatic Storage, Mathematical\nTables and Other Aids to Computation, vol 2,\nno 20, \nOct 1947, \npp 359-361 \nand\nfrontispiece Sharpless, T Kite, Mercury Delay Lines as a\nMemory Unit, Proceedings of a Symposium on\nLarge-Scale \nDigital \nCalculating \nMachinery,\nCambridge, Mass : Harvard University Press,\n1948, pp 103-109 Sheppard, C Bradford, Transfer Between\nExternal and Internal Memory, Proceedings of a\nSymposium on Large-Scale Digital Calculating\nMachinery, \nCambridge, \nMass : \nHarvard\nUniversity Press, 1948, pp 267-273 Programming or Coding\nEverett, Robert R , Digital Computing Machine\nLogic (memorandum M-63), Cambridge, Mass :\nMassachusetts Institute of Technology, Servo-\nmechanisms Laboratory, Mar 19, 1947, 48 pp Goldstine, \nHerman \nH , \nand \nJohn \nvon\nNeumann, Planning and Coding of Problems for\nan Electronic Computing Instrument, Princeton,\nN J : Institute for Advanced Study, 1947, 69\npp Goldstine, \nHerman \nH , \nand \nJohn \nvon\nNeumann, Planning and Coding of Problems for\nan Electronic Computing Instrument, Princeton,\nN J : Institute for Advanced Study, part 2, vol",
    ": Institute for Advanced Study, part 2, vol 3, 1948, 23 pp Mauchly, John W Mauchly, John W , Preparation of Problems for\nEdvac-Type \nMachines, \nProceedings \nof \na\nSymposium on Large-Scale Digital Calculating\nMachinery, \nCambridge, \nMass : \nHarvard\nUniversity Press, 1948, pp 203-207 DIGITAL MACHINES—\nMISCELLANEOUS\nMany of the following articles are nontechnical and\ncontain much interesting information about machines\nthat think:\n\n\nAlt, Franz L , New High-Speed Computing\nDevices, The American Statistician, vol 1, no 1,\nAug 1947, pp 14-15 Bush, Vannevar, As We May Think, Atlantic\nMonthly, July 1945, pp 101-108 Condon, Edward U , The Electronic Brain Means\na Better Future for You (broadcast), Columbia\nBroadcasting System, Jan , The Electronic Brain Means\na Better Future for You (broadcast), Columbia\nBroadcasting System, Jan 4, 1948 Davis, \nHarry \nM , \nMathematical \nMachines,\nScientific American, vol 180, no 4, Apr 1949,\npp 29-39 Lagemann, John K , It All Adds Up, Collier’s\nMagazine, May 31, 1947, pp 22-23 Locke, E L , Modern Calculators, Astounding\nScience Fiction, vol 52, no 5, Jan 1949, pp 87-106 MacLaughlan, \nLorne, \nElectrical\nMathematicians, Astounding Science Fiction, vol MacLaughlan, \nLorne, \nElectrical\nMathematicians, Astounding Science Fiction, vol 53, no 3, May 1949, pp 93-108 Mann, Martin, Want to Buy a Brain Popular\nScience, vol 154, no 5, May 1949, pp 148-152 Newman, James R , Custom-Built Genius, New\nRepublic, June 23, 1947, pp 14-18 Pfeiffer, John E , The Machine That Plays Gin\nRummy, Science Illustrated, vol 4, no 3, Mar 1949, pp 46-48 Ridenour, Louis N , Mechanical Brains, Fortune,\nvol 39, no 5, May 1949, pp 108-118 Tumbleson, Robert C , Calculating Machines,\nFederal Science Progress, June 1947, pp 3-7 Anonymous, Almost Human, Home Office News,\nNewark, N J : Prudential Insurance Company\nof America, Feb 1947, p 8 APPLICATIONS OF DIGITAL MACHINES\nSome of the problems that mechanical brains can\nsolve, some of the methods for controlling them to solve\nproblems, and some of the implications of mechanical\nbrains for future problems are covered in the following\nreferences:\nSolving Problems\nBerkeley, Edmund C , Electronic Machinery for\nHandling \nInformation, \nand \nits \nUses \nin\nInsurance, Transactions of the Actuarial Society\nof America, vol 48, May 1947, pp 36-52 Berkeley, Edmund C , Electronic Sequence\nControlled \nCalculating \nMachinery \nand\nApplications in Insurance, Proceedings of 1947\nAnnual Conference, Life Office Management\nAssociation, New York: Life Office Management\nAssociation, 1947, pp 116-129 Curry, Haskell B , and Willa A Wyatt, A\nStudy of Inverse Interpolation of the Eniac, B R L Report No 615, Aberdeen, Md : Ballistic\nResearch Laboratories, Aug 19, 1946, 100 pp Harrison, Joseph O , Jr , and Helen Malone,\nPiecewise \nPolynomial \nApproximation \nfor\nLarge-Scale Digital Calculators, Mathematical\nTables and Other Aids to Computation, vol",
    ", and Helen Malone,\nPiecewise \nPolynomial \nApproximation \nfor\nLarge-Scale Digital Calculators, Mathematical\nTables and Other Aids to Computation, vol 3,\nno 26, Apr 1949, pp 400-407 Hoffleit, Dorrit, A Comparison of Various\nComputing Machines Used in Reduction of\nDoppler Observations, Mathematical Tables and\nOther Aids to Computation, vol Hoffleit, Dorrit, A Comparison of Various\nComputing Machines Used in Reduction of\nDoppler Observations, Mathematical Tables and\nOther Aids to Computation, vol 3, no 25, Jan 1949, pp 373-377 Leontief, Wassily W Leontief, Wassily W , Computational Problems\nArising in Connection with Economic Analysis\nof Interindustrial Relationships, Proceedings of\na Symposium on Large-Scale Digital Calculating\n\n\nMachinery, \nCambridge, \nMass : \nHarvard\nUniversity Press, 1948, pp 169-175 Lotkin, Max, Inversion on the Eniac Using\nOsculatory Interpolation, B R L Report No 632, \nAberdeen, \nMd : \nBallistic \nResearch\nLaboratories, July 15, 1947, 42 pp Lowan, Arnold N , The Computation Laboratory\nof the National Bureau of Standards, Scripta\nMathematica, vol 15, no 1, Mar 1949, pp 33-63 Matz, \nAdolph, \nElectronics \nin \nAccounting,\nAccounting Review, vol Matz, \nAdolph, \nElectronics \nin \nAccounting,\nAccounting Review, vol 21, no 4, Oct 1946,\npp 371-379 McPherson, James L , Applications of High-\nSpeed Computing Machines to Statistical Work,\nMathematical \nTables \nand \nOther \nAids \nto\nComputation, vol , Applications of High-\nSpeed Computing Machines to Statistical Work,\nMathematical \nTables \nand \nOther \nAids \nto\nComputation, vol 3, no 22, Apr 1948, pp 121-126 Mitchell, Herbert F , Jr , Inversion of a Matrix\nof Order 38, Mathematical Tables and Other Aids\nto Computation, vol 3, no 23, July 1948, pp 161-166 Anonymous, Revolutionizing the Office, Business\nWeek, May 28, 1949, no 1030, pp 65-72 Speech\nSome of the possibilities of machines dealing with\nvoice and speech are indicated in:\nDudley, Homer, R R Riesz, and S S A Watkins, A Synthetic Speaker, Journal of the\nFranklin Institute, vol 227, June 1939, pp 739-764 This is an article on the Voder, which is an\nabbreviation of Voice Operation Demonstrator The\nmachine was exhibited at the New York World’s Fair,\n1939 Dudley, Homer, The Vocoder, Bell Laboratories\nRecord, vol 18, no 4, Dec 1939, pp 122-126",
    "122-126 This is a more general type of machine than the\nVoder The Vocoder is both an analyzer and synthesizer\nof human speech The Vocoder is both an analyzer and synthesizer\nof human speech Potter, Ralph K , George A Kopp, and\nHarriet C Green, Visible Speech, New York:\nD Van Nostrand Co , 1947, 441 pp Anonymous, Pedro the Voder: A Machine that\nTalks, Bell Laboratories Record, vol 17, no 6,\nFeb 1939, pp 170-171 Weather\nSome of the possibilities of machines dealing with\nweather information are covered in:\nLagemann, John K , Making Weather to Order,\nNew York Herald Tribune: This Week, Feb , Making Weather to Order,\nNew York Herald Tribune: This Week, Feb 23,\n1947 Shalett, Sidney, Electronics to Aid Weather\nFiguring, The New York Times, Jan 11, 1946 Zworykin, V K , Outline of Weather Proposal,\nPrinceton, N J : Radio Corporation of America\nResearch Laboratories, Oct 1945, 11 pp Anonymous, Weather Under Control, Fortune,\nFeb 1948, pp 106-111 The Robot Machine\nČapek, Karel, R U R (translated from the Czech\nby Paul Selver), New York: Doubleday, Page &\nCo , 1923 Lagemann, John K , From Piggly Wiggly to\nKeedoozle, Collier’s Magazine, vol , From Piggly Wiggly to\nKeedoozle, Collier’s Magazine, vol 122, no 18,\nOct 30, 1948, pp 20-21 Leaver, E W , and J J Brown, Machines\nWithout Men, Fortune, vol 34, no 5, Nov 1946, pp 165 Pease, M C , Devious Weapon, Astounding Science\nFiction, vol 53, no 2, Apr 1949, pp 34-43 Shannon, Claude E , Programming a Computer for\nPlaying Chess, Bell Telephone Laboratories, Oct 8, 1948, 34 pp Shelley, Mary W , Frankenstein (in Everyman’s\nLibrary, No 616), New York: E P Dutton &\nCo , last reprinted 1945, 242 pp Spilhaus, Athelstan, Let Robot Work for You,\nThe American Magazine, Dec 1948, p 47 Anonymous, Another New Product for Robot\nSalesmen, Modern Industry, vol 13, no 2, Feb 15, 1947 Anonymous, The Automatic Factory, Fortune, vol 34, no 5, Nov 1946, p 160",
    "160 Anonymous, Machines Predict What Happens in\nYour Plant, Business Week, Sept 25, 1948, pp 68-69 68-69 NAME INDEX\nNote: This list of persons mentioned in the text includes\nnames of fictional characters The subject index, which\nfollows, includes all other names Aiken, Howard H , 90-112, 177-8, 232, 245-6\nAlexander, Samuel N , 251\nAlquist, 200\nAlt, Franz L , 142, 237, 247, 253\nArcher, R M , 241\nAristotle, 152\nBabbage, Charles, 89\nBaehne, G Walter, 232\nBailey, C F , 237\nBarcroft, Joseph, 229\nBeach, Frank A , 229\nBeard, R E , 88, 240\nBerkeley, Edmund C , 233, 248, 254\nBerry, R J A , 229\nBerry, T M , 240\nBloch, Richard M , 246, 250\nBloomfield, Leonard, 231\nBodmer, Frederick, 231\nBoelter, L M K , 240\nBoole, George, 152\nBoring, Edwin G , 229\nBower, E C , 237\nBrainerd, J G , 247\nBrillouin, Leon N , 252\nBrown, David R , 251\nBrown, G S , 245\nBrown, J J , 255\nBrown, S L , 241-2\nBuckingham, R A , 240\n\n\nBurkhart, William, 144, 155-6\nBurks, Arthur W , 246, 251\nBush, Vannevar, 72, 74, 239, 241, 245, 253\nCaldwell, Samuel H , 74, 239, 241\nCampbell, Robert V D , 249-50\nČapek, Karel, 199, 255\nCarroll, Lewis, 12\nCarter, G K , 244\nCesareo, O , 248\nClemence, G M , 237\nClippinger, R F , 246\nComrie, John Leslie, 232\nConcordia, C , 244\nCondon, Edward U , 253\nCrew, E W , 232\nCriner, H E , 245\nCulley, Frank L , 237\nCurry, Haskell B , 254\nDavis, Harry M , 253\nDeming, W Edwards, 237\nDietzold, Robert L , 244\nDomin, Harry, 199\nDudley, Homer, 254-5\nDuncan, W J , 244\nDunlap, Jack W , 237\nDwyer, Paul S , 237\nDyer, H S , 237\nEckert, J Presper, Jr",
    "Presper, Jr , 114, 178, 247, 251\nEckert, W J , 233, 236-7, 239, 250\nEdison, Thomas A , 15\nEllis, M , 250\nEnns, W E , 243\nEverett, Robert R , 251-2\nFeinstein, Lillian, 237\nFlesch, Rudolf, 231\nFlory, L E , 252\n\n\nForrester, Jay W , 251-2\nFrame, J Sutherland, 244\nFrankenstein, Victor, 198, 200\nFranz, Shepherd I , 229\nFreeland, Stephen L , 249\nFry, Macon, 232\nFuller, Harrison W , 252\nFürth, R , 242\nGage, F D , 245\nGenet, N , 239, 246\nGodwin, Mary W (Mary W Shelley), 198, 255\nGoldstine, Adele, 247\nGoldstine, Herman H , 247, 251, 253\nGove, E L , 245\nGraff, Willem L , 231\nGraham, R S , 244\nGray, T S S , 245\nGreen, Harriet C , 255\nHaeff, Andrew V , 252\nHansen, Morris H , 237\nHarrison, Joseph O , Jr , 246, 254\nHart, H C , 244\nHartkemeier, Harry Pelle, 233\nHartree, D R , 232, 240-1, 247\nHaupt, Ralph F , 237\nHayakawa, S I , 231\nHazen, H L , 243, 245\nHedeman, W R , 245\nHedley, K J , 233\nHerget, Paul, 237\nHerr, D L , 244\nHerrick, C Judson, 229\nHoffleit, Dorrit, 254\nHogben, Launcelot, 231\nHollerith, Herman, 43\nHopper, Grace M , 246\nHorsburgh, E H , 232\nHotelling, Harold, 237\n\n\nHouseholder, Alston S , 230\nJespersen, Otto, 231\nJuley, Joseph, 248\nKalin, Theodore A , 144, 155-6\nKelvin, Lord, 72, 240\nKing, Gilbert W , 238\nKoons, Florence, 249\nKopp, George A , 255\nKormes, Jennie P , 238\nKormes, Mark, 238\nKornei, Otto, 252\nKranz, Frederick W , 242\nKron, Gabriel, 243-4\nKuder, G Frederic, 238\nKuehni, H P , 240, 243\nLagemann, John K , 253, 255\nLandahl, Herbert D , 230\nLang, H C , 233\nLashley, Karl S , 229\nLeaver, E W , 255\nLeontief, Wassily W , 254\nLettvin, Jerome Y , 230\nLilley, S , 232\nLivingston, Hubert M , 250\nLocke, E L , 253\nLorraine, R G , 243\nLotkin, Max, 254\nLoud, Warren S , 251\nLowan, Arnold N , 254\nLubkin, Samuel, 249, 251\nLyndon, Roger C , 250\nMacLaughlan, Lorne, 253\nMaginniss, F J , 241\nMallock, R R M , 244\nMalone, Helen, 254\nMann, Martin, 253\nMarble, F G , 242\n\n\nMassey, H S W , 240\nMastukazi, Kiyoshi, 19\nMatz, Adolph, 254\nMauchly, John W , 114, 178, 247, 251, 253\nMaxfield, D K , 238\nMaxwell, L R , 242\nMcCann, G D , 245\nMcCulloch, Warren S , 230\nMcLaughlin, Kathleen, 238\nMcPherson, James L , 254\nMcPherson, John C , 238\nMeacham, Alan D , 237\nMercner, R O , 244\nMiller, Dayton C , 242\nMiller, Frederick G , 249\nMilliman, Wendell A , 238\nMilne, J R , 242\nMitchell, Herbert F , Jr , 254\nMontgomery, H C , 242\nMoore, Benjamin L , 252\nMoore, C R , 242\nMurray, Francis J , 232\nMyers, D M , 245\nNewman, James R , 253\nOgden, C K , 231\nO’Neal, R D , 252\nParker, W W , 243\nPatterson, George W , 251\nPease, M C , 255\nPekeris, C L , 245\nPeterson, H A , 240, 243-4\nPfeiffer, John E , 253\nPieron, Henri, 229\nPike, W S , 252\nPitts, Walter, 230\nPoesch, H , 240\nPorter, A , 240-1\n\n\nPotter, Ralph K , 255\nPringle, R W , 242\nQuine, W V , 248\nRajchman, Jan A , 252\nRashevsky, N , 230\nRaymond, W J , 242\nReichenbach, Hans, 248\nRenwick, W , 249\nRidenour, Louis N , 253\nRiesz, R R , 254\nRobertson, J M , 242\nRose, A , 247\nRossum, 199\nRoyer, Elmer B , 238\nSauer, R , 240\nSchlauch, Margaret, 231\nSchnackel, H G , 233\nSchrödinger, Erwin, 229\nSchwarzchild, Martin, 237\nShalett, Sidney, 255\nShannon, Claude E , 153-5, 241, 248, 255\nSharpless, T Kite, 252\nShelley, Mary W , 198, 255\nShelley, Percy Bysshe, 198\nSheppard, C Bradford, 252\nSherrington, Charles S , 229\nSmith, C E , 245\nSnyder, Frances E , 250\nSomerville, J M , 242\nSpilhaus, Athelstan, 255\nStewart, R R , 245\nStibitz, George R , 129-30, 244, 251\nStraiton, A W , 242\nTabor, Lewis P , 247\nTarski, Alfred, 248-9\nTerhune, G",
    ", 247\nTarski, Alfred, 248-9\nTerhune, G K K , 242\nThomas, George B , 238\n\n\nThomson, James, 240\nThomson, William, 72, 240\nTilney, Frederick, 229\nTorrey, V , 246\nTravis, Irven, 239, 244\nTumbleson, Robert C , 253\nTurck, J A V V , 232\nTyler, Arthur W , 252\nVarney, R N , 243\nvon Neumann, John, 124, 251\nWainwright, Lawrence L , 72, 241\nWalpole, Hugh R , 231\nWatkins, S S A , 254\nWegel, R L , 242\nWeiner, J R , 251\nWheeler, L L , 241-2\nWhitten, C A , 238\nWiener, Norbert, 229\nWilbur, J B , 244\nWilkes, M V , 249\nWilliams, Samuel B , 248\nWolf, Arthur W , 233\nWomersley, J R , 241\nWood, Thomas, 19\nWoodger, J H , 248\nWoodruff, L F , 250\nWyatt, Willa A , 254\nWylie, J , 240\nYavne, R O , 245\nZworykin, V K , 190, 252, 255\n\n\n\n\nSUBJECT INDEX\nNotes: Phrases consisting of an adjective and a noun, or\nof a noun and a noun, are entered in their alphabetical\nplace \naccording \nto \nthe \nfirst \nword For \nexample,\n“electrostatic storage tube” is under e, and “punch card” is\nunder p A field, 99\nA tape, 82-3\nabacus, 17-9, 133, 220\nabax (Greek), 18\nabsolute value, 101, 222\naccumulator, 115-6\naccumulator decade, 118\naccuracy, 67, 89\nacetylcholine, 3\nadd output, 120\naddend, 223\nadder, 77\nadder mechanism, 77-8\nadding, 24-5, 27, 37, 55, 100, 119, 139\naddition circuit, 37\nAiken Mark I Calculator, 10, 89-112, 245-6;\nsee also Harvard IBM Automatic Sequence-Controlled Calculator\nAiken Mark II Relay Calculator, 176-8, 249\nAiken Mark III Electronic Calculator, 177\nair resistance coefficient, 80-2\nalgebra of logic, 26, 36, 56-62, 105, 140, 151-2, 164, 221-3, 248\nalgebraic equations, machines for solving, 244\nall-or-none response, 3\nalphabet, 14\nalphabetic coding, 13, 54\nalphabetic punching, 46\nalphabetic writing, 13\namplify, 73\n\n\nanalogous, 65\nanalogue, 65\nanalogue machines (machines that handle information expressed as \nMIT Differential Analyzer No 2, 65-88;\nreferences, 239-45\nanalytical engine, 90\nanalyzer, 68, 241-4;\nsee also differential analyzer\nand, 146-8\nand/or, 149\nangle-indicator, 74-5\nanimal thinking, 4, 8, 188\nannuities, 88\nantecedent, 158\nantilogarithm, 139, 226\nantitangent, 139, 226\napproximation, 220;\nsee also rapid approximation\naptitude testing, 190\nargument (in a mathematical table or function), 96, 103-4, 122, 136\narithmetical operations, 55-6, 173\narmor with a motor, 180, 195\narray, 173, 227\nAtomic Energy Commission, 203, 208\nattitudes, 205\naugend, 223\naut (Latin), 149\nautomatic address-book, 181\nautomatic carriage, 53\n“Automatic Computing Machinery”\n(section in Mathematical Tables and Other Aids to Computation), 1\nautomatic control: house-furnace, 189;\nlawn-mower, 188;\ntractor-plow, 188;\nweather, 189\nautomatic cook, 181\nautomatic factory, 189\nautomatic library, 9, 181\nautomatic machinery, 182\nautomatic pilot, 189\n\n\nautomatic recognizer, 186-7\nautomatic sequence-controlled calculator, 90;\nsee also Harvard IBM Automatic Sequence-Controlled Calculator\nautomatic stenographer, 185\nautomatic switching circuits, 248\nautomatic translator, 182\nautomatic typist, 182, 184\naxon, 3\nB field, 99\nB tape, 82-3\nBallistic Research Laboratories, 1, 113-5, 127-8, 132, 142\nbase e, 226\nbase 10, 226\nbeam of electrons, 172\nbehavior, 4, 7-8, 29\nBell Telephone Laboratories, 4-5, 128-43, 247-8\nBell Telephone Laboratories’ general-purpose relay computer, 128-4\ncost, 142;\nreliability, 141;\nspeed, 142\nBessel functions, 111, 226\nBinac, 179\nbinary coding, 11, 13\nbinary digit, 14\nbinary numbers, 14, 216-9\nbiophysics, 230\nbiquinary numbers, 133, 219-20\nblocks of arguments, 137\nBoolean algebra, 152, 248;\nsee also mathematical logic\nboth, 149\nbowwow theory, 12\nbrain evolution, 229\nbrain with a motor, 180, 195\nBTL frames, 138-9\nbus, 32, 119\nbutton, 91, 94\nC field, 99\n\n\nC tape, 82-3\ncalcis (Latin), 18\ncalculating punch, 47, 51-2, 235\ncalculator frames, 138\ncalculator programmed by punch cards, 236\ncam, 94-5\ncam contact, 91, 94-5\ncapacitance, 117\ncapacitor, 117\ncapacity: counter, 59;\nselecting, 59\ncarbon dioxide, 190\ncard channel, 47, 52\ncard column, 48\ncard feed, 48, 91\ncard punch, 91, 97\ncard reader, 116, 118\ncard sorter, 96\ncard stacker, 48\ncard station, 47\nCarnegie Institution of Washington, 113\ncarry impulse, 118\ncell nucleus, 2-3\ncensus, 43, 53\nchannel, 47, 52, 170\ncharacteristic of a logarithm, 107\ncheck counter, 105\ncheck-marks, 151\nchecking, 105, 110, 179, 227\nchess game, 117\nchestnut blight, 201\nchortle, 12\nclass selector, 59\nclearing, 100\ncodes, 29, 54, 96, 99\ncoding, 30, 130, 252-3\ncoding line, 99\ncolumn (in a punch card), 45\nconnective, 148, 158-9\nconnective grouping, 159\n\n\ncollating, 51, 173\ncollator, 47, 51, 235\ncollator counting device, 51, 235\ncombining information, 15\ncombining operations, 173\nCommon, 59-60\ncomparer, 57-8\ncomparing, 50, 57-8\ncomplement, 55;\nsee also nines complement, ones complement, tens complement\nComplex Computer, 129-30\ncomplex numbers, 128-9\ncomputer, 6, 27\nComputer 1 and Computer 2, 132, 138\nconflicts between statements, 149-50\nconsequent, 158\nconstant, 224\nconstant ratio, 77\nconstant register, 96, 99\nconstant switch, 99\nConstant Transmitter, 116, 118\nconsulting a table, 103, 122\nconvergent, 221\nConverter, 115\ncontext, 144\ncontinuous annuities, 88\ncontinuous contingent insurances, 88\ncontinuously running gear, 93\ncontrol, 6, 28, 90-1\ncontrol brushes, 51-2\ncontrol frames, 138-9\nControl Instrument Company, 43\ncontrol over robot machines, 196-208\ncontrol tape, 28\ncontroversy, 197\ncosine, 75, 85, 139, 226\ncost of mechanical brains, 87, 109, 126, 142, 165, 168\ncounter, 52, 74, 93-4\ncounter position, 93\ncounter wheel, 93, 118\n\n\ncounting, 55\ncoupling (numbers), 106\ncube, 105, 224\nCurrent (input of comparer), 57\ncycle, 29, 45\nCycling Unit, 115-6\nCypriote, 13\nDartmouth College, 131\ndecade, 118\ndecimal digit, 11, 14\ndecimal position, 118\ndeciphering, 184, 188\ndecoding, 184, 188\ndefinite integral, 111, 225\ndelay lines, 17, 20, 171-2\ndendrite, 3\ndenial, 147\ndependent variable, 81, 224\nderivative, 68-71, 225\ndesign of mechanical brains, 167-79, 251\ndesk calculating machines, 4, 11, 17, 19\ndetail cards, 50\ndial switch, 92, 95-6\ndial telephone, 17, 19, 128\ndifferences, 110, 227\ndifferential, 68, 70, 78\ndifferential analyzer, 68, 72-88, 239-41\nDifferential Analyzer No 2, 65-88;\naccuracy, 86;\ncost, 87;\nreliability, 87;\nspeed, 87\ndifferential equation, 68-9, 71, 111, 141, 225-6\ndifferential function, 70\ndifferential gear assembly, 78\ndigit, 11, 14\nDigit Pickup, 60\ndigit selector, 60\ndigit tray, 119\n\n\ndigit trunk lines, 119\ndigit trunks, 119\ndigital machines\n(machines that handle information expressed as digits or letters\nBell Laboratories’ general-purpose relay calculator, 128-43;\nEniac, 113-27;\nHarvard IBM Automatic Sequence-Controlled Calculator, 89-112\npunch-card calculating machinery, 42-64;\nreferences, 232-9, 245-55\ndirections, 24\ndisc, 78-80\ndiscrimination, 140\ndiscriminator, 140-1\ndistance, 68-9\ndistinguishing A and H, 184\ndividend, 103, 223\nDivider-Square-Rooter, 115-7\ndividing, 55-6, 98, 102, 121, 140\ndivisor counter, 102\ndoorpost, 65-6\ndoubling, 76-7, 100\ndoubling mechanism, 76-7\ndrafting rules, 149\ndrag coefficient, 80\ndrive, 86\nDry Ice, 190\necho, 171\nEckert-Mauchly Computer Corporation, 179, 250\neconomic relations, 194\nEdsac, 249\n“educated” machine, 101\nEdvac, 177, 249\nEgyptian, 12\neither, 149\nelectric charge, 172\nelectric remote-control accounting, 250\nelectric typewriter, 91, 97, 236\nelectromagnet, 168\nElectronic Binary Automatic Computer, 179\n\n\nelectronic calculating punch, 236\nElectronic Control Company, 250\nElectronic Numerical Integrator and Calculator (Eniac), 113-27, 246\nsee also Eniac\nelectronic tubes, 17, 20-1, 178-9;\nCathode, 21;\nGrid, 21;\nPlate, 21\nelectrostatic storage tube, 17, 20, 172\n11 position, 45\n11 punch, 58\nelse, 146-7\nend-around-carry, 95, 217, 223\nengine, 90\nEniac, 113-27, 246-7;\ncost, 126;\npanels, 115;\nreliability, 126;\nspeed, 125;\nunbalance, 124\n“enough alike,” 184\nEqual (output of sequencer), 61-2\nequation, 68, 225\nequivalent, 14\nerase key, 134\nEtruscan, 188\nexplanation, 209-13\nexplicit equation, 86\nexponential, 85, 106, 225-6\nextraction, 222\nfalsity, 147\nfarad, 117\nfingers, 16, 18\nfire-control instrument, 17, 19, 67, 131\n5 impulse, 56\nflights, 70\nflip-flop, 119\nfollowing logically, 145\nform feeding device, 236\n\n\nformal logic, 152\nformula, 68, 70, 224\nFrankenstein’s monster, 198\nfunction, 68, 70, 81, 103, 116, 118, 224\nfunction table, 80-1, 116, 118\ngang punching, 50\ngearbox, 77-8\nGeneral Electric A C Network Analyzer, 243\nGeneral Electric Company, 243\ngeographic code, 54\ngiant brain, 1, 5-8\nglobe, 65-6\ngraph, 81\ngreat circle, 69\ngreater-than, 25-7, 37, 222\ngreater-than circuit, 37\nGreek letters, 120\nguided missile, 197, 206\ngun, 69\nhail storm, 190\nhand perforator, 132, 134\nhandling information, 10-18\nharmonic analyzers, 241-2\nharmonic synthesizers, 241-2\nHarvard Computation Laboratory, 89, 176-7, 245, 249\nHarvard IBM Automatic Sequence-Controlled Calculator (Mark I), 10\ncost, 109;\nefficiency, 111;\nreliability, 110;\nspeed, 109\nHarvard Sequence-Controlled Electronic Calculator (Mark III), 177\nHarvard Sequence-Controlled Relay Calculator (Mark II), 176-8, 249\nHarvard University, 1, 4, 8, 89, 176-7, 245, 249\nhatred, 206\nhoppers, 51\nhub, 46, 98\nhuman brain, 2-4, 16, 229\nhumidity, 63\n\n\nIBM (International Business Machines), 43-64, 89-90, 177, 233-9, 24\nIBM Automatic Sequence-Controlled Calculator, 10, 89-112, 245-6;\nsee also Harvard IBM Automatic Sequence-Controlled Calculator\nIBM card-programmed calculator, 236\nIBM pluggable sequence relay calculator, 236\nIBM punch-card machinery, 43-64, 233-9\nIBM Selective-Sequence Electronic Calculator, 177-9, 249\nideographic writing, 12\nif, 146-7\nif then, 149\nignorance, 205\nillness, 191-2\nimitative scheme, 12\nin-code, 99\nin-field, 99\nindependent variable, 81, 224\ninfinity, 86, 133, 212, 225\ninformation, 10\ninitial conditions, 83, 225\nInitiating Unit, 115-6\ninput, 6, 90-1\ninput devices, 175, 251-2\ninput register, 27\ninstantaneous rate of change, 70-1\nInstitute of Advanced Study, 124\ninstructions, 28, 83, 97, 178-9\ninsurance company, 42\ninsurance policies, 42\ninsurance values, 88\nintegral, 68, 71-2, 225\nintegral sign, 85, 225\nintegrating, 71-2, 78\nintegrator, 78-80\nintegrator mechanism, 78-9\nInternational Business Machines Corporation (IBM), 43;\nsee IBM\nInternational Hydrographic Bureau, 242\nInternational Phonetic Alphabet, 13\ninterpolating, 131, 221\ninterposing, 102\n\n\ninterpreter, 47, 49, 235\ninterpreting, 49\ninterval, 68, 70\nintuitive thinking, 8\ninverse, 71\njudgments, 191\nKalin-Burkhart Logical-Truth Calculator, 144-66, 248;\ncost, 165;\nreliability, 166;\nspeed, 166\nkey punch, 47-8, 96, 235\nkeyboard, 48\nknots, 17\nlanguage of logic, 56-62, 105, 140;\nsee also mathematical logic\nlanguages, 10-21, 231\nlatch relay, 40-1\nleft-hand components, 56, 121, 215\nlibrary, 9, 181\nLibrary of Congress, 15\nlie detector, 192\nline of coding, 99\nlinear, 224-5\nlinear interpolation, 221\nlinear simultaneous equations, 141, 225\nlobe, 94-5\nlogarithm, 67, 85, 106-8, 139, 225\nLogarithm-In-Out counter, 107\nlogic, 144;\nsee also mathematical logic\nlogical choice, 4;\nsee also mathematical logic\nlogical connective, 148, 222\nlogical operations, 56-62, 173\nlogical pattern, 145-6\nlogical truth, 144-56, 166\nLogical-Truth Calculator, 144-66;\n\n\nsee Kalin-Burkhart Logical-Truth Calculator\nloopholes, 149\nLow Primary (output of sequencer), 61-2\nLow Secondary (output of sequencer), 61-2\nLower Brushes, 52\nloxodrome, 69-70\nmachine call number, 99\nmachine cycle, 56\nmachine language, 29, 99, 175, 191\nmachines as a language for thinking, 19-20;\nreferences, 231-2\nmachines involving voice and speech, 185-6, 254\nmagnetic surfaces, 17, 20, 168-70, 179\nmagnetic tape, 169-70, 179\nmagnetic wire, 168\nmagnetized spot, 168-70\nmain connective, 160\nmany-wire cable, 50\nMark I (Harvard IBM Automatic Sequence-Controlled Calculator), 10\nsee also Harvard IBM Automatic Sequence-Controlled Calculator\nMark II (Harvard Sequence-Controlled Relay Calculator), 176-8, 249\nMark III (Harvard Sequence-Controlled Electronic Calculator), 177\nMassachusetts Institute of Technology, 1, 20, 65, 72-88, 153\nMassachusetts Institute of Technology’s Differential Analyzer No 2, \naccuracy, 86;\ncost, 87;\nreliability, 87;\nspeed, 87\nmaster card, 50\nMaster Programmer, 115-6\nmatching, 173\nmathematical biophysics, 230\nmathematical logic, 26, 36, 56-62, 105, 140, 151-2, 164, 221-3, 248\nmatrices, 173, 227\nmatrix, 173, 227\nmeanings, 209, 231\nmeasurements, 65-6, 68\nmechanical brain, 1, 5-8, 20;\ncrucial devices for, 20\n\n\nmechanical brains under construction, 176-9\nmemory, 27, 90-1\nmentality, 24, 27\nmercury tank, 171, 179\nmerging, 173\nmetal fingers, 135\nmica, 172\nmicrophone, 185\nmimeograph stencil, 16\nMinoan, 188\nmiscellaneous field, 99\nmistake, 134\nMoore School of Electrical Engineering, 7, 113-27, 177, 249\nmultiplicand, 223\nmultiplicand counter, 101\nmultiplication schemes, 214-6\nmultiplier, 115-6\nmultiplier counter, 101\nmultiply-divide unit, 103\nmultiplying, 55-6, 101, 121, 140\nmultiplying punch, 47, 52, 235\nNational Advisory Committee for Aeronautics, 128, 132\nNaval Proving Ground, 177\nnegation, 24-5, 27, 34-6\nnegation circuit, 36\nnegative, 147\nnegative digit, 215\nneon bulb, 119\nnerve, 2-4\nnerve cell, 2, 3, 16\nnerve fiber, 2, 3\nnerve networks, 230\nnervous system, 188\nnetwork analyzers, 242-4\nneurosis, 191\nnine-pulses, 120-1\nnines complement, 95, 121, 223\nNo X, 59\nNorthrop Aircraft, Inc , 179\n\n\nnot, 146-8\nnumeric coding, 13, 54\nnumerical X position, 45\nnumerical Y position, 45\noccupation code, 54\noctal notation, 179, 219\nohm, 117\nOjibwa, 12\nones complement, 217\nonly, 146-7\noperation code, 103\noperations with numbers, 24-7\nor, 146-9\norganization of digital machines, 251\nout-code, 99\nout-field, 99\noutput, 6, 90-1, 251-2\noutput devices, 176, 251-2\noutput register, 27\npaper channel, 52\npartial differential equations, 87\npartial products, 115, 214\nPearl Assurance Company, 88\npebbles, 17-8\npen with a motor, 180, 195\npermanent table frames, 138-9\npersonal income tax, 141\nphonetic writing, 13\nphonograph, 15-6\nphonographic writing, 13\nphototube, 81-2, 183-4\nphysical equipment for handling information, 11, 15-21, 91\nphysical problems, 69-72\nphysical quantities, 67-9\npictographic writing, 12\nplugboard, 46, 98\nplug-in units, 117-8\npoint of view, 207\n\n\npooh-pooh theory, 12\nposition (in a punch card), 45\nposition frames, 138-9\npower, 43, 65, 133, 216, 224\nprejudice, 205\nPrevious (input of comparer), 57\nPrimary (input of sequencer), 61-2\nPrimary Brushes, 51, 62\nPrimary Feed, 51, 61\nPrimary Sequence Brushes, 51\nprinter, 137\nprinter frames, 138\nproblem frames, 138\nproblem position, 132, 135\nproblem tape, 134\nprocessor, 132, 134, 175\nproduct, 70, 102, 223\nproduct counter, 102\nproduction scheduling, 193\nprogram, 122, 173, 252-3\nprogram-control switch, 123\nprogram pulse, 122\nprogram-pulse input terminal, 123\nprogram register, 38\nprogram tape, 28-9\nprogram trays, 119\nprogram trunk lines, 119\nprogramming method of von Neumann, 124\npronoun, 223\npsychological testing, 190\npsychological trainer, 191-2\npulses, 120, 171\npunch card, 17, 44-5, 95, 97\npunch-card column, 45\npunch-card machinery, 17, 20, 42-64, 232-9;\ncost, 63;\nreliability, 63-4;\nspeed, 62-3\npunch feed, 51-2\npunched paper tape, 17, 23, 82, 95\n\n\npunching channel, 50\npunching dies, 48, 51-2\npyramid circuit, 39\nquantity of information, 11, 14-15\nquartz, 171\nquotient, 98, 103\nR U R , 199\nradar, 183\nrailroad line, 6, 119\nrapid approximation, 106-8, 220-1\nrate of change, 68, 70-1\nratio, 77, 83\nRaytheon Computer, 250\nreading, 57\nreading brushes, 51-2\nreading channel, 50\nreading of punch cards, 44\nreasoning, 144\nrebus-writing, 13\nreciprocal, 85, 224\nrecognizing, 8, 182-5\nrecorder, 132, 137\nrectifier, 32\nreferent, 12\nregister, 27\nreject, 49\nrelay, 17, 20-1, 23, 92, 129, 133, 178;\nCommon, 21;\nGround, 21;\nNormally Closed, 21;\nNormally Open, 21;\nPickup, 21\nrelease key, 48\nreliability, 63-4, 110, 126, 128, 141-2, 166, 168, 174\nRemington-Rand, 43\nreperforator, 137\nrephrasing, 163-4\nreproducer, 47, 49-50, 235\n\n\nreproducing, 49\nreset code, 100\nresetting, 100\nresistance, 80, 117\nresistance coefficient, 80\nresistor, 117\nright-hand components, 56, 121, 215\nrobot machine, 197, 198-208, 255\nrobot salesman, 201\nrobota (Czech), 199\nRoman numerals, 212;\nancient style, 219\nroom, 70\nRossum’s Universal Robots, 199\nrounding off, 55-6\nroutine, 8, 167, 173\nroutine frames, 138-9\nroutine tape, 28, 134\nrules, 191, 224\nsatisfy, 225\nscale factor, 74, 86\nschemes for expressing meanings, 11-15\nscreen, 172\nscrew, 78\nSecondary (input of sequencer), 61-2\nSecondary Brushes, 51, 62\nSecondary Feed, 61\nSelect-Receiving-Register circuit, 39\nselecting, 26, 58, 104\nselection, 26-7, 38, 222\nselection circuit, 38\nselection counter, 104\nselector, 58-60\nsensing digits, 108\nseparation sign, 129\nsequence-control tape, 98\nsequence-control-tape code, 98\nsequence-controlled, 89\nsequence-tape feed, 98\n\n\nsequencer, 61\nsequencing, 61\nshifting, 217\nshort-cut multiplication, 215-6\nSimon, 22-40\nsimultaneous, 225\nsimultaneous equations, 85, 225\nsine, 75, 85, 106, 139, 226\nsink (of a circuit), 154\nslab, 18\nslide rule, 65, 67\nsmoothness, 110, 227\nsocial control, types, 203\nsorter, 47-9\nsorting, 57, 173\nsoundtracks, 16, 18\nsource (of a circuit), 154\nspace key, 48\nspeedometer, 68\nspelling rules, 185\nspoken English, 11\nsquare, 224\nsquare matrix, 227\nsquare root, 116-7, 173, 220, 224\nStart Key, 98\nstatements, 26, 144-51\nstatic electricity, 63\nstorage, 6\nstorage counter, 93\nstorage devices, 252\nstorage register, 28, 93\nstoring information, 15\nstoring register frames, 138\nstoring registers, 139\nstring, 65-6\nstylus, 16\nsubroutine, 106\nSubsidiary Sequence Mechanism, 90, 106\nsubtract output, 120\nsubtracting, 55, 100, 119, 139, 223\n\n\nsubtracting by adding, 223\nsummary punch, 50, 116, 119\nsummary-punching, 50\nswitch open and current flowing, 154\nswitchboard, 76\nswitches in parallel, 154\nswitches in series, 154\nswitching circuits, 155\nsyllable-writing, 13\nsyllables, 211\nsyllogism, 146, 152\nsymbolic logic, 221-3, 248;\nsee also mathematical logic\nsymbolic writing, 12\nsynapse, 3\nSystem of Electric Remote-Control Accounting, 250\nsystems for handling information, 10\ntable tape, 134\ntables (of values), 103, 136, 224\ntabular value, 136, 224\ntabulator, 47, 52, 119, 235\ntallies, 17\ntangent, 105, 226\ntank (armored), 180, 195\ntank (mercury tank), 171, 179\ntape-controlled carriage, 236\ntape feed, 91, 178-9\ntape punch, 91, 97-8, 137\ntape reels, 170\ntape transmitter, 135, 137\ntelegraph line, 6, 119\ntelephone central station, 138\nteletype, 17\nteletype transmitter, 133, 135\nteletypewriter, 130, 137\nten-position relay, 91-3\nten-position switch, 91-2\nten-pulses, 120-1\ntens complement, 224\n\n\ntest scoring machine, 236\nthen, 146-7\nthermostat, 187\nthinking, 1-5, 10, 97\ntimed electrical currents, 44\ntiming contact, 94\ntolerances, 67, 105\ntorque, 73, 86\ntorque amplifier, 73\ntrajectories, 69, 114, 141\ntransfer circuit, 33\ntransferring, 31, 34, 100, 119, 167\ntranslating, 57\ntransmitter, 74\ntriggering control, 183, 186-7\ntrigonometric tables, 226\ntrigonometric tangent, 105, 226\ntruth, 144\ntruth table, 147, 155, 222\ntruth value, 26, 58, 105, 147, 222\ntuning, 183\nturning force, 72\n12 position, 45\ntwo-position relay, 21, 91-2;\nsee also relay\ntwo-position switch, 91-2\ntypewriter, 16, 18\ntypewriter carriage, 53\nunattended operation, 174\nunderstanding, 212-3, 231\nunemployment, 201-2\nUnequal (output of comparer), 57\nunit of information, 11, 14-5, 169\nUnited Nations, 203, 208\nUnited States Army Ordnance Department, 113-4\nUnivac, 250\nUniversity of Pennsylvania, 7, 113\nunknowns, 141\nUpper Brushes, 52\n\n\nvalue tape code, 96\nvalue tape feed, 95-6\nvariables, 84, 223\nvel (Latin), 149\nverifier, 47-8, 235\nvibration, 69\nVocoder, 255\nVoder, 254\nvoltage, 74\nWatson Scientific Computing Laboratory, 239\nweather control, 189, 255\nweather forecasting, 189, 255\nwheel (of a counter), 78\nwhite elephant, 73, 114\nwinch, 73\nwords for explaining, 209-12\nX, 59\nX distributor, 59\nX Pickup, 59\nX punch, 45, 58\nX selector, 59\nzero, 133, 212\nzh (sound), 13, 185\nZuse Computer, 250\n\n\nFootnotes:\n[1] Copyright 1923 by Doubleday, Page and Co ; all rights\nreserved; quotations reprinted by permission of Karel Čapek\nand Samuel French [2] The preceding word is the spoken word, not the written\none [3] The preceding word is the spoken word, not the written\none [4] The preceding word is the spoken word, not the written\none [5] The preceding word is the spoken word, not the written\none Transcriber’s Notes:\nThe illustrations have been moved so that they do not break up paragraphs\nand so that they are next to the text they illustrate Typographical and punctuation errors have been silently corrected *** END OF THE PROJECT GUTENBERG EBOOK GIANT BRAINS; OR,\nMACHINES THAT THINK ***\nUpdated editions will replace the previous one—the old editions will\nbe renamed Creating the works from print editions not protected by U",
    "Creating the works from print editions not protected by U S S copyright\nlaw means that no one owns a United States copyright in these works,\nso the Foundation (and you ) can copy and distribute it in the United\nStates without permission and without paying copyright royalties Special rules, set forth in the General Terms of Use part of this license,\napply to copying and distributing Project Gutenberg™ electronic\nworks to protect the PROJECT GUTENBERG™ concept and trademark Project Gutenberg is a registered trademark, and may not be used if\nyou charge for an eBook, except by following the terms of the\ntrademark license, including paying royalties for use of the Project\nGutenberg trademark If you do not charge anything for copies of this\neBook, complying with the trademark license is very easy You may\nuse this eBook for nearly any purpose such as creation of derivative\nworks, reports, performances and research Project Gutenberg eBooks\nmay be modified and printed and given away—you may do practically\nANYTHING in the United States with eBooks not protected by U S copyright law Redistribution is subject to the trademark license,\nespecially commercial redistribution START: FULL LICENSE\n\n\nTHE FULL PROJECT GUTENBERG LICENSE\nPLEASE READ THIS BEFORE YOU DISTRIBUTE OR USE THIS WORK\nTo protect the Project Gutenberg™ mission of promoting the free\ndistribution of electronic works, by using or distributing this work (or\nany other work associated in any way with the phrase “Project\nGutenberg”), you agree to comply with all the terms of the Full\nProject Gutenberg™ License available with this file or online at\nwww gutenberg org/license Section 1 General Terms of Use and Redistributing Project\nGutenberg™ electronic works\n1 A By reading or using any part of this Project Gutenberg™\nelectronic work, you indicate that you have read, understand, agree to\nand accept all the terms of this license and intellectual property\n(trademark/copyright) agreement If you do not agree to abide by all\nthe terms of this agreement, you must cease using and return or\ndestroy all copies of Project Gutenberg™ electronic works in your\npossession If you paid a fee for obtaining a copy of or access to a\nProject Gutenberg™ electronic work and you do not agree to be bound\nby the terms of this agreement, you may obtain a refund from the\nperson or entity to whom you paid the fee as set forth in paragraph\n1 E 8 1 B “Project Gutenberg” is a registered trademark It may only be\nused on or associated in any way with an electronic work by people\nwho agree to be bound by the terms of this agreement There are a\nfew things that you can do with most Project Gutenberg™ electronic\nworks even without complying with the full terms of this agreement See paragraph 1 C below There are a lot of things you can do with\nProject Gutenberg™ electronic works if you follow the terms of this\nagreement and help preserve free future access to Project Gutenberg™\nelectronic works See paragraph 1 E below 1 C The Project Gutenberg Literary Archive Foundation (“the\nFoundation” or PGLAF), owns a compilation copyright in the\ncollection of Project Gutenberg™ electronic works Nearly all the\nindividual works in the collection are in the public domain in the\nUnited States If an individual work is unprotected by copyright law\nin the United States and you are located in the United States, we do\nnot claim a right to prevent you from copying, distributing,\n\n\nperforming, displaying or creating derivative works based on the work\nas long as all references to Project Gutenberg are removed Of course,\nwe hope that you will support the Project Gutenberg™ mission of\npromoting free access to electronic works by freely sharing Project\nGutenberg™ works in compliance with the terms of this agreement for\nkeeping the Project Gutenberg™ name associated with the work You\ncan easily comply with the terms of this agreement by keeping this\nwork in the same format with its attached full Project Gutenberg™\nLicense when you share it without charge with others",
    "You\ncan easily comply with the terms of this agreement by keeping this\nwork in the same format with its attached full Project Gutenberg™\nLicense when you share it without charge with others 1 D The copyright laws of the place where you are located also\ngovern what you can do with this work Copyright laws in most\ncountries are in a constant state of change If you are outside the\nUnited States, check the laws of your country in addition to the terms\nof this agreement before downloading, copying, displaying,\nperforming, distributing or creating derivative works based on this\nwork or any other Project Gutenberg™ work The Foundation makes\nno representations concerning the copyright status of any work in any\ncountry other than the United States The Foundation makes\nno representations concerning the copyright status of any work in any\ncountry other than the United States 1 E Unless you have removed all references to Project Gutenberg:\n1 E 1 The following sentence, with active links to, or other immediate\naccess to, the full Project Gutenberg™ License must appear\nprominently whenever any copy of a Project Gutenberg™ work (any\nwork on which the phrase “Project Gutenberg” appears, or with which\nthe phrase “Project Gutenberg” is associated) is accessed, displayed,\nperformed, viewed, copied or distributed:\nThis eBook is for the use of anyone anywhere in the\nUnited States and most other parts of the world at no\ncost and with almost no restrictions whatsoever You\nmay copy it, give it away or re-use it under the terms\nof the Project Gutenberg License included with this\neBook or online at www gutenberg org If you are not\nlocated in the United States, you will have to check\nthe laws of the country where you are located before\nusing this eBook",
    "If you are not\nlocated in the United States, you will have to check\nthe laws of the country where you are located before\nusing this eBook 1 E 2 2 If an individual Project Gutenberg™ electronic work is derived\nfrom texts not protected by U S copyright law (does not contain a\nnotice indicating that it is posted with permission of the copyright\nholder), the work can be copied and distributed to anyone in the\n\n\nUnited States without paying any fees or charges If you are\nredistributing or providing access to a work with the phrase “Project\nGutenberg” associated with or appearing on the work, you must\ncomply either with the requirements of paragraphs 1 If you are\nredistributing or providing access to a work with the phrase “Project\nGutenberg” associated with or appearing on the work, you must\ncomply either with the requirements of paragraphs 1 E 1 through\n1 E 7 or obtain permission for the use of the work and the Project\nGutenberg™ trademark as set forth in paragraphs 1 E 8 or 1 E 9 1 E 3 If an individual Project Gutenberg™ electronic work is posted\nwith the permission of the copyright holder, your use and distribution\nmust comply with both paragraphs 1 E 1 through 1 E 7 and any\nadditional terms imposed by the copyright holder Additional terms\nwill be linked to the Project Gutenberg™ License for all works posted\nwith the permission of the copyright holder found at the beginning of\nthis work 1 E 4 Do not unlink or detach or remove the full Project Gutenberg™\nLicense terms from this work, or any files containing a part of this\nwork or any other work associated with Project Gutenberg™ 1 E 5",
    "5 Do not copy, display, perform, distribute or redistribute this\nelectronic work, or any part of this electronic work, without\nprominently displaying the sentence set forth in paragraph 1 E 1 with\nactive links or immediate access to the full terms of the Project\nGutenberg™ License 1 E 6 6 You may convert to and distribute this work in any binary,\ncompressed, marked up, nonproprietary or proprietary form,\nincluding any word processing or hypertext form However, if you\nprovide access to or distribute copies of a Project Gutenberg™ work in\na format other than “Plain Vanilla ASCII” or other format used in the\nofficial version posted on the official Project Gutenberg™ website\n(www gutenberg org), you must, at no additional cost, fee or expense\nto the user, provide a copy, a means of exporting a copy, or a means\nof obtaining a copy upon request, of the work in its original “Plain\nVanilla ASCII” or other form Any alternate format must include the\nfull Project Gutenberg™ License as specified in paragraph 1 Any alternate format must include the\nfull Project Gutenberg™ License as specified in paragraph 1 E 1 1 E 7 7 Do not charge a fee for access to, viewing, displaying,\nperforming, copying or distributing any Project Gutenberg™ works\nunless you comply with paragraph 1 Do not charge a fee for access to, viewing, displaying,\nperforming, copying or distributing any Project Gutenberg™ works\nunless you comply with paragraph 1 E 8 or 1 E 9 1 E 8",
    "8 You may charge a reasonable fee for copies of or providing\naccess to or distributing Project Gutenberg™ electronic works\nprovided that:\n•  • You pay a royalty fee of 20% of the gross profits you derive\n\n\nfrom the use of Project Gutenberg™ works calculated using the\nmethod you already use to calculate your applicable taxes The\nfee is owed to the owner of the Project Gutenberg™ trademark,\nbut he has agreed to donate royalties under this paragraph to\nthe Project Gutenberg Literary Archive Foundation Royalty\npayments must be paid within 60 days following each date on\nwhich you prepare (or are legally required to prepare) your\nperiodic tax returns Royalty payments should be clearly\nmarked as such and sent to the Project Gutenberg Literary\nArchive Foundation at the address specified in Section 4,\n“Information about donations to the Project Gutenberg Literary\nArchive Foundation ”\n•  • You provide a full refund of any money paid by a user who\nnotifies you in writing (or by e-mail) within 30 days of receipt\nthat s/he does not agree to the terms of the full Project\nGutenberg™ License You must require such a user to return or\ndestroy all copies of the works possessed in a physical medium\nand discontinue all use of and all access to other copies of\nProject Gutenberg™ works •  • You provide, in accordance with paragraph 1 F 3, a full refund\nof any money paid for a work or a replacement copy, if a defect\nin the electronic work is discovered and reported to you within\n90 days of receipt of the work •  • You comply with all other terms of this agreement for free\ndistribution of Project Gutenberg™ works 1 E 9",
    "9 If you wish to charge a fee or distribute a Project Gutenberg™\nelectronic work or group of works on different terms than are set forth\nin this agreement, you must obtain permission in writing from the\nProject Gutenberg Literary Archive Foundation, the manager of the\nProject Gutenberg™ trademark Contact the Foundation as set forth in\nSection 3 below 1 F 1 F 1 Project Gutenberg volunteers and employees expend\nconsiderable effort to identify, do copyright research on, transcribe\nand proofread works not protected by U S S copyright law in creating\nthe Project Gutenberg™ collection Despite these efforts, Project\nGutenberg™ electronic works, and the medium on which they may be\nstored, may contain “Defects,” such as, but not limited to, incomplete,\ninaccurate or corrupt data, transcription errors, a copyright or other\n\n\nintellectual property infringement, a defective or damaged disk or\nother medium, a computer virus, or computer codes that damage or\ncannot be read by your equipment 1 F 2 LIMITED WARRANTY, DISCLAIMER OF DAMAGES - Except for\nthe “Right of Replacement or Refund” described in paragraph 1 F 3,\nthe Project Gutenberg Literary Archive Foundation, the owner of the\nProject Gutenberg™ trademark, and any other party distributing a\nProject Gutenberg™ electronic work under this agreement, disclaim all\nliability to you for damages, costs and expenses, including legal fees YOU AGREE THAT YOU HAVE NO REMEDIES FOR NEGLIGENCE,\nSTRICT LIABILITY, BREACH OF WARRANTY OR BREACH OF\nCONTRACT EXCEPT THOSE PROVIDED IN PARAGRAPH 1 F 3 YOU\nAGREE THAT THE FOUNDATION, THE TRADEMARK OWNER, AND\nANY DISTRIBUTOR UNDER THIS AGREEMENT WILL NOT BE LIABLE\nTO YOU FOR ACTUAL, DIRECT, INDIRECT, CONSEQUENTIAL,\nPUNITIVE OR INCIDENTAL DAMAGES EVEN IF YOU GIVE NOTICE\nOF THE POSSIBILITY OF SUCH DAMAGE",
    "YOU\nAGREE THAT THE FOUNDATION, THE TRADEMARK OWNER, AND\nANY DISTRIBUTOR UNDER THIS AGREEMENT WILL NOT BE LIABLE\nTO YOU FOR ACTUAL, DIRECT, INDIRECT, CONSEQUENTIAL,\nPUNITIVE OR INCIDENTAL DAMAGES EVEN IF YOU GIVE NOTICE\nOF THE POSSIBILITY OF SUCH DAMAGE 1 F 3 LIMITED RIGHT OF REPLACEMENT OR REFUND - If you\ndiscover a defect in this electronic work within 90 days of receiving it,\nyou can receive a refund of the money (if any) you paid for it by\nsending a written explanation to the person you received the work\nfrom If you received the work on a physical medium, you must return\nthe medium with your written explanation The person or entity that\nprovided you with the defective work may elect to provide a\nreplacement copy in lieu of a refund If you received the work\nelectronically, the person or entity providing it to you may choose to\ngive you a second opportunity to receive the work electronically in\nlieu of a refund If the second copy is also defective, you may demand\na refund in writing without further opportunities to fix the problem If the second copy is also defective, you may demand\na refund in writing without further opportunities to fix the problem 1 F 4 Except for the limited right of replacement or refund set forth in\nparagraph 1 F 3, this work is provided to you ‘AS-IS’, WITH NO\nOTHER WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO WARRANTIES OF\nMERCHANTABILITY OR FITNESS FOR ANY PURPOSE 1 F 5",
    "5 Some states do not allow disclaimers of certain implied\nwarranties or the exclusion or limitation of certain types of damages If any disclaimer or limitation set forth in this agreement violates the\nlaw of the state applicable to this agreement, the agreement shall be\ninterpreted to make the maximum disclaimer or limitation permitted\nby the applicable state law The invalidity or unenforceability of any\n\n\nprovision of this agreement shall not void the remaining provisions 1 F 6 INDEMNITY - You agree to indemnify and hold the Foundation,\nthe trademark owner, any agent or employee of the Foundation,\nanyone providing copies of Project Gutenberg™ electronic works in\naccordance with this agreement, and any volunteers associated with\nthe production, promotion and distribution of Project Gutenberg™\nelectronic works, harmless from all liability, costs and expenses,\nincluding legal fees, that arise directly or indirectly from any of the\nfollowing which you do or cause to occur: (a) distribution of this or\nany Project Gutenberg™ work, (b) alteration, modification, or\nadditions or deletions to any Project Gutenberg™ work, and (c) any\nDefect you cause Section 2 Information about the Mission of Project Gutenberg™\nProject Gutenberg™ is synonymous with the free distribution of\nelectronic works in formats readable by the widest variety of\ncomputers including obsolete, old, middle-aged and new computers It\nexists because of the efforts of hundreds of volunteers and donations\nfrom people in all walks of life Volunteers and financial support to provide volunteers with the\nassistance they need are critical to reaching Project Gutenberg™’s\ngoals and ensuring that the Project Gutenberg™ collection will remain\nfreely available for generations to come In 2001, the Project\nGutenberg Literary Archive Foundation was created to provide a\nsecure and permanent future for Project Gutenberg™ and future\ngenerations To learn more about the Project Gutenberg Literary\nArchive Foundation and how your efforts and donations can help, see\nSections 3 and 4 and the Foundation information page at\nwww gutenberg org Section 3 Information about the Project Gutenberg Literary Archive\nFoundation\nThe Project Gutenberg Literary Archive Foundation is a non-profit\n501(c)(3) educational corporation organized under the laws of the\nstate of Mississippi and granted tax exempt status by the Internal\nRevenue Service The Foundation’s EIN or federal tax identification\nnumber is 64-6221541 Contributions to the Project Gutenberg\nLiterary Archive Foundation are tax deductible to the full extent\npermitted by U S federal laws and your state’s laws The Foundation’s business office is located at 809 North 1500 West,\nSalt Lake City, UT 84116, (801) 596-1887 Email contact links and up\nto date contact information can be found at the Foundation’s website\n\n\nand official page at www gutenberg org/contact\nSection 4 Information about Donations to the Project Gutenberg\nLiterary Archive Foundation\nProject Gutenberg™ depends upon and cannot survive without\nwidespread public support and donations to carry out its mission of\nincreasing the number of public domain and licensed works that can\nbe freely distributed in machine-readable form accessible by the\nwidest array of equipment including outdated equipment Many small\ndonations ($1 to $5,000) are particularly important to maintaining\ntax exempt status with the IRS The Foundation is committed to complying with the laws regulating\ncharities and charitable donations in all 50 states of the United States Compliance requirements are not uniform and it takes a considerable\neffort, much paperwork and many fees to meet and keep up with\nthese requirements We do not solicit donations in locations where we\nhave not received written confirmation of compliance To SEND\nDONATIONS or determine the status of compliance for any particular\nstate visit www",
    "To SEND\nDONATIONS or determine the status of compliance for any particular\nstate visit www gutenberg org/donate While we cannot and do not solicit contributions from states where\nwe have not met the solicitation requirements, we know of no\nprohibition against accepting unsolicited donations from donors in\nsuch states who approach us with offers to donate International donations are gratefully accepted, but we cannot make\nany statements concerning tax treatment of donations received from\noutside the United States U S laws alone swamp our small staff laws alone swamp our small staff Please check the Project Gutenberg web pages for current donation\nmethods and addresses Donations are accepted in a number of other\nways including checks, online payments and credit card donations To\ndonate, please visit: www gutenberg org/donate Section 5 General Information About Project Gutenberg™ electronic\nworks\nProfessor Michael S Hart was the originator of the Project\nGutenberg™ concept of a library of electronic works that could be\nfreely shared with anyone For forty years, he produced and\ndistributed Project Gutenberg™ eBooks with only a loose network of\nvolunteer support Project Gutenberg™ eBooks are often created from several printed\neditions, all of which are confirmed as not protected by copyright in\nthe U Project Gutenberg™ eBooks are often created from several printed\neditions, all of which are confirmed as not protected by copyright in\nthe U S unless a copyright notice is included Thus, we do not\nnecessarily keep eBooks in compliance with any particular paper\n\n\nedition Thus, we do not\nnecessarily keep eBooks in compliance with any particular paper\n\n\nedition Most people start at our website which has the main PG search\nfacility: www gutenberg org This website includes information about Project Gutenberg™,\nincluding how to make donations to the Project Gutenberg Literary\nArchive Foundation, how to help produce our new eBooks, and how\nto subscribe to our email newsletter to hear about new eBooks"
  ]
}