{
  "filename": "Small_Satellite_Constellation_Separation_using_Lin.pdf",
  "text_length": 35458,
  "chunk_count": 10,
  "chunks": [
    "## **Small Satellite Constellation Separation using Linear Programming** **based Differential Drag Commands**\n\nEmmanuel Sin [1], Murat Arcak [2] and Andrew Packard [3]\n\n\n\n_**Abstract**_ **— We study the optimal control of an arbitrarily**\n**large constellation of small satellites operating in low Earth**\n**orbit Simulating the lack of on-board propulsion, we limit**\n**our actuation to the use of differential drag maneuvers to**\n**make in-plane changes to the satellite orbits We propose an**\n**efficient method to separate a cluster of satellites into a desired**\n**constellation shape while respecting actuation constraints and**\n**maximizing the operational lifetime of the constellation By**\n**posing the problem as a linear program, we solve for the optimal**\n**drag commands for each of the satellites on a daily basis with a**\n**shrinking-horizon model predictive control approach We then**\n**apply this control strategy in a nonlinear orbital dynamics**\n**simulation with a simple, varying atmospheric density model **\n**We demonstrate the ability to control a cluster of 100+ satellites**\n**starting at the same initial conditions in a circular low Earth**\n**orbit to form an equally spaced constellation (with a relative**\n**angular separation error tolerance of one-tenth a degree) The**\n**constellation separation task can be executed in 71 days, a**\n**time frame that is competitive for the state-of-the-practice This**\n**method allows us to trade the time required to converge to the**\n**desired constellation with a sacrifice in the overall constellation**\n**lifetime, measured as the maximum altitude loss experienced by**\n**one of the satellites in the group after the separation maneuvers **\n\n\nI **\n\n\nI INTRODUCTION\n\n\nCubesats are miniature satellites comprised of one or more\n10 _×_ 10 _×_ 10 cm cubic units Due to the use of commercial\n\noff-the-shelf components and a widely accepted reference design, cubesats have become a standard platform for research\n\n[1] As the cost of both satellite manufacturing and launch\nservices decrease, new commercial and scientific applications\nof cubesats will emerge [2] In particular, new opportunities\nmay arise from the use of cubesats in large-scale, coordinated\nconstellations [3] Coordinated groups of small satellites can\nenable mission objectives that may be difficult or impossible with single, monolithic satellites (e g , high-cadence\nor multipoint measurements, communication relays) In fact,\nsmall satellite constellations have already been launched for\ncommercial purposes, such as Earth imaging [4], and plans\nhave been proposed for their use in providing space-based\nInternet [5]-[6] However, as the number of satellites increases, it becomes\nmore difficult to operate the constellation Satellite constel\n\n1 Emmanuel Sin is a Graduate Student of the Department of\nMechanical Engineering at the University of California, Berkeley\nemansin@berkeley edu\n2 Murat Arcak is a Professor of the Department of Electrical Engineering and Computer Sciences at the University of California, Berkeley\narcak@berkeley edu\n3 Andrew Packard is a Professor of the Department of\nMechanical Engineering at the University of California, Berkeley\napackard@berkeley edu\n\n\n\nlation maneuvers can be divided into three broad categories:\n1) initial acquisition of desired formation, 2) station-keeping\nof desired orbital positions and motion in the presence of\ndisturbances, and 3) reconfiguration to a different desired\nformation The current state-of-practice requires the control\nof each individual spacecraft from a command center on\nthe ground that monitors the motion of each satellite Thus,\nthere exists the need for a centralized and optimal method\nof controlling satellite constellations from the ground Cubesats typically employ a limited actuator suite compared to their larger cousins and may lack propulsive\nthrusters or other actuators, resulting in limited control\nauthority In such cases, a cubesat may have to rely on\n“passive” means to make orbit maneuvers One well-studied\nmethod called differential drag [7]-[8] employs gyroscopic\nactuators, such as reaction wheels, to not only change a\nsatellite’s orientation but also its orbital in-plane motion, such\nas its altitude and angular speed By changing the satellite’s\ncross-sectional area exposed to the incident air molecules in\nthe atmosphere of low Earth orbit, a varying drag force can\nbe applied in the opposite direction of the satellite’s orbital\nvelocity In what is commonly referred to as the drag paradox\n\n[9]-[10], this drag force makes the satellite fall in altitude but\nalso increase in angular speed By causing a differential in\nthe angular speeds of satellites that are in the same orbit, their\nrelative positions can be changed However, differential drag\nmaneuvers that increase a satellite’s velocity also result in a\nproportional loss in its altitude, effectively reducing its time\nin orbit Hence, these differential drag inputs must be applied\nsparingly so as to not unnecessarily reduce the lifetime of\nthe satellites Planet is a San Francisco based Earth imaging company\nthat has successfully used differential drag to form a “linescanner” constellation using 3U (30 _×_ 10 _×_ 10) cubesats The\nconstellation allows Planet to produce a complete image of\nthe Earth’s surface every day Planet describes the use of\na bang-bang control approach that commands each satellite\nto enter either a high-drag or a low-drag window at a\ncertain time and for a specific duration [11]-[12] This control\nstrategy is considered to be operationally simpler compared\nto other approaches where the optimal drag area commands\nmay take on any value within the continuous range between\nlow-drag and high-drag However, as the performance of\ncommercially-available ADCS (attitude determination and\ncontrol system) sensors and actuators for cubesats increase,\nit may be of value to investigate different control strategies The subsequent sections are organized as follows: Section\nII begins by introducing the dynamical models used in this\n\n\npaper In Section III we formulate an optimization problem\nthat we then transform into a linear program to solve for the\noptimal inputs Section IV shows our results of applying the\nlinear program on the nonlinear orbital dynamics We end\nwith Section V where we state concluding remarks II DYNAMICAL MODELS\n\n\nIn this section, we first describe the nonlinear “truth”\nmodel that we use for simulating satellite orbital dynamics We then introduce the approximate discrete-time model to\nbe used in our linear program",
    "We then introduce the approximate discrete-time model to\nbe used in our linear program _A Orbital Dynamical Model_\n\n\nTo determine the motion of a satellite orbiting the Earth,\nwe start with the two-body problem where we assume that\nthe barycenter of the system is co-located with the center of\na spherically, symmetric Earth (i e , the mass of the satellite\nis negligible) The satellite’s motion can be described by the\nfollowing second-order ordinary differential equation [13]:\n\n_⃗r_ ¨ = _−_ _⃗_ _[µ]_ _[E]_ (1)\n\n_|r|_ [3] _[⃗][r]_ [ +] _[⃗][a]_ _[perturb]_\n\n\nwhere in the first term, _⃗r_ is the position vector pointing\nfrom the center of the Earth to the satellite and _µ_ _E_ is\nthe gravitational parameter of the Earth (i e , gravitational\nconstant, _G_, multiplied by the mass of the Earth) While the first term represents the gravitational force\nexerted on the satellite by the Earth, the second term, _⃗a_ _perturb_,\nrepresents the specific forces due to perturbations Examples\nof such perturbations include the gravitational effects caused\nby the oblateness of the Earth, gravity from third bodies\n(e g , Moon, Sun, other planets), solar radiation pressure and\natmospheric drag _B _B Atmospheric Drag Perturbation Model_\n\n\nWe now describe the atmospheric drag force model from\nwhich we derive our control authority As a satellite moves\nalong its orbit, it experiences an atmospheric drag force that\nacts against its velocity relative to the atmosphere The massspecific acceleration due to this atmospheric drag force is\ngiven by the equation [14]:\n\n\n\n_⃗_\n_a_ _atmdrag_ = _−_ [1]\n\n\n\n_m_ _[ρ][|][⃗][v]_ _[rel]_ _[|·][⃗][v]_ _[rel]_ (2)\n\n\n\n_C_ _D_ _A_\n\n[1]\n\n2 _m_\n\n\n\nThe relative velocity of the satellite with respect to the\natmosphere is approximated based on the assumption that\nthe atmosphere rotates with the same velocity as that of the\nEarth’s rotation [14]:\n\n\n_⃗v_ _rel_ = _⃗v_ _sat_ _−_ _ω⃗_ _E_ _×⃗r_ _sat_ (3)\n\n\nwhere _⃗v_ _sat_ is the satellite velocity vector, _⃗r_ _sat_ is the satellite\nposition vector, and _⃗w_ _E_ is the Earth’s angular velocity about\nits axis _C Simulation Model_\n\n\nIn this subsection we develop a simple orbital dynamical\nmodel for simulation purposes Since two-body motion is\nplanar in an Earth-centered inertial frame, we begin by using\npolar coordinates to represent the satellite orbital kinematics\nin the plane _⃗r_ = _re_ ~~_r_~~ (4a)\n_⃗r_ ˙ = ˙ _re_ ~~_r_~~ + _r_ ˙ _θ_ _e_ _θ_ (4b)\n_⃗r_ ¨ = ~~�~~ _r_ ¨ _−_ _rθ_ [˙] [2] ~~[�]~~ _e_ _r_ + �2˙ _rθ_ [˙] + _rθ_ [¨] � _e_ ~~_θ_~~ (4c)\n\n\nWe denote the magnitude of the radial position with _r_ and\nthe angular position with _θ_ We use _e_ ~~_r_~~, _e_ ~~_θ_~~, and _e_ _N_ as the\nunit vectors in the radial, tangential, and normal directions\nof the orbital plane, respectively If we include the right hand terms of (1), we get the\nfollowing equations of motion:\n\n_r_ ¨ = _rθ_ [˙] [2] _−_ _[µ]_ _r_ [2] _[E]_ [+(] _[⃗][a]_ _[perturb]_ [)] _[r]_ (5a)\n\n_θ_ ¨ = [1] � _−_ 2˙ _rθ_ [˙] +( _⃗a_ _perturb_ ) _θ_ � (5b)\n\n_r_\n\n\nWe now introduce three assumptions that regard the perturbation acceleration terms First, we ignore all perturbations\nexcept for atmospheric drag (i e , _⃗a_ _perturb_ _≈_ _⃗a_ _atmdrag_ ) While\ndifferential drag takes advantage of the fact that atmospheric\ndrag can secularly affect the in-plane size and shape of an\norbit (i",
    "While\ndifferential drag takes advantage of the fact that atmospheric\ndrag can secularly affect the in-plane size and shape of an\norbit (i e , its semi-major axis and eccentricity), the other\ndominant perturbations mainly cause secular changes that are\nout-of-plane, which we do not have control over Thus, we\nomit those perturbations in our simplified simulation model Second, we assume near-circular orbits where the magnitude of the satellite’s velocity vector in the tangential\ndirection of the orbital plane is significantly larger than in\nthe radial direction Since atmospheric drag is antiparallel\nto the the velocity vector, we ignore the radial acceleration\ncomponent of the drag perturbation That is, ( _⃗a_ _atmdrag_ ) _r_ _≈_ 0 We are left with the following approximated equations of\nmotion:\n\n_r_ ¨ = _rθ_ [˙] [2] _−_ _[µ]_ _[E]_ (6a)\n\n_r_ [2]\n\n_θ_ ¨ = [1] � _−_ 2˙ _rθ_ [˙] +( _⃗a_ _atmdrag_ ) _θ_ � (6b)\n\n_r_\n\n\nFinally, we must approximate the Earth’s angular velocity\nin the coordinate frame of the orbital plane so that we\nmay estimate the satellite’s velocity with respect to the\natmosphere (3) Based on the inclination ( _φ |_ 0 _≤_ _φ ≤_ 180 _[◦]_ )\nof a satellite’s orbit, we only consider the component of the\n\n\n\nwhere:\n\n_C_ _D_ : satellite drag coefficient\n_A_ : surface area exposed to incident stream\n_m_ : satellite mass\n\n_ρ_ : atmospheric density at the satellite position\n_⃗v_ _rel_ : velocity of satellite relative to the atmosphere\n\n\nFor the simulations in this paper, we use the same constant\nvalues used by Li and Mason [11] for the satellite’s drag\ncoefficient, mass, maximum and minimum drag surface areas\n(i",
    "Based on the inclination ( _φ |_ 0 _≤_ _φ ≤_ 180 _[◦]_ )\nof a satellite’s orbit, we only consider the component of the\n\n\n\nwhere:\n\n_C_ _D_ : satellite drag coefficient\n_A_ : surface area exposed to incident stream\n_m_ : satellite mass\n\n_ρ_ : atmospheric density at the satellite position\n_⃗v_ _rel_ : velocity of satellite relative to the atmosphere\n\n\nFor the simulations in this paper, we use the same constant\nvalues used by Li and Mason [11] for the satellite’s drag\ncoefficient, mass, maximum and minimum drag surface areas\n(i e , we use _C_ [¯] _D_, ¯ _m_, and _A_ _min_ _≤_ _A ≤_ _A_ _max_ ) , we use _C_ [¯] _D_, ¯ _m_, and _A_ _min_ _≤_ _A ≤_ _A_ _max_ ) For atmospheric\ndensity, we use a simplified version of the Harris-Priester\nmodel, as described by Montenbruck [14], that does not\nconsider diurnal effects Earth’s angular velocity that is about the normal axis of the\norbital plane We assume that both the angular velocity of\nthe Earth about its axis and the inclination of the orbit are\n\nconstant _⃗v_ _rel_ = _rθ_ [˙] _e_ ~~_θ_~~ _−_ � _ω_ ¯ _E_ _cos_ ( _φ_ ¯) _e_ ~~_N_~~ _×_ _re_ ~~_r_~~ � (7a)\n\n= _r_ � _θ_ ˙ _−_ _ω_ ¯ _E_ cos( _φ_ ¯)� _e_ _θ_ (7b)\n\n\nThus, for a near-polar orbit ( _φ ≈_ 90 _[◦]_ ), the relative speed\nof the satellite is essentially the tangential speed of the\nsatellite (i e , the speed of the atmosphere is negligible) For a prograde, equatorial orbit ( _φ_ = 0), the relative speed\nof the satellite is slower since the satellite’s motion is\n\nparallel with the velocity of the atmosphere For a retrograde,\nequatorial orbit ( _φ_ = 180 _[◦]_ ), the relative speed is faster since\nthe satellite’s motion is antiparallel with the atmospheric\nvelocity vector To summarize, we use the following equations to simulate\nthe approximated orbital motion of a satellite ( _ω_ := _θ_ [˙] ):\n\n_r_ ¨ = _rω_ [2] _−_ _[µ]_ _[E]_ (8a)\n\n_r_ [2]\n\n\n\nIII O PTIMIZATION P ROBLEM\n\n\nOur goal is to spread out an initial cluster of satellites\nin low Earth orbit so that there is equal spacing between\neach satellite of the shared orbital plane We would like to\ncomplete this constellation formation maneuver in a fixed\nnumber of days while maximizing the operational lifetime\nof the constellation The operational lifetime can be defined\nas the total number of days that all of the satellites remain\nin orbit Since atmospheric density increases exponentially\nas the altitude decreases, a satellite under atmospheric drag\nexperiences very rapid orbital decay as its altitude drops Thus, our objective is to minimize the drop in altitude of the\nconstellation, which we achieve by maximizing the altitude\nof the lowest satellite in the constellation at the final time\nstep _T_ of the optimization problem:\n\nmaximize _U_ _i_ = min 1 _, ,N_ _r_ _i_ ( _T_ ) (11)\n\n\nNote that if we ignore oblateness and assume a spherical\nEarth, maximizing the altitude of a satellite is equivalent\nto maximizing the magnitude of its radius",
    ",N_ _r_ _i_ ( _T_ ) (11)\n\n\nNote that if we ignore oblateness and assume a spherical\nEarth, maximizing the altitude of a satellite is equivalent\nto maximizing the magnitude of its radius The decision\nvariables are contained in the vector _U_ = [ _u_ 1 (0) _, ,_ _u_ 1 ( _T −_\n1) _, ,_ _u_ _N_ (0) _, ,_ _u_ _N_ ( _T −_ 1)] _[T]_ So, for a constellation of _N_\nsatellites and a total of _T_ time steps in which the problem\nis feasible, there are _NT_ decision variables To achieve equal angular spacing of the satellites at the\ndesired final time step T, we use the following inequality\nconstraint in our optimization problem:\n\n\n_∥_ D _·_ _θ_ ( _T_ ) _−_ ∆ _des_ _∥_ ∞ _≤_ _ε_ _θ_ (12)\n\n\nT\nwhere _θ_ ( _T_ ) = � _θ_ 1 ( _T_ ) _, θ_ 2 ( _T_ ) _, θ_ 3 ( _T_ ) _, ,_ _θ_ _N_ ( _T_ )� is the\nangular position state vector at time _T_ As a convention used\nthroughout this paper, we define _θ_ 1 ( _t_ ) as the angular distance\ntraveled by an arbitrarily designated “lead” satellite in the\norbital plane We use the same vector notation for angular\nvelocity _ω_ ( _T_ ) and radius _r_ ( _T_ ) The matrix _D_ is defined as\n\n\n\n_C_ ¯ _D_\n\n_m_ ¯ _[ρ]_ [(] _[r]_ [)] _[|][⃗][v]_ _[rel]_ [(] _[r][,]_ _[ω]_ [)] _[|]_ [2] _[A]_ � (8b)\n\n\n\n¨\n_θ_ = [1]\n\n\n_r_\n\n\n\n_−_ 2˙ _rω −_ [1]\n� 2\n\n\n\nwhere the notation _ρ_ ( _r_ ) and _⃗v_ _rel_ ( _r,_ _ω_ ) is used to denote\nthat the atmospheric density and relative velocity terms are\ndependent on the satellite’s radius and angular velocity _D Approximate Discrete-Time Model_\nWe introduce a discrete-time dynamical model of the _i_ _[th]_\n\nsatellite for use in our optimization problem:\n\n\n_r_ _i_ ( _k_ + 1) = _r_ _i_ ( _k_ )+ ∆ _t ·_ _S_ _[R]_ ( _r_ _i_ ( _k_ ) _,_ _ω_ _i_ ( _k_ )) _·_ _u_ _i_ ( _k_ ) (9a)\n\n_ω_ _i_ ( _k_ + 1) = _ω_ _i_ ( _k_ )+ ∆ _t ·_ _S_ [Ω] ( _r_ _i_ ( _k_ ) _,_ _ω_ _i_ ( _k_ )) _·_ _u_ _i_ ( _k_ ) (9b)\n\n\n_θ_ _i_ ( _k_ + 1) = _θ_ _i_ ( _k_ )+ ∆ _t ·_ _ω_ _i_ ( _k_ ) (9c)\n\n+ 2 [1] [∆] _[t]_ [2] _[ ·]_ _[S]_ [Ω] [(] _[r]_ _[i]_ [(] _[k]_ [)] _[,]_ _[ω]_ _[i]_ [(] _[k]_ [))] _[·]_ _[u]_ _[i]_ [(] _[k]_ [)]\n\n\nNote that our control input is the cross-sectional surface area\nof the satellite (i e , _u_ := _A_ ) The values for _S_ _[R]_ ( _·_ ) and _S_ [Ω] ( _·_ ) describe how the impact of\nthe input changes depending on the current state of the satellite For example, for any given cross-sectional surface area,\na satellite will experience greater atmospheric drag force at\nlower altitudes than at higher altitudes This relationship is\ncaptured using the Gaussian variation of parameters (VOP)\nform of the equations of motion These equations are used to\napproximate the rates of change of the time-varying elements\nin the solution for the unperturbed, two-body system due to\nsmall perturbing forces Vallado [15] shows that the average\nrate of change in the semi-major axis of an orbit and the\nangular speed of the satellite can be expressed in terms of the\natmospheric drag perturbation By applying Vallado’s results\nto a near-circular orbit, we find the following approximate\nrelationships:\n\n\n\n\n\n\n\n_∈_ R _[N][×][N]_ (13)\n\n\n\n\nD :=\n\n\n\n\n\n\n\n\n\n1 -1\n\n1 -1 1 -1\n\n-1 1\n\n\n\nso that\n\n\n\n\n\n\n\n_∈_ R _[N][×]_ [1] (14)\n\n\n\n\nD _·_ _θ_ ( _T_ ) =\n\n\n\n\n\n\n\n\n\n_θ_ 1 ( _T_ ) _−_ _θ_ 2 ( _T_ )\n_θ_ 2 ( _T_ ) _−_ _θ_ 3 ( _T_ ) _θ_ _N−_ 1 ( _T_ ) _−_ _θ_ _N_ ( _T_ )\n_θ_ _N_ ( _T_ ) _−_ _θ_ 1 ( _T_ )\n\n\n\n_C_ ¯ _D_\n_S_ _[R]_ ( _r,_ _ω_ ) = _−_ _m_ ¯ _[ρ]_ [(] _[r]_ [)] _[|][⃗][v]_ _[rel]_ [(] _[r][,]_ _[ω]_ [)] _[|]_ [2]\n\n�\n\n\n\n_r_ [3]\n\n(10a)\n_µ_ _E_\n\n\n\nrepresents the angular separation between adjacent pairs of\nsatellites at the final time step T We define ∆ _des_ := � 2 _Nπ_ _[,]_ [2] _N_ _[π]_ _[, ,]_ [2] _N_ _[π]_ _[,]_ [-] [2] _N_ _[π]_ [(] _[N][ −]_ [1][)] � T _∈_ R _N×_ 1\n\nas the vector containing the desired angular spacings between\neach adjacent pair of satellites so that the entire constellation\n\n\n\n2 _π_ [2] _[π]_\n\n_N_ _[,]_ _N_\n\n\n\n\n_[π]_ [2] _[π]_\n\n_N_ _[, ,]_ _N_\n\n\n\n\n_[π]_ [2] _[π]_\n\n_N_ _[,]_ [-] _N_\n\n\n\n_N_ _[π]_ [(] _[N][ −]_ [1][)] � T _∈_ R _N×_ 1\n\n\n\n(10b)\n_r_\n\n\n\n_S_ [Ω] ( _r,_ _ω_ ) = [3]\n\n2\n\n\n\n_C_ ¯ _D_\n\n\n\n_C_ _D_ [1]\n\n\n¯\n_m_ _[ρ]_ [(] _[r]_ [)] _[|][⃗][v]_ _[rel]_ [(] _[r][,]_ _[ω]_ [)] _[|]_ [2] _r_\n\n\nis equally spaced The difference D _· θ_ ( _T_ ) _−_ ∆ _des_ results\nin a vector containing the angular spacing errors between\nadjacent pairs By constraining the maximum of the absolute\nvalues of these errors at time _T_ to be less than or equal to\nsome angular position error tolerance _ε_ _θ_, we may achieve\napproximately equal spacing Similarly, by constraining the angular velocities of adjacent satellites to be effectively zero, we can ensure that the\nconstellation will tend to remain equally spaced in the future\nand not just at that instance:\n\n\n_∥_ D _·_ _ω_ ( _T_ ) _∥_ ∞ _≤_ _ε_ _ω_ (15)\n\n\nwhere _ε_ _ω_ is an angular velocity error tolerance close to zero We also impose input constraints since our control authority is limited by the actual physical dimensions of the\nsatellite:\n\n\n_U_ _min_ _≤_ _U ≤_ _U_ _max_ (16)\n\n\nGiven the initial state vectors _r_ (0), _ω_ (0), and _θ_ (0), we\nnow summarize the optimization problem here:\n\n\nmaximize min _r_ _i_ ( _T_ )\n_U_ _i_ =1 _, ,N_\n\n\n\nWe estimate _r_ ( _T_ ), _ω_ ( _T_ ), and _θ_ ( _T_ ) from:\n\n\n\n_T_ _−_ 1\n### r i ( T ) = r i (0)+ ∆ t · ∑ � S [R] ( r ¯ i ( k ), ¯ ω i ( k )) · u i ( k )� (20a)\n\n_k_ =0\n\n\n\n_T_ _−_ 1\n### ω i ( T ) = ω i (0)+ ∆ t · k ∑ =0 � S [Ω] ( r ¯ i ( k ), ¯ ω i ( k )) · u i ( k )� (20b)\n\n\n_T_ _−_ 1\n### θ i ( T ) = θ i (0)+ ∆ t · ∑ ω i ( k )\n\n_k_ =0\n\n\n\n_T_ _−_ 1\n### + [1] 2 [∆] [t] [2] [ ·] k ∑ =0 � S [Ω] ( r ¯ i ( k ), ¯ ω i ( k )) · u i ( k )�\n\n\n\n= _θ_ _i_ (0)+ ∆ _tT_ _ω_ _i_ (0) (20c)\n\n\n_T_ _−_ 1\n### + ∆ t [2] · k ∑ =0 ( T − k − [1] 2 [)] � S [Ω] ( r ¯ i ( k ), ¯ ω i ( k )) · u i ( k )�\n\n\nwhich can be expressed in matrix form:\n\n\n_r_ ( _T_ ) = _r_ (0)+ ∆ _t ·_ _S_ [¯] _[R]_ _·U_ (21a)\n\n_ω_ ( _T_ ) = _ω_ (0)+ ∆ _t ·_ _S_ [¯] [Ω] _·U_ (21b)\n\n_θ_ ( _T_ ) = _θ_ (0)+ ∆ _t ·_ _T ·_ _ω_ (0)+ ∆ _t_ [2] _·_ _S_ [¯] _[α]_ _·U_ (21c)\n\n\nwhere _r_ (0), _ω_ (0) and _θ_ (0) _∈_ R _[N][×]_ [1] are the initial state\nvectors and _S_ [¯] _[R]_, _S_ [¯] [Ω] are large matrices of the form:\n\n\n\n _,_ ¯ _S_ Ω =\n\n\n\n\n\n\n\n\n\n\n\n_S_ ¯ 1 [Ω] _S_ ¯ _N_ [Ω]\n\n\n\n _∈_ R _N×_ ( _N·T_ )\n\n\n\nsubject to _∥_ D _·_ _θ_ ( _T_ ) _−_ ∆ _des_ _∥_ ∞ _≤_ _ε_ _θ_\n\n_∥_ D _·_ _ω_ ( _T_ ) _∥_ ∞ _≤_ _ε_ _ω_\n\n_U_ _min_ _≤_ _U ≤_ _U_ _max_\n\n\n\n_S_ ¯ 1 _[R]_\n\n  _S_ ¯ _N_ _[R]_\n\n\n\n\n\n\n\n(17)\n\n\n\n¯\n_S_ _[R]_ =\n\n\n\nwhich can be restated in the following form by introducing\nan extra decision variable _t_ :\n\n\nminimize _t_\n_U, t_\n\nsubject to       - _r_ ( _T_ ) _≤_ _t ·_ **1** _[N][×]_ [1]\n\n\n\n(22)\nconsisting of the following row vectors along the diagonal\nfor _i_ = 1 _, ,_ _N_ :\n\n\n_S_ ¯ _i_ _[R]_ [= [] _[S]_ _[R]_ [(] _[r]_ [ ¯] _[i]_ [(][0][)] _[,]_ [ ¯] _[ω]_ _[i]_ [(][0][))] _[, ,]_ _[S]_ _[R]_ [(] _[r]_ [ ¯] _[i]_ [(] _[T][ −]_ [1][)] _[,]_ [ ¯] _[ω]_ _[i]_ [(] _[T][ −]_ [1][))]][ (23a)]\n_S_ ¯ _i_ [Ω] [= [] _[S]_ [Ω] [(] _[r]_ [ ¯] _[i]_ [(][0][)] _[,]_ [ ¯] _[ω]_ _[i]_ [(][0][))] _[, ,]_ _[S]_ [Ω] [(] _[r]_ [ ¯] _[i]_ [(] _[T][ −]_ [1][)] _[,]_ [ ¯] _[ω]_ _[i]_ [(] _[T][ −]_ [1][))]][ (23b)]\n\n\nThe _S_ [¯] _[α]_ matrix is of the same form where the diagonal row\nvectors are found by calculating:\n\n\n¯\n_S_ _i_ _[α]_ [=] �( _T −_ [1] 2 [)] _[·]_ **[1]** [1] _[×][T]_ _[ −]_ [[][0] _[, ,]_ [(] _[T][ −]_ [1][)]] � _◦_ _S_ [¯] _i_ [Ω] (23c)\n\n\nwhere ( _◦_ ) is the element-wise product of the two row vectors The _S_ [¯] _[R]_, _S_ [¯] [Ω], and _S_ [¯] _[α]_ matrices are precomputed prior to solving\nthe program, which we can now express in standard form:\n\n\nminimize _f_ _[T]_ _x_\n_x_ (24)\n\nsubject to _Ax ≤_ _b_\n\n\nwhere _x_ = [ _U, t_ ] _[T]_ and _f_ _[T]_ = [ **0** [1] _[×]_ [(] _[N][·][T]_ [)] _,_ 1] The matrices\nused to form the inequality constraints are:\n\n\n\n_∥_ D _·_ _θ_ ( _T_ ) _−_ ∆ _des_ _∥_ ∞ _≤_ _ε_ _θ_\n\n_∥_ D _·_ _ω_ ( _T_ ) _∥_ ∞ _≤_ _ε_ _ω_\n\n_U_ _min_ _≤_ _U ≤_ _U_ _max_ _ _\n\n\n\n(18)\n\n\n\nWe note that _r_ ( _T_ ), _ω_ ( _T_ ), and _θ_ ( _T_ ) do not depend linearly on\nthe input _U_ To obtain a linear program, we first precompute\nreference trajectories ¯ _r_ _i_ ( _·_ ) and ¯ _ω_ _i_ ( _·_ ) by using equations (9)\nand (10) with the conservative assumption that each satellite\nis under minimum drag input until final time step _T_ (i e ,\n_U_ = _U_ _min_ ) We then use the following relationships:\n\n\n_r_ _i_ ( _k_ + 1) = _r_ _i_ ( _k_ )+ ∆ _t ·_ _S_ _[R]_ ( _r_ ¯ _i_ ( _k_ ) _,_ ¯ _ω_ _i_ ( _k_ )) _·_ _u_ _i_ ( _k_ ) (19a)\n\n_ω_ _i_ ( _k_ + 1) = _ω_ _i_ ( _k_ )+ ∆ _t ·_ _S_ [Ω] ( _r_ ¯ _i_ ( _k_ ) _,_ ¯ _ω_ _i_ ( _k_ )) _·_ _u_ _i_ ( _k_ ) (19b)\n\n\n_θ_ _i_ ( _k_ + 1) = _θ_ _i_ ( _k_ )+ ∆ _t ·_ _ω_ _i_ ( _k_ ) (19c)\n\n+ 2 [1] [∆] _[t]_ [2] _[ ·]_ _[S]_ [Ω] [(] _[r]_ [ ¯] _[i]_ [(] _[k]_ [)] _[,]_ [ ¯] _[ω]_ _[i]_ [(] _[k]_ [))] _[·]_ _[u]_ _[i]_ [(] _[k]_ [)]\n\n\nwhere we have substituted the reference trajectories in _S_ _[R]_ ( _·_ )\nand _S_ [Ω] ( _·_ ) so that the equations are linear but time-varying -∆ _t ·_ _S_ [¯] _[R]_ _,_ - **1** _[N][×]_ [1]\n\n\n\n∆ _t_ [2] _·_ _D_ _·_ _S_ [¯] _[α]_ _,_ **0** _[N][×]_ [1]\n\n\n\n\n\n\n\n-∆ _t_ [2] _·_ _D_ _·_ _S_ [¯] _[α]_ _,_ **0** _[N][×]_ [1]\n\n\n\n\n\n\n\n\n\n(25)\n\n\n\n_A_ =\n\n\n\n\n\n\n\n\n\n∆ _t ·_ _D_ _·_ _S_ [¯] [Ω] _,_ **0** _[N][×]_ [1]\n\n\n\n-∆ _t ·_ _D_ _·_ _S_ [¯] [Ω] _,_ **0** _[N][×]_ [1]\n\n\n\nI [(] _[N][·][T]_ [)] _[×]_ [(] _[N][·][T]_ [)] _,_ **0** [(] _[N][·][T]_ [)] _[×]_ [1]\n\n\n\n-I [(] _[N][·][T]_ [)] _[×]_ [(] _[N][·][T]_ [)] _,_ **0** [(] _[N][·][T]_ [)] _[×]_ [1]\n\n\nand\n\n\n_b_ =\n\n\n\n\n\n\n\n\n\n_r_ (0)\n_ε_ _θ_ _·_ **1** _[N][×]_ [1] _−_ _D_ _·_ [ _θ_ (0)+ ∆ _t ·_ _T ·_ _ω_ (0)]+ ∆ _des_\n_ε_ _θ_ _·_ **1** _[N][×]_ [1] + _D_ _·_ [ _θ_ (0)+ ∆ _t ·_ _T ·_ _ω_ (0)] _−_ ∆ _des_\n_ε_ _ω_ _·_ **1** _[N][×]_ [1] _−_ _D_ _·_ _ω_ (0)\n_ε_ _ω_ _·_ **1** _[N][×]_ [1] + _D_ _·_ _ω_ (0)\n_u_ _max_ _·_ **1** [(] _[N][·][T]_ [)] _[×]_ [1]\n\n\n\n(26)\n\n\n\n\n\n\n\n\n\n      - _u_ _min_ _·_ **1** [(] _[N][·][T]_ [)] _[×]_ [1]\n\n\nIV SIMULATION RESULTS\n\n\n\nThe simulation results in this section are based on _N_ = 105\n\nsatellites beginning at the same initial states, corresponding\nto a Sun-synchronous, circular orbit at an altitude of 475 km:\n_µ_ _E_\n_θ_ _i_ (0) = 0, _r_ _i_ (0) = _r_ 0 and _ω_ _i_ (0) = ~~�~~ _r_ _i_ (0) [3] [for all] _[ i]_ [ =][ 1] _[, ,]_ _[N]_ [ ]\n\nIn our linear program, we set the angular separation and\nvelocity error tolerances at _ε_ _θ_ = 0 _ _ 1 degrees and _ε_ _ω_ = 1 _e_ -18\nrad/s, respectively The solution to the program corresponds\nto optimal drag area commands (i e , desired cross-sectional\nsurface areas) that are sent simultaneously to all satellites\nonce every 24 hours The drag area commands are allowed\nto take on any value within a continuous range between the\nminimum and maximum possible surface areas",
    "The drag area commands are allowed\nto take on any value within a continuous range between the\nminimum and maximum possible surface areas _A Open-loop versus Feedback_\n\n\nStarting at the initial conditions, we determine that the\nlinear program is feasible with a horizon of _T_ = 71 days We apply the optimal input commands in open-loop and find\nthat after 71 days, the angular spacings between adjacent\nsatellites tend to converge towards the desired value of [2] _N_ _[π]_\n\n(see Fig 1) 1) However, due to the approximations made in the\nlinear model (19), none of the angular spacings satisfy the\nangular spacing error tolerance that we defined Furthermore,\nalthough the program expects a maximum altitude drop of\n10 79 km at the end of 71 days, the open-loop simulation\nresults in a worse 11 64 km altitude drop Fig 2 shows how the solution to our initial optimization\nproblem is to utilize the whole range of input values, from\nminimum to maximum, and to give each satellite a different\ninput value at time step _k_ = 0 based on its arbitrary numbering (i e , the 1 _[st]_ satellite receives a maximum drag command\nwhile the _N_ _[th]_ satellite receives a minimum drag command) By the final time step T, the input value for any particular\nsatellite is “flipped” in intensity compared to its initial value For example, the input for the 1 _[st]_ satellite changes from an\ninitial maximum drag command to a final minimum drag\ncommand All the while, the “middle” satellite receives a\nrelatively steady input value at all steps The result is that the\nsatellites which are arbitrarily assigned low or high numbered\npositions (i e , 1, 2, 3, or",
    "or ( _N −_ 2), ( _N −_ 1), _N_ ) experience\nlarger changes in input than the satellites placed towards the\nmiddle of the constellation position numbering scheme Due to the dissatisfying open-loop performance, we then\nuse a model predictive control (MPC) approach where the\nlinear program is solved at the beginning of each time step\n\n\n\nFig 1: Optimal input commands applied in open-loop result\nin final angular spacing values that fail to land within the\ndesigned error tolerance thresholds (represented by dashed\nlines) Note that the angular spacing between the _N_ _[th]_ and 1 _[st]_\n\nsatellites ( _θ_ _N_ _−_ _θ_ 1 ), which should converge to - [2] _N_ _[π]_ [(] _[N][ −]_ [1][)][, is]\n\nnot included in this figure Fig 2: Optimal input commands for all _N_ satellites applied\nin open-loop each day until horizon _T_ = 71 days but only the first set of control inputs in the sequence is\napplied to the satellites At the first time step, we solve for\nthe horizon _T_ At each subsequent time step, the problem is\nreformulated and solved again but with a shrinking horizon\n(i e , at _k_ = 0, horizon = _T_, at _k_ = 1, horizon = _T −_ 1) By\nsolving the program at each time step with updated states,\nwe are able to correct for prediction errors and the effect of\nun-modeled perturbations By\nsolving the program at each time step with updated states,\nwe are able to correct for prediction errors and the effect of\nun-modeled perturbations As can be seen in Fig 3, when the optimal inputs\nare applied with feedback, an equally-spaced constellation\nis formed within 71 days where all the angular spacings\nsatisfy the designed angular separation error tolerance Also,\ncompared to the 11 64 km altitude loss in the open-loop\n\n\nsimulation, Fig 4 shows that all the satellites under feedback\ncontrol converge in altitude and angular velocity at the\nexpense of losing only 10 71 km in altitude (i e , we conserve\n1 km of altitude), which is very close to the 10 79 km\npredicted by the program at time step _k_ = 0 This 10",
    "This 10 71 km\ndrop in altitude compares to a 2 84 km drop under constant\nminimum drag and a 19 88 km drop under maximum drag,\nfor the same number of days Fig 4 also shows how the\naltitude of each satellite is varied over time, resulting in\nan inversely proportional change in angular velocity This\ndifference in angular velocity between pairs of satellites\nallows the controller to adjust the angular spacings to the\ndesired values Fig 5 shows the input area commands that\nare computed and applied at the beginning of each day Fig 3: Angular spacing between adjacent pairs of satellites\nchange from 0 _[◦]_ to [360] _N_ _[◦]_ _[±]_ _[ε]_ _[θ]_ [ Note that the angular spacing]\n\nbetween the _N_ _[th]_ and 1 _[st]_ satellites ( _θ_ _N_ _−_ _θ_ 1 ), which should\nconverge to - [2] _N_ _[π]_ [(] _[N][ −]_ [1][)][, is also not included in this figure ]\n\n\n_B Trading Constellation Acquisition Time for Lifetime_\n\n\nWe increase the horizon length _T_ (i e , number of days for\nthe satellites to converge to the desired constellation) to determine the effect on the overall lifetime of the constellation Fig 6 shows that as we increase the horizon length from 71\ndays to 98 days, we can reduce the altitude drop by 2 43\nkm, effectively extending the lifetime of the constellation However, increasing the horizon beyond 98 days does not\nresult in further improvement _C _C Maintaining Constellation throughout Lifetime_\n\n\nOnce the equally-spaced constellation is achieved, the\ninitial acquisition phase is complete and the satellites enter\nthe operational mode where they are allowed to “drift” in\na minimum-drag attitude configuration However, when the\nspacing between any adjacent pairs reaches above a certain\nthreshold, we apply the optimal control strategy again, albeit\nwith a much shorter horizon In Fig 7 we show that our\napproach is successful in maintaining the angular separations\nthroughout the operational phase We also observe that the\n\n\n\nFig 4: At the horizon _T_, the altitudes (and angular velocities)\nof the satellites converge, ensuring that the constellation will\nremain in the desired configuration with minimal control\neffort for the remainder of the constellation lifetime Fig 5: The average level of actuation is high both in\nthe beginning and towards the end of optimal constellation\nseparation phase orbital motion of the constellation is relatively “smooth”\nin the operational phase compared to the initial acquisition\nphase (see Fig",
    "orbital motion of the constellation is relatively “smooth”\nin the operational phase compared to the initial acquisition\nphase (see Fig 8) Furthermore, in Fig 9 we see that the\nlevel of actuation required to maintain the constellation is\nsignificantly less than that required in the acquisition phase We arbitrarily define the constellation operational lifetime\nto be the total number of days that none of the satellites drops\nto an altitude of 200 km or less, where spacecraft orbits decay\nrapidly The total constellation lifetime is 1,059 days (2 90\nyears) under this optimal angular separation control strategy As a comparison, a satellite under constant minimum or\nmaximum drag would have a lifetime of approximately 1,410\ndays (3 86 years) or 232 days, respectively Fig 6: Smallest altitude drop of 8 28 km is achieved when\nhorizon length is 98 days Fig 7: Angular separation is maintained for the lifetime of\nconstellation Note that the angular difference between the\n_N_ _[th]_ and 1 _[st]_ satellite reaches a value of - [360] _N_ _[◦]_ [(] _[N][ −]_ [1][)] _[±]_ _[ε]_ _[θ]_ [ ]\n\n\nV CONCLUSIONS\n\n\nAlthough the orbital dynamics are nonlinear, we found that\nboth the altitude and angular velocity of a satellite controlled\nby differential drag can be approximated as linear over the\nrelatively small operating range of a singe day Thus, the\nsolution from our linear program, even when applied in openloop, provides reasonable performance in forming the equally\nspaced constellation To compensate for the prediction error\ncaused by model-process mismatch and improve controller\nperformance, we leverage the feedback mechanism provided\nby the shrinking-horizon MPC approach With feedback,\nwe are able to achieve an equally-spaced constellation that\nsatisfies design tolerances and avoids unnecessary control\naction that reduces operational lifetime We also observed\nthat we can increase the operational lifetime of the constellation by allowing it to form over a longer time frame Fig 8: Once equally spaced, the orbital motion of the\nconstellation is relatively “smooth” compared to the initial,\noptimal constellation separation phase Fig 9: Once equally spaced, relatively minimal actuation is\nrequired to maintain the angular separation for the duration\nof the constellation operational lifetime However, the tradeoff can only be made until a certain point\nat which increasing the horizon further results in decreased\nlifetime Finally, we show that the constellation can be\nmaintained throughout its lifetime by applying the same\noptimal control strategy when the angular spacing errors drift\nabove a designed threshold value ACKNOWLEDGMENT\n\n\nThanks to Professor Simone D’Amico of the Department\nof Aeronautics and Astronautics at Stanford University for\nintroducing this problem in the AA279A: _Space Mechanics_\ncourse of Winter 2017 The authors gratefully acknowledge\nsupport from the National Science Foundation under\ngrant ECCS-1405413 Andrew Packard acknowledges the\ngenerous support from the FANUC Corporation",
    "Andrew Packard acknowledges the\ngenerous support from the FANUC Corporation R EFERENCES\n\n\n[1] J Puig-Suari, C Turner, and W Turner, and W Ahlgren, Development of the standard\nCubeSat deployer and a Cubesat class Picosatellite, IEEE Aerospace\nConference Proceedings, vol 1, 2001 [2] K Woellert, P Ehrenfreund, A J Ricco, H Hertzfeld, Cubesats:\ncost-effective science and technology platforms for emerging and\ndeveloping nations, Advances in Space Research, vol 47, pp 663 684,\n2011 [3] S Bandyopadhyay, R Foust, G P Subramanian, S J Chung, and F Y Hadaegh, Review of Formation Flying and Constellation Missions\nUsing Nanosatellites, Journal of Spacecraft and Rockets, pp 1-12,\n2016 [4] D Selva, D Krejci, A survey and assessment of the capabilities of\nCubesats for Earth observation, Acta Astronautica, vol 74, pp 50-68,\n2012 [5] Y Hu and V Li, Satellite-based Internet: a tutorial, IEEE Communications Magazine, vol 39, no 3, pp 154-162, 2001 [6] F Khan, Mobile Internet from the Heavens,\n[http://arxiv org/abs/1508 02383 ](http://arxiv org/abs/1508 02383)\n\n[7] C L Leonard, W M Hollister, and E V Bergmann, Orbital Formationkeeping with Differential Drag, Journal of Guidance, Control, and\nDynamics, vol 12 no 1, pp 108-113, 1989 [8] B S Kumar, A Ng, K Yoshihara, and A De Ruiter, Differential\nDrag as a Means of Spacecraft Formation Control, IEEE Transactions\non Aerospace and Electronic Systems, vol De Ruiter, Differential\nDrag as a Means of Spacecraft Formation Control, IEEE Transactions\non Aerospace and Electronic Systems, vol 47, no 2, pp 1125-1135,\n2011 [9] B D Mills, Satellite Paradox, American Journal of Physics, vol 2, no 2, pp 115-117, 1959 [10] L Blitzer, Satellite Orbit Paradox: A General View, American Journal\nof Physics, vol 39, pp 882-886, 1971 [11] A Li and J Mason, Optimal Utility of Satellite Constellation Separation with Differential Drag, AIAA/AAS Astrodynamics Specialist\nConference, 2014 [12] C Foster, H Hallam, and J Mason, Orbit Determination and\nDifferential-drag Control of Planet Labs Cubesat Constellations,\nAIAA/AAS Astrodynamics Specialist Conference, 2015 [13] R R Bate, D D Mueller, J E White, Fundamentals of Astrodynamics New York: Dover, 1971, ch 1 [14] O Montenbruck and E Gill, Satellite Orbits New York: Springer,\n2005, ch 3 [15] D A A Vallado, Fundamentals of Astrodynamics and Applications Vallado, Fundamentals of Astrodynamics and Applications California: Microcosm, 2013, ch 9"
  ]
}